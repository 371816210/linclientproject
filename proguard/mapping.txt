android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> N
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> a
    android.os.Bundle getArguments() -> c
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> d
    android.content.res.Resources getResources() -> e
    java.lang.String getString(int) -> b
    android.support.v4.app.FragmentManager getFragmentManager() -> f
    boolean isAdded() -> g
    boolean isVisible() -> h
    boolean isHidden() -> i
    void onHiddenChanged(boolean) -> a
    void startActivity(android.content.Intent) -> a
    void startActivityForResult(android.content.Intent,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> j
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> k
    void onResume() -> l
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> m
    void onStop() -> n
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> o
    void onDestroy() -> p
    void initState() -> q
    void onDetach() -> r
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> s
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> t
    void performStop() -> u
    void performReallyStop() -> v
    void performDestroyView() -> w
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.g:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.k:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    boolean popBackStackImmediate() -> c
    boolean popBackStackImmediate(java.lang.String,int) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.l:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroy() -> q
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> r
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.r:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> android.support.v4.app.s:
    android.os.Handler mHandler -> V
    java.lang.Runnable mRequestFocus -> W
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> X
    android.widget.ListAdapter mAdapter -> N
    android.widget.ListView mList -> O
    android.view.View mEmptyView -> P
    android.widget.TextView mStandardEmptyView -> Q
    android.view.View mProgressContainer -> R
    android.view.View mListContainer -> S
    java.lang.CharSequence mEmptyText -> T
    boolean mListShown -> U
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> o
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> x
android.support.v4.app.ListFragment$1 -> android.support.v4.app.t:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.u:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.v:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.w:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.x:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.y:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.z:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aa:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.CursorLoader -> android.support.v4.a.c:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> f
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> i
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.a.d:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> j
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> k
    boolean isAbandoned() -> l
    boolean isReset() -> m
    void startLoading() -> n
    void onStartLoading() -> g
    void forceLoad() -> o
    void onForceLoad() -> a
    void stopLoading() -> p
    void onStopLoading() -> h
    void reset() -> q
    void onReset() -> i
    boolean takeContentChanged() -> r
    void onContentChanged() -> s
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.a.e:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.f:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.g:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.o:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.w:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.x:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.y:
    long getFrameTime() -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.z:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.aa:
    void postInvalidateOnAnimation(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    int mScrollState -> Z
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> g
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$300() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ab:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ac:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ad:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ae:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.af:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ag:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ah:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ai:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aj:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.android.gcm.GCMBaseIntentService -> com.a.a.a.a:
    android.os.PowerManager$WakeLock sWakeLock -> a
    java.lang.Object LOCK -> b
    java.lang.String[] mSenderIds -> c
    int sCounter -> d
    java.util.Random sRandom -> e
    int MAX_BACKOFF_MS -> f
    java.lang.String TOKEN -> g
    java.lang.String getName(java.lang.String) -> a
    java.lang.String getName(java.lang.String[]) -> a
    java.lang.String[] getSenderIds(android.content.Context) -> a
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onDeletedMessages(android.content.Context,int) -> a
    boolean onRecoverableError(android.content.Context,java.lang.String) -> a
    void onError(android.content.Context,java.lang.String) -> b
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void runIntentInService(android.content.Context,android.content.Intent,java.lang.String) -> a
    void handleRegistration(android.content.Context,android.content.Intent) -> b
com.google.android.gcm.GCMBroadcastReceiver -> com.a.a.a.b:
    boolean mReceiverSet -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String getGCMIntentServiceClassName(android.content.Context) -> a
    java.lang.String getDefaultIntentServiceClassName(android.content.Context) -> b
com.google.android.gcm.GCMRegistrar -> com.a.a.a.c:
    com.google.android.gcm.GCMBroadcastReceiver sRetryReceiver -> a
    java.lang.String sRetryReceiverClassName -> b
    void internalRegister(android.content.Context,java.lang.String[]) -> a
    java.lang.String getFlatSenderIds(java.lang.String[]) -> a
    void internalUnregister(android.content.Context) -> a
    void setRetryBroadcastReceiver(android.content.Context) -> b
    void setRetryReceiverClassName(java.lang.String) -> a
    java.lang.String getRegistrationId(android.content.Context) -> c
    boolean isRegistered(android.content.Context) -> d
    java.lang.String clearRegistrationId(android.content.Context) -> e
    java.lang.String setRegistrationId(android.content.Context,java.lang.String) -> a
    int getAppVersion(android.content.Context) -> h
    void resetBackoff(android.content.Context) -> f
    int getBackoff(android.content.Context) -> g
    void setBackoff(android.content.Context,int) -> a
    android.content.SharedPreferences getGCMPreferences(android.content.Context) -> i
com.inhuasoft.smart.client.AboutFragment -> com.inhuasoft.smart.client.a:
    com.inhuasoft.smart.client.FragmentsAvailable about -> N
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> l
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.AccountPreferencesFragment -> com.inhuasoft.smart.client.b:
    int n -> aj
    com.inhuasoft.smart.client.LinphonePreferences mPrefs -> ak
    android.preference.EditTextPreference mProxyPreference -> al
    android.preference.ListPreference mTransportPreference -> am
    android.preference.Preference$OnPreferenceChangeListener usernameChangedListener -> V
    android.preference.Preference$OnPreferenceChangeListener useridChangedListener -> W
    android.preference.Preference$OnPreferenceChangeListener passwordChangedListener -> X
    android.preference.Preference$OnPreferenceChangeListener domainChangedListener -> Y
    android.preference.Preference$OnPreferenceChangeListener displayNameChangedListener -> Z
    android.preference.Preference$OnPreferenceChangeListener proxyChangedListener -> aa
    android.preference.Preference$OnPreferenceChangeListener outboundProxyChangedListener -> ab
    android.preference.Preference$OnPreferenceChangeListener expiresChangedListener -> ac
    android.preference.Preference$OnPreferenceChangeListener prefixChangedListener -> ad
    android.preference.Preference$OnPreferenceChangeListener avpfChangedListener -> ae
    android.preference.Preference$OnPreferenceChangeListener avpfRRIntervalChangedListener -> af
    android.preference.Preference$OnPreferenceChangeListener escapeChangedListener -> ag
    android.preference.Preference$OnPreferenceChangeListener disableChangedListener -> ah
    android.preference.Preference$OnPreferenceChangeListener transportChangedListener -> ai
    void onDestroy() -> p
    void onCreate(android.os.Bundle) -> c
    void manageAccountPreferencesFields(android.preference.PreferenceScreen) -> b
    void initializeTransportPreference(android.preference.ListPreference) -> a
    void setListPreferenceValues(android.preference.ListPreference,java.util.List,java.util.List) -> a
    com.inhuasoft.smart.client.LinphonePreferences access$0(com.inhuasoft.smart.client.AccountPreferencesFragment) -> a
    int access$1(com.inhuasoft.smart.client.AccountPreferencesFragment) -> b
    android.preference.ListPreference access$2(com.inhuasoft.smart.client.AccountPreferencesFragment) -> c
    android.preference.EditTextPreference access$3(com.inhuasoft.smart.client.AccountPreferencesFragment) -> d
com.inhuasoft.smart.client.AccountPreferencesFragment$1 -> com.inhuasoft.smart.client.c:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$10 -> com.inhuasoft.smart.client.d:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$11 -> com.inhuasoft.smart.client.e:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$12 -> com.inhuasoft.smart.client.f:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$13 -> com.inhuasoft.smart.client.g:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$14 -> com.inhuasoft.smart.client.h:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$15 -> com.inhuasoft.smart.client.i:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    android.preference.CheckBoxPreference val$disable -> b
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.client.AccountPreferencesFragment$16 -> com.inhuasoft.smart.client.j:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.client.AccountPreferencesFragment$2 -> com.inhuasoft.smart.client.k:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$3 -> com.inhuasoft.smart.client.l:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$4 -> com.inhuasoft.smart.client.m:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$5 -> com.inhuasoft.smart.client.n:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$6 -> com.inhuasoft.smart.client.o:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$7 -> com.inhuasoft.smart.client.p:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$8 -> com.inhuasoft.smart.client.q:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AccountPreferencesFragment$9 -> com.inhuasoft.smart.client.r:
    com.inhuasoft.smart.client.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.AudioCallFragment -> com.inhuasoft.smart.client.s:
    com.inhuasoft.smart.client.InCallActivity incallActvityInstance -> O
    android.widget.ImageButton btnHangUp -> N
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void registerCallDurationTimer(android.view.View,org.linphone.core.LinphoneCall) -> a
    void onAttach(android.app.Activity) -> a
    void onStart() -> k
    void hangUp() -> x
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.AudioCall_New_Fragment -> com.inhuasoft.smart.client.t:
    android.widget.ImageButton btnHangUp -> a
    android.os.Handler mHandler -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void registerCallDurationTimer(android.view.View,org.linphone.core.LinphoneCall) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onStart() -> onStart
    void hangUp() -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.BandwidthManager -> com.inhuasoft.smart.client.u:
    com.inhuasoft.smart.client.BandwidthManager instance -> a
    int currentProfile -> b
    com.inhuasoft.smart.client.BandwidthManager getInstance() -> a
    void updateWithProfileSettings(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCallParams) -> a
    boolean isVideoPossible() -> b
com.inhuasoft.smart.client.BluetoothManager -> com.inhuasoft.smart.client.BluetoothManager:
    int PLANTRONICS_BUTTON_PRESS -> a
    int PLANTRONICS_BUTTON_LONG_PRESS -> b
    int PLANTRONICS_BUTTON_DOUBLE_PRESS -> c
    int PLANTRONICS_BUTTON_CALL -> d
    int PLANTRONICS_BUTTON_MUTE -> e
    com.inhuasoft.smart.client.BluetoothManager instance -> f
    android.content.Context mContext -> g
    android.media.AudioManager mAudioManager -> h
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> i
    android.bluetooth.BluetoothHeadset mBluetoothHeadset -> j
    android.bluetooth.BluetoothDevice mBluetoothDevice -> k
    android.bluetooth.BluetoothProfile$ServiceListener mProfileListener -> l
    boolean isBluetoothConnected -> m
    boolean isScoConnected -> n
    com.inhuasoft.smart.client.BluetoothManager getInstance() -> a
    void startBluetooth() -> f
    boolean isBluetoothHeadsetAvailable() -> b
    void disableBluetoothSCO() -> c
    void stopBluetooth() -> d
    void destroy() -> e
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void access$0(com.inhuasoft.smart.client.BluetoothManager,android.bluetooth.BluetoothHeadset) -> a
    void access$1(com.inhuasoft.smart.client.BluetoothManager,boolean) -> a
com.inhuasoft.smart.client.BluetoothManager$1 -> com.inhuasoft.smart.client.v:
    com.inhuasoft.smart.client.BluetoothManager this$0 -> a
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
com.inhuasoft.smart.client.BootReceiver -> com.inhuasoft.smart.client.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.client.CallManager -> com.inhuasoft.smart.client.w:
    com.inhuasoft.smart.client.CallManager instance -> a
    com.inhuasoft.smart.client.CallManager getInstance() -> a
    com.inhuasoft.smart.client.BandwidthManager bm() -> d
    void inviteAddress(org.linphone.core.LinphoneAddress,boolean,boolean) -> a
    boolean reinviteWithVideo() -> b
    void updateCall() -> c
com.inhuasoft.smart.client.ChatFragment -> com.inhuasoft.smart.client.x:
    org.linphone.core.LinphoneChatRoom chatRoom -> N
    android.view.View view -> O
    java.lang.String sipUri -> P
    android.widget.EditText message -> Q
    android.widget.ImageView cancelUpload -> R
    android.widget.TextView sendImage -> S
    android.widget.TextView sendMessage -> T
    android.widget.TextView contactName -> U
    android.widget.TextView remoteComposing -> V
    com.inhuasoft.smart.client.ui.AvatarWithShadow contactPicture -> W
    android.widget.RelativeLayout messagesLayout -> X
    android.widget.RelativeLayout uploadLayout -> Y
    android.widget.RelativeLayout textLayout -> Z
    com.inhuasoft.smart.client.ui.LinphoneScrollView messagesScrollView -> aa
    int previousMessageID -> ab
    android.os.Handler mHandler -> ac
    java.util.List lastSentMessagesBubbles -> ad
    java.util.HashMap latestImageMessages -> ae
    int messagesFilterLimit -> af
    boolean useLinphoneMessageStorage -> ag
    boolean messagesArePresentButHidden -> ah
    android.widget.ProgressBar progressBar -> ai
    int bytesSent -> aj
    java.lang.String uploadServerUri -> ak
    java.lang.String fileToUploadPath -> al
    android.graphics.Bitmap imageToUpload -> am
    android.net.Uri imageToUploadUri -> an
    java.lang.Thread uploadThread -> ao
    android.text.TextWatcher textWatcher -> ap
    android.view.ViewTreeObserver$OnGlobalLayoutListener keyboardListener -> aq
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    void addVirtualKeyboardVisiblityListener() -> z
    void removeVirtualKeyboardVisiblityListener() -> A
    void showKeyboardVisibleMode() -> x
    void hideKeyboardVisibleMode() -> y
    void invalidate() -> B
    void invalidate(int) -> c
    void displayChatHeader(java.lang.String,java.lang.String) -> a
    int checkId(int) -> d
    com.inhuasoft.smart.client.ui.BubbleChat displayMessage(int,java.lang.String,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout) -> a
    com.inhuasoft.smart.client.ui.BubbleChat displayMessage(int,java.lang.String,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,boolean) -> a
    com.inhuasoft.smart.client.ui.BubbleChat displayImageMessage(int,android.graphics.Bitmap,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,java.lang.String) -> a
    com.inhuasoft.smart.client.ui.BubbleChat displayImageMessage(int,android.graphics.Bitmap,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,java.lang.String,boolean) -> a
    void changeDisplayedChat(java.lang.String,java.lang.String,java.lang.String) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onPause() -> m
    void onResume() -> l
    void onClick(android.view.View) -> onClick
    void displayMessages() -> C
    void sendTextMessage() -> D
    void sendTextMessage(java.lang.String) -> b
    void sendImageMessage(java.lang.String,android.graphics.Bitmap) -> a
    org.linphone.core.LinphoneChatMessage getMessageForId(int) -> e
    void hideMessageBubble(int) -> f
    void resendMessage(int) -> g
    void scrollToEnd() -> E
    void copyTextMessageToClipboard(int) -> h
    void pickImage() -> F
    android.graphics.Bitmap downloadImage(java.lang.String) -> a
    void saveImage(int) -> i
    java.lang.String saveImage(android.graphics.Bitmap,int,org.linphone.core.LinphoneChatMessage) -> a
    long hashBitmap(android.graphics.Bitmap) -> a
    java.lang.String uploadImage(java.lang.String,android.graphics.Bitmap,int,int) -> a
    java.lang.String getRealPathFromURI(android.net.Uri) -> a
    void showPopupMenuAskingImageSize(java.lang.String,android.graphics.Bitmap) -> b
    void uploadAndSendImage(java.lang.String,android.graphics.Bitmap,com.inhuasoft.smart.client.ChatFragment$ImageSize) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void access$0(com.inhuasoft.smart.client.ChatFragment) -> a
    java.lang.Thread access$1(com.inhuasoft.smart.client.ChatFragment) -> b
    android.widget.RelativeLayout access$2(com.inhuasoft.smart.client.ChatFragment) -> c
    android.widget.RelativeLayout access$3(com.inhuasoft.smart.client.ChatFragment) -> d
    android.widget.ProgressBar access$4(com.inhuasoft.smart.client.ChatFragment) -> e
    android.widget.EditText access$5(com.inhuasoft.smart.client.ChatFragment) -> f
    android.widget.TextView access$6(com.inhuasoft.smart.client.ChatFragment) -> g
    org.linphone.core.LinphoneChatRoom access$7(com.inhuasoft.smart.client.ChatFragment) -> h
    android.widget.TextView access$8(com.inhuasoft.smart.client.ChatFragment) -> i
    android.view.View access$9(com.inhuasoft.smart.client.ChatFragment) -> j
    android.widget.RelativeLayout access$10(com.inhuasoft.smart.client.ChatFragment) -> k
    int access$11(com.inhuasoft.smart.client.ChatFragment) -> l
    com.inhuasoft.smart.client.ui.LinphoneScrollView access$12(com.inhuasoft.smart.client.ChatFragment) -> m
    void access$13(com.inhuasoft.smart.client.ChatFragment) -> n
    android.os.Handler access$14(com.inhuasoft.smart.client.ChatFragment) -> o
    boolean access$15(com.inhuasoft.smart.client.ChatFragment) -> p
    java.lang.String access$16(com.inhuasoft.smart.client.ChatFragment,android.graphics.Bitmap,int,org.linphone.core.LinphoneChatMessage) -> a
    int access$22(com.inhuasoft.smart.client.ChatFragment) -> q
    void access$23(com.inhuasoft.smart.client.ChatFragment,int) -> a
    java.lang.String access$24(com.inhuasoft.smart.client.ChatFragment,java.lang.String,android.graphics.Bitmap,int,int) -> a
    void access$25(com.inhuasoft.smart.client.ChatFragment,java.lang.String,android.graphics.Bitmap) -> a
com.inhuasoft.smart.client.ChatFragment$1 -> com.inhuasoft.smart.client.y:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ChatFragment$13 -> com.inhuasoft.smart.client.z:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    int val$imageSize -> b
    void onBytesWrite(int) -> a
com.inhuasoft.smart.client.ChatFragment$14 -> com.inhuasoft.smart.client.aa:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    java.lang.String val$filePath -> b
    com.inhuasoft.smart.client.ChatFragment$ImageSize val$size -> c
    android.graphics.Bitmap val$image -> d
    void run() -> run
    com.inhuasoft.smart.client.ChatFragment access$0(com.inhuasoft.smart.client.ChatFragment$14) -> a
com.inhuasoft.smart.client.ChatFragment$14$1 -> com.inhuasoft.smart.client.ab:
    com.inhuasoft.smart.client.ChatFragment$14 this$1 -> a
    java.lang.String val$furl -> b
    android.graphics.Bitmap val$fbm -> c
    void run() -> run
com.inhuasoft.smart.client.ChatFragment$2 -> com.inhuasoft.smart.client.ac:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ChatFragment$3 -> com.inhuasoft.smart.client.ad:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.client.ChatFragment$4 -> com.inhuasoft.smart.client.ae:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.ChatFragment$5 -> com.inhuasoft.smart.client.af:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.inhuasoft.smart.client.ChatFragment$6 -> com.inhuasoft.smart.client.ag:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void run() -> run
    com.inhuasoft.smart.client.ChatFragment access$0(com.inhuasoft.smart.client.ChatFragment$6) -> a
com.inhuasoft.smart.client.ChatFragment$6$1 -> com.inhuasoft.smart.client.ah:
    com.inhuasoft.smart.client.ChatFragment$6 this$1 -> a
    void OnScrollToTop(int) -> a
    com.inhuasoft.smart.client.ChatFragment$6 access$0(com.inhuasoft.smart.client.ChatFragment$6$1) -> a
com.inhuasoft.smart.client.ChatFragment$6$1$1 -> com.inhuasoft.smart.client.ai:
    com.inhuasoft.smart.client.ChatFragment$6$1 this$2 -> a
    void run() -> run
com.inhuasoft.smart.client.ChatFragment$7 -> com.inhuasoft.smart.client.aj:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    java.lang.String val$url -> b
    int val$finalId -> c
    com.inhuasoft.smart.client.ui.BubbleChat val$bubble -> d
    android.view.View val$v -> e
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.client.ChatFragment access$0(com.inhuasoft.smart.client.ChatFragment$7) -> a
com.inhuasoft.smart.client.ChatFragment$7$1 -> com.inhuasoft.smart.client.ak:
    com.inhuasoft.smart.client.ChatFragment$7 this$1 -> a
    java.lang.String val$url -> b
    int val$finalId -> c
    com.inhuasoft.smart.client.ui.BubbleChat val$bubble -> d
    android.view.View val$v -> e
    void run() -> run
    com.inhuasoft.smart.client.ChatFragment$7 access$0(com.inhuasoft.smart.client.ChatFragment$7$1) -> a
com.inhuasoft.smart.client.ChatFragment$7$1$1 -> com.inhuasoft.smart.client.al:
    com.inhuasoft.smart.client.ChatFragment$7$1 this$2 -> a
    android.view.View val$v -> b
    android.graphics.Bitmap val$bm -> c
    void run() -> run
com.inhuasoft.smart.client.ChatFragment$7$1$2 -> com.inhuasoft.smart.client.am:
    com.inhuasoft.smart.client.ChatFragment$7$1 this$2 -> a
    void run() -> run
com.inhuasoft.smart.client.ChatFragment$8 -> com.inhuasoft.smart.client.an:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    java.lang.String val$url -> b
    android.view.View val$v -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ChatFragment$9 -> com.inhuasoft.smart.client.ao:
    com.inhuasoft.smart.client.ChatFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.ChatFragment$ImageSize -> com.inhuasoft.smart.client.ap:
    com.inhuasoft.smart.client.ChatFragment$ImageSize SMALL -> a
    com.inhuasoft.smart.client.ChatFragment$ImageSize MEDIUM -> b
    com.inhuasoft.smart.client.ChatFragment$ImageSize LARGE -> c
    com.inhuasoft.smart.client.ChatFragment$ImageSize REAL -> d
    com.inhuasoft.smart.client.ChatFragment$ImageSize[] ENUM$VALUES -> e
    com.inhuasoft.smart.client.ChatFragment$ImageSize[] values() -> values
    com.inhuasoft.smart.client.ChatFragment$ImageSize valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.client.ChatFragment$OutputStreamListener -> com.inhuasoft.smart.client.aq:
    void onBytesWrite(int) -> a
com.inhuasoft.smart.client.ChatFragment$ProgressOutputStream -> com.inhuasoft.smart.client.ar:
    java.io.OutputStream outputStream -> a
    com.inhuasoft.smart.client.ChatFragment$OutputStreamListener listener -> c
    com.inhuasoft.smart.client.ChatFragment this$0 -> b
    void setListener(com.inhuasoft.smart.client.ChatFragment$OutputStreamListener) -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
com.inhuasoft.smart.client.ChatListFragment -> com.inhuasoft.smart.client.as:
    android.os.Handler mHandler -> N
    android.view.LayoutInflater mInflater -> O
    java.util.List mConversations -> P
    java.util.List mDrafts -> Q
    android.widget.ListView chatList -> R
    android.widget.TextView edit -> S
    android.widget.TextView ok -> T
    android.widget.TextView newDiscussion -> U
    android.widget.TextView noChatHistory -> V
    android.widget.ImageView clearFastChat -> W
    android.widget.EditText fastNewChat -> X
    boolean isEditMode -> Y
    boolean useLinphoneStorage -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void hideAndDisplayMessageIfNoChat() -> y
    void refresh() -> x
    boolean isVersionUsingNewChatStorage() -> z
    void onResume() -> l
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean importAndroidStoredMessagedIntoLibLinphoneStorage() -> A
    java.lang.String saveImageAsFile(int,android.graphics.Bitmap) -> a
    java.util.List access$0(com.inhuasoft.smart.client.ChatListFragment) -> a
    java.util.List access$1(com.inhuasoft.smart.client.ChatListFragment) -> b
    android.view.LayoutInflater access$2(com.inhuasoft.smart.client.ChatListFragment) -> c
    boolean access$3(com.inhuasoft.smart.client.ChatListFragment) -> d
    void access$4(com.inhuasoft.smart.client.ChatListFragment,java.util.List) -> a
    void access$5(com.inhuasoft.smart.client.ChatListFragment,java.util.List) -> b
    void access$6(com.inhuasoft.smart.client.ChatListFragment) -> e
    boolean access$7(com.inhuasoft.smart.client.ChatListFragment) -> f
com.inhuasoft.smart.client.ChatListFragment$1 -> com.inhuasoft.smart.client.at:
    com.inhuasoft.smart.client.ChatListFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.ChatListFragment$2 -> com.inhuasoft.smart.client.au:
    android.app.ProgressDialog pd -> b
    com.inhuasoft.smart.client.ChatListFragment this$0 -> a
    android.content.SharedPreferences val$prefs -> c
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.inhuasoft.smart.client.ChatListFragment$ChatListAdapter -> com.inhuasoft.smart.client.av:
    boolean useNativeAPI -> b
    com.inhuasoft.smart.client.ChatListFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.inhuasoft.smart.client.ChatMessage -> com.inhuasoft.smart.client.aw:
    java.lang.String message -> a
    java.lang.String timestamp -> b
    java.lang.String url -> c
    boolean incoming -> d
    int status -> e
    int id -> f
    android.graphics.Bitmap image -> g
    boolean isRead -> h
    int getId() -> a
    java.lang.String getMessage() -> b
    java.lang.String getTimestamp() -> c
    boolean isIncoming() -> d
    org.linphone.core.LinphoneChatMessage$State getStatus() -> e
    android.graphics.Bitmap getImage() -> f
    java.lang.String getUrl() -> g
    void setUrl(java.lang.String) -> a
    java.lang.String toString() -> toString
com.inhuasoft.smart.client.ChatStorage -> com.inhuasoft.smart.client.ax:
    com.inhuasoft.smart.client.ChatStorage instance -> a
    android.content.Context context -> b
    android.database.sqlite.SQLiteDatabase db -> c
    boolean useNativeAPI -> d
    com.inhuasoft.smart.client.ChatStorage getInstance() -> a
    void restartChatStorage() -> b
    boolean isVersionUsingNewChatStorage() -> g
    void close() -> c
    int saveTextMessage(java.lang.String,java.lang.String,java.lang.String,long) -> a
    int saveImageMessage(java.lang.String,java.lang.String,android.graphics.Bitmap,java.lang.String,long) -> a
    void saveImage(int,android.graphics.Bitmap) -> a
    int saveDraft(java.lang.String,java.lang.String) -> a
    void updateDraft(java.lang.String,java.lang.String) -> b
    void deleteDraft(java.lang.String) -> a
    java.lang.String getDraft(java.lang.String) -> b
    java.util.List getDrafts() -> d
    java.util.List getMessages(java.lang.String) -> c
    java.lang.String getTextMessageForId(org.linphone.core.LinphoneChatRoom,int) -> a
    org.linphone.core.LinphoneChatMessage getMessage(org.linphone.core.LinphoneChatRoom,int) -> b
    void removeDiscussion(java.lang.String) -> d
    java.util.ArrayList getChatList() -> e
    void deleteMessage(org.linphone.core.LinphoneChatRoom,int) -> c
    int getUnreadMessageCount() -> f
    int getUnreadMessageCount(java.lang.String) -> e
    byte[] getRawImageFromMessage(int) -> a
com.inhuasoft.smart.client.ChatStorage$ChatHelper -> com.inhuasoft.smart.client.ay:
    com.inhuasoft.smart.client.ChatStorage this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.inhuasoft.smart.client.Contact -> com.inhuasoft.smart.client.az:
    java.lang.String id -> a
    java.lang.String name -> b
    android.net.Uri photoUri -> c
    android.graphics.Bitmap photo -> d
    java.util.List numerosOrAddresses -> e
    org.linphone.core.LinphoneFriend friend -> f
    void setFriend(org.linphone.core.LinphoneFriend) -> a
    org.linphone.core.LinphoneFriend getFriend() -> a
    java.lang.String getID() -> b
    java.lang.String getName() -> c
    android.net.Uri getPhotoUri() -> d
    android.graphics.Bitmap getPhoto() -> e
    java.util.List getNumerosOrAddresses() -> f
    void refresh(android.content.ContentResolver) -> a
com.inhuasoft.smart.client.ContactFragment -> com.inhuasoft.smart.client.ba:
    com.inhuasoft.smart.client.Contact contact -> N
    android.widget.TextView editContact -> O
    android.view.LayoutInflater inflater -> P
    android.view.View view -> Q
    boolean displayChatAddressOnly -> R
    android.view.View$OnClickListener dialListener -> S
    android.view.View$OnClickListener chatListener -> T
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void changeDisplayedContact(com.inhuasoft.smart.client.Contact) -> a
    void displayContact(android.view.LayoutInflater,android.view.View) -> a
    void onResume() -> l
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.client.Contact access$0(com.inhuasoft.smart.client.ContactFragment) -> a
    android.view.LayoutInflater access$1(com.inhuasoft.smart.client.ContactFragment) -> b
    android.view.View access$2(com.inhuasoft.smart.client.ContactFragment) -> c
    void access$3(com.inhuasoft.smart.client.ContactFragment,android.view.LayoutInflater,android.view.View) -> a
com.inhuasoft.smart.client.ContactFragment$1 -> com.inhuasoft.smart.client.bb:
    com.inhuasoft.smart.client.ContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ContactFragment$2 -> com.inhuasoft.smart.client.bc:
    com.inhuasoft.smart.client.ContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ContactFragment$3 -> com.inhuasoft.smart.client.bd:
    com.inhuasoft.smart.client.ContactFragment this$0 -> a
    java.lang.String val$finalNumberOrAddress -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ContactFragment$4 -> com.inhuasoft.smart.client.be:
    com.inhuasoft.smart.client.ContactFragment this$0 -> a
    java.lang.String val$finalNumberOrAddress -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ContactHelper -> com.inhuasoft.smart.client.bf:
    java.lang.String username -> a
    java.lang.String domain -> b
    android.content.ContentResolver resolver -> c
    android.net.Uri foundPhotoUri -> d
    java.lang.String displayName -> e
    org.linphone.core.LinphoneAddress address -> f
    android.net.Uri getUri() -> a
    boolean query() -> b
    boolean testPhotoUri(android.database.Cursor) -> a
    boolean testPhotoUriAndCloseCursor(android.database.Cursor) -> b
    boolean testPhotoUri(android.content.ContentResolver,android.net.Uri,java.lang.String) -> a
    boolean queryOldContactAPI() -> c
    void access$0(com.inhuasoft.smart.client.ContactHelper,android.net.Uri) -> a
    void access$1(com.inhuasoft.smart.client.ContactHelper,java.lang.String) -> a
    java.lang.String access$2(com.inhuasoft.smart.client.ContactHelper) -> a
    java.lang.String access$3(com.inhuasoft.smart.client.ContactHelper) -> b
    android.content.ContentResolver access$4(com.inhuasoft.smart.client.ContactHelper) -> c
com.inhuasoft.smart.client.ContactHelper$ContactHelperNew -> com.inhuasoft.smart.client.bg:
    com.inhuasoft.smart.client.ContactHelper this$0 -> a
    boolean checkPhotosUris(android.content.ContentResolver,android.database.Cursor,java.lang.String,java.lang.String) -> a
    boolean queryNewContactAPI() -> a
    boolean access$1(com.inhuasoft.smart.client.ContactHelper$ContactHelperNew) -> a
com.inhuasoft.smart.client.ContactsFragment -> com.inhuasoft.smart.client.bh:
    android.os.Handler mHandler -> N
    android.view.LayoutInflater mInflater -> O
    android.widget.ListView contactsList -> P
    android.widget.TextView allContacts -> Q
    android.widget.TextView linphoneContacts -> R
    android.widget.TextView newContact -> S
    android.widget.TextView noSipContact -> T
    android.widget.TextView noContact -> U
    boolean onlyDisplayLinphoneContacts -> V
    int lastKnownPosition -> W
    android.widget.AlphabetIndexer indexer -> X
    boolean editOnClick -> Y
    boolean editConsumed -> Z
    boolean onlyDisplayChatAddress -> aa
    java.lang.String sipAddressToAdd -> ab
    android.widget.ImageView clearSearchField -> ac
    android.widget.EditText searchField -> ad
    android.database.Cursor searchCursor -> ae
    com.inhuasoft.smart.client.ContactsFragment instance -> af
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    void searchContacts() -> y
    void searchContacts(java.lang.String) -> a
    void changeContactsAdapter() -> z
    void changeContactsToggle() -> A
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onResume() -> l
    void onPause() -> m
    void invalidate() -> x
    android.view.LayoutInflater access$0(com.inhuasoft.smart.client.ContactsFragment) -> a
    android.widget.AlphabetIndexer access$1(com.inhuasoft.smart.client.ContactsFragment) -> b
    android.widget.EditText access$2(com.inhuasoft.smart.client.ContactsFragment) -> c
    void access$3(com.inhuasoft.smart.client.ContactsFragment,java.lang.String) -> a
    void access$4(com.inhuasoft.smart.client.ContactsFragment) -> d
    android.widget.ListView access$5(com.inhuasoft.smart.client.ContactsFragment) -> e
    int access$6(com.inhuasoft.smart.client.ContactsFragment) -> f
com.inhuasoft.smart.client.ContactsFragment$1 -> com.inhuasoft.smart.client.bi:
    com.inhuasoft.smart.client.ContactsFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.client.ContactsFragment$2 -> com.inhuasoft.smart.client.bj:
    com.inhuasoft.smart.client.ContactsFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.ContactsFragment$ContactsListAdapter -> com.inhuasoft.smart.client.bk:
    int margin -> b
    android.graphics.Bitmap bitmapUnknown -> c
    java.util.List contacts -> d
    android.database.Cursor cursor -> e
    com.inhuasoft.smart.client.ContactsFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
com.inhuasoft.smart.client.ControlFragment -> com.inhuasoft.smart.client.bl:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.inhuasoft.smart.client.CustomDialog -> com.inhuasoft.smart.client.bm:
    android.app.AlertDialog create(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
com.inhuasoft.smart.client.DialerFragment -> com.inhuasoft.smart.client.bn:
    com.inhuasoft.smart.client.DialerFragment instance -> N
    boolean isCallTransferOngoing -> O
    com.inhuasoft.smart.client.ui.AddressText mAddress -> P
    com.inhuasoft.smart.client.ui.CallButton mCall -> Q
    android.widget.ImageView mAddContact -> R
    android.view.View$OnClickListener addContactListener -> S
    android.view.View$OnClickListener cancelListener -> T
    android.view.View$OnClickListener transferListener -> U
    boolean shouldEmptyAddressField -> V
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> l
    void resetLayout(boolean) -> b
    void enableDisableAddContact() -> x
    void displayTextInAddressBar(java.lang.String) -> a
    void newOutgoingCall(java.lang.String) -> b
    void newOutgoingCall(android.content.Intent) -> b
    com.inhuasoft.smart.client.ui.AddressText access$0(com.inhuasoft.smart.client.DialerFragment) -> a
    void access$1(boolean) -> c
com.inhuasoft.smart.client.DialerFragment$1 -> com.inhuasoft.smart.client.bo:
    com.inhuasoft.smart.client.DialerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.DialerFragment$2 -> com.inhuasoft.smart.client.bp:
    com.inhuasoft.smart.client.DialerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.DialerFragment$3 -> com.inhuasoft.smart.client.bq:
    com.inhuasoft.smart.client.DialerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment -> com.inhuasoft.smart.client.br:
    android.view.View view -> N
    android.widget.TextView ok -> O
    android.widget.EditText firstName -> P
    android.widget.EditText lastName -> Q
    android.view.LayoutInflater inflater -> R
    android.view.View deleteContact -> S
    boolean isNewContact -> T
    com.inhuasoft.smart.client.Contact contact -> U
    int contactID -> V
    java.util.List numbersAndAddresses -> W
    java.util.ArrayList ops -> X
    int firstSipAddressIndex -> Y
    java.lang.String newSipOrNumberToAdd -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> l
    void initNumbersFields(android.widget.TableLayout,com.inhuasoft.smart.client.Contact) -> a
    android.view.View displayNumberOrAddress(android.widget.TableLayout,java.lang.String) -> a
    android.view.View displayNumberOrAddress(android.widget.TableLayout,java.lang.String,boolean) -> a
    void addEmptyRowToAllowNewNumberOrAddress(android.widget.TableLayout,boolean) -> a
    void createNewContact() -> x
    void updateExistingContact() -> y
    void deleteExistingContact() -> z
    java.lang.String getDisplayName() -> A
    java.lang.String findRawContactID(java.lang.String) -> a
    java.lang.String findContactFirstName(java.lang.String) -> b
    java.lang.String findContactLastName(java.lang.String) -> c
    java.util.ArrayList access$0(com.inhuasoft.smart.client.EditContactFragment) -> a
    int access$1(com.inhuasoft.smart.client.EditContactFragment) -> b
    boolean access$2(com.inhuasoft.smart.client.EditContactFragment) -> c
    java.lang.String access$3(com.inhuasoft.smart.client.EditContactFragment,java.lang.String) -> a
    java.util.List access$4(com.inhuasoft.smart.client.EditContactFragment) -> d
    void access$5(com.inhuasoft.smart.client.EditContactFragment) -> e
    void access$6(com.inhuasoft.smart.client.EditContactFragment) -> f
    android.widget.EditText access$7(com.inhuasoft.smart.client.EditContactFragment) -> g
    android.widget.EditText access$8(com.inhuasoft.smart.client.EditContactFragment) -> h
    android.widget.TextView access$9(com.inhuasoft.smart.client.EditContactFragment) -> i
    void access$10(com.inhuasoft.smart.client.EditContactFragment) -> j
    int access$11(com.inhuasoft.smart.client.EditContactFragment) -> k
    void access$12(com.inhuasoft.smart.client.EditContactFragment,int) -> a
    void access$13(com.inhuasoft.smart.client.EditContactFragment,android.widget.TableLayout,boolean) -> a
com.inhuasoft.smart.client.EditContactFragment$1 -> com.inhuasoft.smart.client.bs:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment$10 -> com.inhuasoft.smart.client.bt:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    android.widget.ImageView val$add -> b
    boolean val$isSip -> c
    android.widget.TableLayout val$controls -> d
    com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> e
    android.view.View val$view -> f
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.client.EditContactFragment access$0(com.inhuasoft.smart.client.EditContactFragment$10) -> a
com.inhuasoft.smart.client.EditContactFragment$10$1 -> com.inhuasoft.smart.client.bu:
    com.inhuasoft.smart.client.EditContactFragment$10 this$1 -> a
    com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.view.View val$view -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment$2 -> com.inhuasoft.smart.client.bv:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment$3 -> com.inhuasoft.smart.client.bw:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment$4 -> com.inhuasoft.smart.client.bx:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.client.EditContactFragment$5 -> com.inhuasoft.smart.client.by:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.client.EditContactFragment$6 -> com.inhuasoft.smart.client.bz:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    com.inhuasoft.smart.client.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment$7 -> com.inhuasoft.smart.client.ca:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.widget.EditText val$noa -> c
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.client.EditContactFragment$8 -> com.inhuasoft.smart.client.cb:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.view.View val$view -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.EditContactFragment$9 -> com.inhuasoft.smart.client.cc:
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.widget.EditText val$noa -> c
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress -> com.inhuasoft.smart.client.cd:
    java.lang.String oldNumberOrAddress -> b
    java.lang.String newNumberOrAddress -> c
    boolean isSipAddress -> d
    com.inhuasoft.smart.client.EditContactFragment this$0 -> a
    void setNewNumberOrAddress(java.lang.String) -> a
    void save() -> a
    void delete() -> b
    void addNewNumber() -> c
    void updateNumber() -> d
    java.lang.String access$0(com.inhuasoft.smart.client.EditContactFragment$NewOrUpdatedNumberOrAddress) -> a
com.inhuasoft.smart.client.FragmentsAvailable -> com.inhuasoft.smart.client.ce:
    com.inhuasoft.smart.client.FragmentsAvailable UNKNOW -> a
    com.inhuasoft.smart.client.FragmentsAvailable DIALER -> b
    com.inhuasoft.smart.client.FragmentsAvailable HISTORY -> c
    com.inhuasoft.smart.client.FragmentsAvailable HISTORY_DETAIL -> d
    com.inhuasoft.smart.client.FragmentsAvailable CONTACTS -> e
    com.inhuasoft.smart.client.FragmentsAvailable CONTACT -> f
    com.inhuasoft.smart.client.FragmentsAvailable EDIT_CONTACT -> g
    com.inhuasoft.smart.client.FragmentsAvailable ABOUT -> h
    com.inhuasoft.smart.client.FragmentsAvailable ABOUT_INSTEAD_OF_SETTINGS -> i
    com.inhuasoft.smart.client.FragmentsAvailable ABOUT_INSTEAD_OF_CHAT -> j
    com.inhuasoft.smart.client.FragmentsAvailable ACCOUNT_SETTINGS -> k
    com.inhuasoft.smart.client.FragmentsAvailable SETTINGS -> l
    com.inhuasoft.smart.client.FragmentsAvailable CHATLIST -> m
    com.inhuasoft.smart.client.FragmentsAvailable CHAT -> n
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$FragmentsAvailable -> o
    com.inhuasoft.smart.client.FragmentsAvailable[] ENUM$VALUES -> p
    boolean shouldAnimate() -> a
    boolean isRightOf(com.inhuasoft.smart.client.FragmentsAvailable) -> a
    boolean shouldAddItselfToTheRightOf(com.inhuasoft.smart.client.FragmentsAvailable) -> b
    com.inhuasoft.smart.client.FragmentsAvailable[] values() -> values
    com.inhuasoft.smart.client.FragmentsAvailable valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$FragmentsAvailable() -> b
com.inhuasoft.smart.client.HistoryDetailFragment -> com.inhuasoft.smart.client.cf:
    android.widget.ImageView dialBack -> N
    android.widget.ImageView chat -> O
    android.widget.ImageView addToContacts -> P
    android.view.View view -> Q
    android.widget.TextView contactName -> R
    android.widget.TextView contactAddress -> S
    android.widget.TextView callDirection -> T
    android.widget.TextView time -> U
    android.widget.TextView date -> V
    java.lang.String sipUri -> W
    java.lang.String displayName -> X
    java.lang.String pictureUri -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void displayHistory(java.lang.String,java.lang.String,java.lang.String) -> a
    void changeDisplayedHistory(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onResume() -> l
    void onClick(android.view.View) -> onClick
    java.lang.String timestampToHumanDate(java.lang.String) -> a
com.inhuasoft.smart.client.HistoryFragment -> com.inhuasoft.smart.client.cg:
    android.os.Handler mHandler -> N
    android.widget.ExpandableListView historyList -> O
    android.view.LayoutInflater mInflater -> P
    android.widget.TextView allCalls -> Q
    android.widget.TextView missedCalls -> R
    android.widget.TextView edit -> S
    android.widget.TextView ok -> T
    android.widget.TextView deleteAll -> U
    android.widget.TextView noCallHistory -> V
    android.widget.TextView noMissedCallHistory -> W
    boolean onlyDisplayMissedCalls -> X
    boolean isEditMode -> Y
    android.util.SparseArray mLogs -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    boolean hideHistoryListAndDisplayMessageIfEmpty() -> x
    void onResume() -> l
    void initLogsLists(java.util.List) -> a
    void initMissedLogsLists(java.util.List) -> b
    void expandAllGroups() -> y
    java.lang.String getCorrespondentDisplayName(org.linphone.core.LinphoneCallLog) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onClick(android.view.View) -> onClick
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
    void hideDeleteAllButton() -> z
    void showDeleteAllButton() -> A
    boolean access$0(com.inhuasoft.smart.client.HistoryFragment) -> a
    android.util.SparseArray access$1(com.inhuasoft.smart.client.HistoryFragment) -> b
    android.view.LayoutInflater access$2(com.inhuasoft.smart.client.HistoryFragment) -> c
    boolean access$3(com.inhuasoft.smart.client.HistoryFragment) -> d
    java.lang.String access$4(com.inhuasoft.smart.client.HistoryFragment,org.linphone.core.LinphoneCallLog) -> a
    android.widget.ExpandableListView access$5(com.inhuasoft.smart.client.HistoryFragment) -> e
    android.widget.TextView access$6(com.inhuasoft.smart.client.HistoryFragment) -> f
com.inhuasoft.smart.client.HistoryFragment$1 -> com.inhuasoft.smart.client.ch:
    com.inhuasoft.smart.client.HistoryFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.HistoryFragment$2 -> com.inhuasoft.smart.client.ci:
    com.inhuasoft.smart.client.HistoryFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.client.HistoryFragment$3 -> com.inhuasoft.smart.client.cj:
    com.inhuasoft.smart.client.HistoryFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.client.HistoryFragment$CallHistoryAdapter -> com.inhuasoft.smart.client.ck:
    android.graphics.Bitmap missedCall -> b
    android.graphics.Bitmap outgoingCall -> c
    android.graphics.Bitmap incomingCall -> d
    com.inhuasoft.smart.client.HistoryFragment this$0 -> a
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
com.inhuasoft.smart.client.HistoryFragment$CallHistoryAdapter$1 -> com.inhuasoft.smart.client.cl:
    com.inhuasoft.smart.client.HistoryFragment$CallHistoryAdapter this$1 -> a
    org.linphone.core.LinphoneAddress val$address -> b
    org.linphone.core.LinphoneCallLog val$log -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.HistorySimpleFragment -> com.inhuasoft.smart.client.cm:
    android.widget.ListView historyList -> N
    android.view.LayoutInflater mInflater -> O
    android.widget.TextView allCalls -> P
    android.widget.TextView missedCalls -> Q
    android.widget.TextView edit -> R
    android.widget.TextView ok -> S
    android.widget.TextView deleteAll -> T
    android.widget.TextView noCallHistory -> U
    android.widget.TextView noMissedCallHistory -> V
    boolean onlyDisplayMissedCalls -> W
    boolean isEditMode -> X
    java.util.List mLogs -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void removeNotMissedCallsFromLogs() -> x
    boolean hideHistoryListAndDisplayMessageIfEmpty() -> y
    void onResume() -> l
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void hideDeleteAllButton() -> z
    void showDeleteAllButton() -> A
    boolean access$0(com.inhuasoft.smart.client.HistorySimpleFragment) -> a
    java.util.List access$1(com.inhuasoft.smart.client.HistorySimpleFragment) -> b
    android.view.LayoutInflater access$2(com.inhuasoft.smart.client.HistorySimpleFragment) -> c
    boolean access$3(com.inhuasoft.smart.client.HistorySimpleFragment) -> d
    android.widget.TextView access$4(com.inhuasoft.smart.client.HistorySimpleFragment) -> e
com.inhuasoft.smart.client.HistorySimpleFragment$1 -> com.inhuasoft.smart.client.cn:
    com.inhuasoft.smart.client.HistorySimpleFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.client.HistorySimpleFragment$2 -> com.inhuasoft.smart.client.co:
    com.inhuasoft.smart.client.HistorySimpleFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.client.HistorySimpleFragment$CallHistoryAdapter -> com.inhuasoft.smart.client.cp:
    android.graphics.Bitmap missedCall -> b
    android.graphics.Bitmap outgoingCall -> c
    android.graphics.Bitmap incomingCall -> d
    com.inhuasoft.smart.client.HistorySimpleFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.lang.String timestampToHumanDate(java.util.Calendar) -> a
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> a
    boolean isToday(java.util.Calendar) -> b
    boolean isYesterday(java.util.Calendar) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.inhuasoft.smart.client.HistorySimpleFragment$CallHistoryAdapter$1 -> com.inhuasoft.smart.client.cq:
    com.inhuasoft.smart.client.HistorySimpleFragment$CallHistoryAdapter this$1 -> a
    org.linphone.core.LinphoneAddress val$address -> b
    org.linphone.core.LinphoneCallLog val$log -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.HomeFragment -> com.inhuasoft.smart.client.cr:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.inhuasoft.smart.client.InCallActivity -> com.inhuasoft.smart.client.InCallActivity:
    com.inhuasoft.smart.client.InCallActivity instance -> m
    android.os.Handler mHandler -> n
    android.os.Handler mControlsHandler -> o
    java.lang.Runnable mControls -> p
    com.inhuasoft.smart.client.AudioCallFragment audioCallFragment -> q
    com.inhuasoft.smart.client.VideoCallFragment videoCallFragment -> r
    boolean isSpeakerEnabled -> s
    boolean isMicMuted -> t
    boolean isVideoEnabled -> u
    boolean isTransferAllowed -> v
    int cameraNumber -> w
    boolean isVideoCallPaused -> x
    android.view.LayoutInflater inflater -> y
    boolean isConferenceRunning -> z
    boolean showCallListInVideo -> A
    com.inhuasoft.smart.client.InCallActivity instance() -> f
    boolean isInstanciated() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void initUI() -> l
    void onClick(android.view.View) -> onClick
    void displayCustomToast(java.lang.String,int) -> a
    void switchVideo(boolean,boolean) -> a
    void showAudioView() -> m
    void showVideoView() -> n
    void replaceFragmentVideoByAudio() -> o
    void replaceFragmentAudioByVideo() -> p
    void toggleMicro() -> q
    void toggleSpeaker() -> r
    void pauseOrResumeCall() -> s
    void pauseOrResumeCall(org.linphone.core.LinphoneCall) -> a
    void hangUp() -> t
    void enterConference() -> u
    void pauseOrResumeConference() -> h
    void setCallControlsVisibleAndRemoveCallbacks() -> i
    void goBackToDialer() -> j
    void goBackToDialerAndDisplayTransferButton() -> v
    void startIncomingCallActivity() -> k
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void bindAudioFragment(com.inhuasoft.smart.client.AudioCallFragment) -> a
    void bindVideoFragment(com.inhuasoft.smart.client.VideoCallFragment) -> a
    void access$3(com.inhuasoft.smart.client.InCallActivity) -> a
    void access$4(com.inhuasoft.smart.client.InCallActivity) -> b
com.inhuasoft.smart.client.InCallActivity$1 -> com.inhuasoft.smart.client.cs:
    com.inhuasoft.smart.client.InCallActivity this$0 -> a
    java.lang.String val$message -> b
    int val$duration -> c
    void run() -> run
com.inhuasoft.smart.client.InCallActivity$2 -> com.inhuasoft.smart.client.ct:
    com.inhuasoft.smart.client.InCallActivity this$0 -> a
    boolean val$displayVideo -> b
    boolean val$isInitiator -> c
    org.linphone.core.LinphoneCall val$call -> d
    void run() -> run
com.inhuasoft.smart.client.IncomingCallActivity -> com.inhuasoft.smart.client.IncomingCallActivity:
    com.inhuasoft.smart.client.IncomingCallActivity instance -> a
    android.widget.TextView mNameView -> b
    android.widget.TextView mNumberView -> c
    com.inhuasoft.smart.client.ui.AvatarWithShadow mPictureView -> d
    org.linphone.core.LinphoneCall mCall -> e
    com.inhuasoft.smart.client.ui.LinphoneSliders mIncomingCallWidget -> f
    com.inhuasoft.smart.client.IncomingCallActivity instance() -> a
    boolean isInstanciated() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void decline() -> e
    void answer() -> f
    void onLeftHandleTriggered() -> c
    void onRightHandleTriggered() -> d
com.inhuasoft.smart.client.KeepAliveHandler -> com.inhuasoft.smart.client.KeepAliveHandler:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.client.KeepAliveReceiver -> com.inhuasoft.smart.client.cu:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.client.LinphoneActivity -> com.inhuasoft.smart.client.LinphoneActivity:
    com.inhuasoft.smart.client.LinphoneActivity instance -> m
    com.inhuasoft.smart.client.StatusFragment statusFragment -> n
    android.widget.TextView missedCalls -> o
    android.widget.TextView missedChats -> p
    android.widget.ImageView dialer -> q
    android.widget.LinearLayout menu -> r
    android.widget.LinearLayout mark -> s
    android.widget.RelativeLayout contacts -> t
    android.widget.RelativeLayout history -> u
    android.widget.RelativeLayout settings -> v
    android.widget.RelativeLayout chat -> w
    android.widget.RelativeLayout aboutChat -> x
    android.widget.RelativeLayout aboutSettings -> y
    com.inhuasoft.smart.client.FragmentsAvailable currentFragment -> z
    com.inhuasoft.smart.client.FragmentsAvailable nextFragment -> A
    java.util.List fragmentsHistory -> B
    android.support.v4.app.Fragment dialerFragment -> C
    android.support.v4.app.Fragment messageListenerFragment -> D
    android.support.v4.app.Fragment messageListFragment -> E
    android.support.v4.app.Fragment friendStatusListenerFragment -> F
    android.support.v4.app.Fragment$SavedState dialerSavedState -> G
    boolean preferLinphoneContacts -> H
    boolean isAnimationDisabled -> I
    boolean isContactPresenceDisabled -> J
    android.os.Handler mHandler -> K
    java.util.List contactList -> L
    java.util.List sipContactList -> M
    android.database.Cursor contactCursor -> N
    android.database.Cursor sipContactCursor -> O
    android.view.OrientationEventListener mOrientationHelper -> P
    int mAlwaysChangingPhoneAngle -> Q
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$FragmentsAvailable -> R
    boolean isInstanciated() -> f
    com.inhuasoft.smart.client.LinphoneActivity instance() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initButtons() -> B
    boolean isTablet() -> C
    void hideStatusBar() -> h
    void showStatusBar() -> i
    void changeCurrentFragment(com.inhuasoft.smart.client.FragmentsAvailable,android.os.Bundle) -> a
    void changeCurrentFragment(com.inhuasoft.smart.client.FragmentsAvailable,android.os.Bundle,boolean) -> a
    void updateAnimationsState() -> D
    boolean isAnimationDisabled() -> j
    boolean isContactPresenceDisabled() -> k
    void changeFragment(android.support.v4.app.Fragment,com.inhuasoft.smart.client.FragmentsAvailable,boolean) -> a
    void changeFragmentForTablets(android.support.v4.app.Fragment,com.inhuasoft.smart.client.FragmentsAvailable,boolean) -> b
    void displayHistoryDetail(java.lang.String,org.linphone.core.LinphoneCallLog) -> a
    java.lang.String secondsToDisplayableString(int) -> c
    void displayContact(com.inhuasoft.smart.client.Contact,boolean) -> a
    void displayContacts(boolean) -> b
    void displayContactsForEdition(java.lang.String) -> a
    void displayAbout() -> l
    void displayChat(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void resetSelection() -> E
    void selectMenu(com.inhuasoft.smart.client.FragmentsAvailable) -> a
    void updateDialerFragment(com.inhuasoft.smart.client.DialerFragment) -> a
    void updateChatFragment(com.inhuasoft.smart.client.ChatFragment) -> a
    void updateChatListFragment(com.inhuasoft.smart.client.ChatListFragment) -> a
    void hideMenu(boolean) -> c
    void updateStatusFragment(com.inhuasoft.smart.client.StatusFragment) -> a
    void displaySettings() -> m
    void displayAccountSettings(int) -> b
    com.inhuasoft.smart.client.StatusFragment getStatusFragment() -> n
    java.util.List getChatList() -> o
    java.util.List getDraftChatList() -> p
    java.util.List getChatMessages(java.lang.String) -> c
    void removeFromChatList(java.lang.String) -> d
    void removeFromDrafts(java.lang.String) -> e
    void updateMissedChatCount() -> q
    int onMessageSent(java.lang.String,java.lang.String) -> a
    int onMessageSent(java.lang.String,android.graphics.Bitmap,java.lang.String) -> a
    void displayMissedCalls(int) -> d
    void displayMissedChats(int) -> e
    void displayCustomToast(java.lang.String,int) -> a
    void setAddresGoToDialerAndCall(java.lang.String,java.lang.String,android.net.Uri) -> a
    void startVideoActivity(org.linphone.core.LinphoneCall) -> a
    void startIncallActivity(org.linphone.core.LinphoneCall) -> b
    void startOrientationSensor() -> F
    java.util.List getAllContacts() -> r
    java.util.List getSIPContacts() -> s
    android.database.Cursor getAllContactsCursor() -> t
    android.database.Cursor getSIPContactsCursor() -> u
    void setLinphoneContactsPrefered(boolean) -> d
    boolean isLinphoneContactsPrefered() -> v
    boolean newFriend(com.inhuasoft.smart.client.Contact,java.lang.String) -> a
    boolean removeFriend(com.inhuasoft.smart.client.Contact,java.lang.String) -> b
    void searchFriendAndAddToContact(com.inhuasoft.smart.client.Contact) -> c
    void removeContactFromLists(com.inhuasoft.smart.client.Contact) -> a
    void prepareContactsInBackground() -> w
    void initInCallMenuLayout(boolean) -> e
    void resetClassicMenuLayoutAndGoBackToCallIfStillRunning() -> x
    com.inhuasoft.smart.client.ChatStorage getChatStorage() -> y
    void addContact(java.lang.String,java.lang.String) -> b
    void editContact(com.inhuasoft.smart.client.Contact) -> b
    void editContact(com.inhuasoft.smart.client.Contact,java.lang.String) -> c
    void exit() -> z
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void unbindDrawables(android.view.View) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int access$0(com.inhuasoft.smart.client.LinphoneActivity) -> a
    void access$1(com.inhuasoft.smart.client.LinphoneActivity,int) -> a
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$FragmentsAvailable() -> A
    android.widget.TextView access$4(com.inhuasoft.smart.client.LinphoneActivity) -> b
    boolean access$5(com.inhuasoft.smart.client.LinphoneActivity) -> c
    android.widget.TextView access$6(com.inhuasoft.smart.client.LinphoneActivity) -> d
    android.database.Cursor access$7(com.inhuasoft.smart.client.LinphoneActivity) -> e
    boolean access$8(com.inhuasoft.smart.client.LinphoneActivity) -> f
    void access$9(com.inhuasoft.smart.client.LinphoneActivity,com.inhuasoft.smart.client.Contact) -> a
    java.util.List access$10(com.inhuasoft.smart.client.LinphoneActivity) -> g
    android.database.Cursor access$11(com.inhuasoft.smart.client.LinphoneActivity) -> h
    java.util.List access$12(com.inhuasoft.smart.client.LinphoneActivity) -> i
    android.support.v4.app.Fragment access$13(com.inhuasoft.smart.client.LinphoneActivity) -> j
com.inhuasoft.smart.client.LinphoneActivity$1 -> com.inhuasoft.smart.client.cv:
    com.inhuasoft.smart.client.LinphoneActivity this$0 -> a
    int val$missedCallsCount -> b
    void run() -> run
com.inhuasoft.smart.client.LinphoneActivity$2 -> com.inhuasoft.smart.client.cw:
    com.inhuasoft.smart.client.LinphoneActivity this$0 -> a
    int val$missedChatCount -> b
    void run() -> run
com.inhuasoft.smart.client.LinphoneActivity$3 -> com.inhuasoft.smart.client.cx:
    com.inhuasoft.smart.client.LinphoneActivity this$0 -> a
    java.lang.String val$message -> b
    int val$duration -> c
    void run() -> run
com.inhuasoft.smart.client.LinphoneActivity$4 -> com.inhuasoft.smart.client.cy:
    com.inhuasoft.smart.client.LinphoneActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LinphoneActivity$5 -> com.inhuasoft.smart.client.cz:
    com.inhuasoft.smart.client.LinphoneActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LinphoneActivity$LocalOrientationEventListener -> com.inhuasoft.smart.client.da:
    com.inhuasoft.smart.client.LinphoneActivity this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.inhuasoft.smart.client.LinphoneLauncherActivity -> com.inhuasoft.smart.client.LinphoneLauncherActivity:
    android.os.Handler mHandler -> a
    com.inhuasoft.smart.client.LinphoneLauncherActivity$ServiceWaitThread mThread -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceReady() -> a
    android.os.Handler access$0(com.inhuasoft.smart.client.LinphoneLauncherActivity) -> a
    void access$1(com.inhuasoft.smart.client.LinphoneLauncherActivity,com.inhuasoft.smart.client.LinphoneLauncherActivity$ServiceWaitThread) -> a
com.inhuasoft.smart.client.LinphoneLauncherActivity$1 -> com.inhuasoft.smart.client.db:
    com.inhuasoft.smart.client.LinphoneLauncherActivity this$0 -> a
    java.lang.Class val$classToStart -> b
    void run() -> run
com.inhuasoft.smart.client.LinphoneLauncherActivity$ServiceWaitThread -> com.inhuasoft.smart.client.dc:
    com.inhuasoft.smart.client.LinphoneLauncherActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.client.LinphoneLauncherActivity access$1(com.inhuasoft.smart.client.LinphoneLauncherActivity$ServiceWaitThread) -> a
com.inhuasoft.smart.client.LinphoneLauncherActivity$ServiceWaitThread$1 -> com.inhuasoft.smart.client.dd:
    com.inhuasoft.smart.client.LinphoneLauncherActivity$ServiceWaitThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.LinphoneManager -> com.inhuasoft.smart.client.de:
    com.inhuasoft.smart.client.LinphoneManager instance -> c
    android.content.Context mServiceContext -> d
    android.media.AudioManager mAudioManager -> e
    android.os.PowerManager mPowerManager -> f
    android.content.res.Resources mR -> g
    com.inhuasoft.smart.client.LinphonePreferences mPrefs -> h
    org.linphone.core.LinphoneCore mLc -> i
    java.lang.String basePath -> j
    boolean sExited -> k
    int mLastNetworkType -> l
    android.net.ConnectivityManager mConnectivityManager -> m
    android.os.Handler mHandler -> n
    java.lang.String wizardLoginViewDomain -> a
    java.util.List simpleListeners -> o
    java.lang.String mLPConfigXsd -> p
    java.lang.String mLinphoneFactoryConfigFile -> q
    java.lang.String mLinphoneRootCaFile -> r
    java.lang.String mLinphoneConfigFile -> b
    java.lang.String mRingSoundFile -> s
    java.lang.String mRingbackSoundFile -> t
    java.lang.String mPauseSoundFile -> u
    java.lang.String mChatDatabaseFile -> v
    java.lang.String mErrorToneFile -> w
    java.util.Timer mTimer -> x
    android.content.BroadcastReceiver mKeepAliveReceiver -> y
    com.inhuasoft.smart.client.LinphoneSimpleListener$ConnectivityChangedListener connectivityListener -> z
    com.inhuasoft.smart.client.LinphoneManager$ListenerDispatcher mListenerDispatcher -> A
    android.os.Vibrator mVibrator -> B
    int savedMaxCallWhileGsmIncall -> C
    boolean disableRinging -> D
    boolean sLastProximitySensorValueNearby -> E
    java.util.Set sProximityDependentActivities -> F
    android.hardware.SensorEventListener sProximitySensorListener -> G
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnComposingReceivedListener composingReceivedListener -> H
    void addListener(com.inhuasoft.smart.client.LinphoneSimpleListener) -> a
    void removeListener(com.inhuasoft.smart.client.LinphoneSimpleListener) -> b
    void routeAudioToSpeakerHelper(boolean) -> c
    void audioStateChanged(com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState) -> a
    void routeAudioToSpeaker() -> a
    java.lang.String getUserAgent() -> b
    void routeAudioToReceiver() -> c
    com.inhuasoft.smart.client.LinphoneManager createAndStart(android.content.Context,com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneServiceListener) -> a
    boolean isPresenceModelActivitySet() -> t
    void changeStatusToOnline() -> d
    void changeStatusToOnThePhone() -> e
    void changeStatusToOffline() -> f
    com.inhuasoft.smart.client.LinphoneManager getInstance() -> g
    org.linphone.core.LinphoneCore getLc() -> h
    void newOutgoingCall(com.inhuasoft.smart.client.LinphoneManager$AddressType) -> a
    void newOutgoingCall(java.lang.String,java.lang.String) -> a
    void enableCamera(org.linphone.core.LinphoneCall,boolean) -> a
    void playDtmf(android.content.ContentResolver,char) -> a
    void terminateCall() -> i
    void initTunnelFromConf() -> j
    boolean isTunnelNeeded(android.net.NetworkInfo) -> a
    void manageTunnelServer(android.net.NetworkInfo) -> b
    void startLibLinphone(android.content.Context) -> a
    void copyAssetsFromPackage() -> u
    void copyIfNotExist(int,java.lang.String) -> a
    void copyFromPackage(int,java.lang.String) -> b
    void updateNetworkReachability() -> k
    void doDestroy() -> v
    void destroy() -> l
    java.lang.String getString(int) -> b
    void connectivityChanged(android.net.ConnectivityManager,boolean) -> a
    void preventSIPCalls() -> w
    void allowSIPCalls() -> x
    void setGsmIdle(boolean) -> a
    android.content.Context getContext() -> m
    void startEcCalibration(com.inhuasoft.smart.client.LinphoneManager$EcCalibrationListener) -> a
    boolean reinviteWithVideo() -> n
    boolean addVideo() -> o
    boolean acceptCallIfIncomingPending() -> p
    boolean acceptCallWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> a
    void adjustVolume(int) -> a
    java.lang.Boolean isProximitySensorNearby(android.hardware.SensorEvent) -> a
    void simulateProximitySensorNearby(android.app.Activity,boolean) -> a
    void proximityNearbyChanged() -> y
    void startProximitySensorForActivity(android.app.Activity) -> a
    void stopProximitySensorForActivity(android.app.Activity) -> b
    org.linphone.core.LinphoneCore getLcIfManagerNotDestroyedOrNull() -> q
    java.util.List getSimpleListeners(java.lang.Class) -> a
    boolean isInstanciated() -> r
    void setOnComposingReceivedListener(com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnComposingReceivedListener) -> a
    void access$0(boolean) -> b
    void access$1() -> s
    org.linphone.core.LinphoneCore access$3(com.inhuasoft.smart.client.LinphoneManager) -> a
com.inhuasoft.smart.client.LinphoneManager$1 -> com.inhuasoft.smart.client.df:
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.inhuasoft.smart.client.LinphoneManager$2 -> com.inhuasoft.smart.client.dg:
    com.inhuasoft.smart.client.LinphoneManager this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LinphoneManager$AddressType -> com.inhuasoft.smart.client.dh:
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getText() -> getText
    void setDisplayedName(java.lang.String) -> setDisplayedName
    java.lang.String getDisplayedName() -> getDisplayedName
com.inhuasoft.smart.client.LinphoneManager$EcCalibrationListener -> com.inhuasoft.smart.client.di:
com.inhuasoft.smart.client.LinphoneManager$ListenerDispatcher -> com.inhuasoft.smart.client.dj:
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneServiceListener serviceListener -> b
    com.inhuasoft.smart.client.LinphoneManager this$0 -> a
    void tryingNewOutgoingCallButCannotGetCallParameters() -> a
    void tryingNewOutgoingCallButWrongDestinationAddress() -> b
com.inhuasoft.smart.client.LinphonePreferences -> com.inhuasoft.smart.client.dk:
    com.inhuasoft.smart.client.LinphonePreferences instance -> a
    android.content.Context mContext -> b
    com.inhuasoft.smart.client.LinphonePreferences instance() -> a
    java.lang.String getString(int) -> u
    org.linphone.core.LinphoneCore getLc() -> P
    org.linphone.core.LpConfig getConfig() -> b
    boolean isFirstLaunch() -> c
    void firstLaunchSuccessful() -> d
    boolean isReg() -> e
    void setReg(boolean) -> a
    boolean isLogin() -> f
    void setLogin(boolean) -> b
    void setUserSip(java.lang.String) -> a
    java.lang.String getDeviceSip() -> g
    void setDeviceSip(java.lang.String) -> b
    java.lang.String getDevice() -> h
    void setDevice(java.lang.String) -> c
    org.linphone.core.LinphoneProxyConfig getProxyConfig(int) -> v
    org.linphone.core.LinphoneAuthInfo getAuthInfo(int) -> w
    org.linphone.core.LinphoneAuthInfo getClonedAuthInfo(int) -> x
    void saveAuthInfo(org.linphone.core.LinphoneAuthInfo) -> a
    void CreatedAccount(java.lang.String,java.lang.String,java.lang.String) -> a
    void setAccountTransport(int,java.lang.String) -> a
    org.linphone.core.LinphoneAddress$TransportType getAccountTransport(int) -> a
    java.lang.String getAccountTransportKey(int) -> b
    java.lang.String getAccountTransportString(int) -> c
    void setAccountUsername(int,java.lang.String) -> b
    java.lang.String getAccountUsername(int) -> d
    void setAccountDisplayName(int,java.lang.String) -> c
    java.lang.String getAccountDisplayName(int) -> e
    void setAccountUserId(int,java.lang.String) -> d
    java.lang.String getAccountUserId(int) -> f
    void setAccountPassword(int,java.lang.String) -> e
    java.lang.String getAccountPassword(int) -> g
    void setAccountDomain(int,java.lang.String) -> f
    java.lang.String getAccountDomain(int) -> h
    void setAccountProxy(int,java.lang.String) -> g
    java.lang.String getAccountProxy(int) -> i
    void setAccountOutboundProxyEnabled(int,boolean) -> a
    boolean isAccountOutboundProxySet(int) -> j
    java.lang.String getExpires(int) -> k
    void setExpires(int,java.lang.String) -> h
    java.lang.String getPrefix(int) -> l
    void setPrefix(int,java.lang.String) -> i
    boolean avpfEnabled(int) -> m
    void enableAvpf(int,boolean) -> b
    java.lang.String getAvpfRRInterval(int) -> n
    void setAvpfRRInterval(int,java.lang.String) -> j
    boolean getReplacePlusByZeroZero(int) -> o
    void setReplacePlusByZeroZero(int,boolean) -> c
    void setDefaultAccount(int) -> p
    int getDefaultAccountIndex() -> i
    int getAccountCount() -> j
    void setAccountEnabled(int,boolean) -> d
    boolean isAccountEnabled(int) -> q
    void deleteAccount(int) -> r
    void setEchoCancellation(boolean) -> c
    boolean isEchoCancellationEnabled() -> k
    boolean useFrontCam() -> l
    void setFrontCamAsDefault(boolean) -> d
    boolean isVideoEnabled() -> m
    void enableVideo(boolean) -> e
    boolean shouldInitiateVideoCall() -> n
    void setInitiateVideoCall(boolean) -> f
    boolean shouldAutomaticallyAcceptVideoRequests() -> o
    void setAutomaticallyAcceptVideoRequests(boolean) -> g
    java.lang.String getPreferredVideoSize() -> p
    void setPreferredVideoSize(java.lang.String) -> d
    boolean useRfc2833Dtmfs() -> q
    void sendDtmfsAsRfc2833(boolean) -> h
    boolean useSipInfoDtmfs() -> r
    void sendDTMFsAsSipInfo(boolean) -> i
    void setWifiOnlyEnabled(java.lang.Boolean) -> a
    boolean isWifiOnlyEnabled() -> s
    java.lang.String getStunServer() -> t
    void setStunServer(java.lang.String) -> e
    void setIceEnabled(boolean) -> j
    void setUpnpEnabled(boolean) -> k
    void useRandomPort(boolean) -> l
    void useRandomPort(boolean,boolean) -> a
    boolean isUsingRandomPort() -> u
    java.lang.String getSipPort() -> v
    void setSipPort(int) -> s
    boolean isUpnpEnabled() -> w
    boolean isIceEnabled() -> x
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> y
    void setMediaEncryption(org.linphone.core.LinphoneCore$MediaEncryption) -> a
    void setPushNotificationEnabled(boolean) -> m
    boolean isPushNotificationEnabled() -> z
    void setPushNotificationRegistrationID(java.lang.String) -> f
    java.lang.String getPushNotificationRegistrationID() -> A
    void useIpv6(java.lang.Boolean) -> b
    boolean isUsingIpv6() -> B
    void setDebugEnabled(boolean) -> n
    boolean isDebugEnabled() -> C
    void setBackgroundModeEnabled(boolean) -> o
    boolean isBackgroundModeEnabled() -> D
    void setAnimationsEnabled(boolean) -> p
    boolean areAnimationsEnabled() -> E
    boolean isAutoStartEnabled() -> F
    void setAutoStart(boolean) -> q
    java.lang.String getSharingPictureServerUrl() -> G
    void setSharingPictureServerUrl(java.lang.String) -> g
    void setRemoteProvisioningUrl(java.lang.String) -> h
    java.lang.String getRemoteProvisioningUrl() -> H
    void setDefaultDisplayName(java.lang.String) -> i
    java.lang.String getDefaultDisplayName() -> I
    void setDefaultUsername(java.lang.String) -> j
    java.lang.String getDefaultUsername() -> J
    java.lang.String getTunnelMode() -> K
    void setTunnelMode(java.lang.String) -> k
    java.lang.String getTunnelHost() -> L
    void setTunnelHost(java.lang.String) -> l
    int getTunnelPort() -> M
    void setTunnelPort(int) -> t
    boolean isProvisioningLoginViewEnabled() -> N
    void disableProvisioningLoginView() -> O
com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder -> com.inhuasoft.smart.client.dl:
    org.linphone.core.LinphoneCore lc -> a
    java.lang.String tempUsername -> b
    java.lang.String tempDisplayName -> c
    java.lang.String tempUserId -> d
    java.lang.String tempPassword -> e
    java.lang.String tempDomain -> f
    java.lang.String tempProxy -> g
    boolean tempOutboundProxy -> h
    java.lang.String tempContactsParams -> i
    java.lang.String tempExpire -> j
    org.linphone.core.LinphoneAddress$TransportType tempTransport -> k
    boolean tempAvpfEnabled -> l
    int tempAvpfRRInterval -> m
    boolean tempEnabled -> n
    boolean tempNoDefault -> o
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setTransport(org.linphone.core.LinphoneAddress$TransportType) -> a
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setUsername(java.lang.String) -> a
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setPassword(java.lang.String) -> b
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setDomain(java.lang.String) -> c
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setProxy(java.lang.String) -> d
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setOutboundProxyEnabled(boolean) -> a
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setContactParameters(java.lang.String) -> e
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setExpires(java.lang.String) -> f
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setAvpfEnabled(boolean) -> b
    com.inhuasoft.smart.client.LinphonePreferences$AccountBuilder setAvpfRRInterval(int) -> a
    void saveNewAccount() -> a
com.inhuasoft.smart.client.LinphoneService -> com.inhuasoft.smart.client.LinphoneService:
    com.inhuasoft.smart.client.LinphoneService instance -> b
    android.os.Handler mHandler -> a
    boolean mTestDelayElapsed -> c
    android.net.wifi.WifiManager mWifiManager -> d
    android.net.wifi.WifiManager$WifiLock mWifiLock -> e
    android.app.NotificationManager mNM -> f
    android.app.Notification mNotif -> g
    android.app.Notification mIncallNotif -> h
    int mMsgNotifCount -> i
    android.app.PendingIntent mNotifContentIntent -> j
    android.app.PendingIntent mkeepAlivePendingIntent -> k
    java.lang.String mNotificationTitle -> l
    com.inhuasoft.smart.client.LinphoneService$IncallIconState mCurrentIncallIconState -> m
    java.lang.Class[] mSetFgSign -> n
    java.lang.Class[] mStartFgSign -> o
    java.lang.Class[] mStopFgSign -> p
    java.lang.reflect.Method mSetForeground -> q
    java.lang.reflect.Method mStartForeground -> r
    java.lang.reflect.Method mStopForeground -> s
    java.lang.Object[] mSetForegroundArgs -> t
    java.lang.Object[] mStartForegroundArgs -> u
    java.lang.Object[] mStopForegroundArgs -> v
    java.lang.Class incomingReceivedActivity -> w
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$LinphoneService$IncallIconState -> x
    boolean isReady() -> c
    com.inhuasoft.smart.client.LinphoneService instance() -> d
    void resetMessageNotifCount() -> e
    void onCreate() -> onCreate
    void startWifiLock() -> h
    void setIncallIcon(com.inhuasoft.smart.client.LinphoneService$IncallIconState) -> a
    void refreshIncallIcon(org.linphone.core.LinphoneCall) -> a
    void removeMessageNotification() -> f
    void invokeMethod(java.lang.reflect.Method,java.lang.Object[]) -> a
    void startForegroundCompat(int,android.app.Notification) -> a
    void stopForegroundCompat(int) -> a
    void dumpDeviceInformation() -> i
    void dumpInstalledLinphoneInformation() -> j
    void notifyWrapper(int,android.app.Notification) -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void setActivityToLaunchOnIncomingReceived(java.lang.Class) -> a
    void resetIntentLaunchedOnNotificationClick() -> k
    void tryingNewOutgoingCallButCannotGetCallParameters() -> a
    void tryingNewOutgoingCallButWrongDestinationAddress() -> b
    void access$0(com.inhuasoft.smart.client.LinphoneService,boolean) -> a
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$LinphoneService$IncallIconState() -> g
com.inhuasoft.smart.client.LinphoneService$1 -> com.inhuasoft.smart.client.dm:
    com.inhuasoft.smart.client.LinphoneService this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LinphoneService$IncallIconState -> com.inhuasoft.smart.client.dn:
    com.inhuasoft.smart.client.LinphoneService$IncallIconState INCALL -> a
    com.inhuasoft.smart.client.LinphoneService$IncallIconState PAUSE -> b
    com.inhuasoft.smart.client.LinphoneService$IncallIconState VIDEO -> c
    com.inhuasoft.smart.client.LinphoneService$IncallIconState IDLE -> d
    com.inhuasoft.smart.client.LinphoneService$IncallIconState[] ENUM$VALUES -> e
    com.inhuasoft.smart.client.LinphoneService$IncallIconState[] values() -> values
    com.inhuasoft.smart.client.LinphoneService$IncallIconState valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.client.LinphoneSimpleListener -> com.inhuasoft.smart.client.do:
com.inhuasoft.smart.client.LinphoneSimpleListener$ConnectivityChangedListener -> com.inhuasoft.smart.client.dp:
    void onConnectivityChanged(android.content.Context,android.net.NetworkInfo,android.net.ConnectivityManager) -> a
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener -> com.inhuasoft.smart.client.dq:
    void onAudioStateChanged(com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState) -> a
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState -> com.inhuasoft.smart.client.dr:
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState EARPIECE -> a
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState SPEAKER -> b
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState BLUETOOTH -> c
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState[] ENUM$VALUES -> d
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState[] values() -> values
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnCallEncryptionChangedListener -> com.inhuasoft.smart.client.ds:
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnCallStateChangedListener -> com.inhuasoft.smart.client.dt:
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnComposingReceivedListener -> com.inhuasoft.smart.client.du:
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnGlobalStateChangedListener -> com.inhuasoft.smart.client.dv:
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnMessageReceivedListener -> com.inhuasoft.smart.client.dw:
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnRegistrationStateChangedListener -> com.inhuasoft.smart.client.dx:
com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneServiceListener -> com.inhuasoft.smart.client.dy:
    void tryingNewOutgoingCallButCannotGetCallParameters() -> a
    void tryingNewOutgoingCallButWrongDestinationAddress() -> b
com.inhuasoft.smart.client.LinphoneUtils -> com.inhuasoft.smart.client.dz:
    boolean isSipAddress(java.lang.String) -> a
    boolean isStrictSipAddress(java.lang.String) -> b
    java.lang.String getUsernameFromAddress(java.lang.String) -> c
    boolean onKeyBackGoHome(android.app.Activity,int,android.view.KeyEvent) -> a
    boolean onKeyVolumeAdjust(int) -> a
    android.net.Uri findUriPictureOfContactAndSetDisplayName(org.linphone.core.LinphoneAddress,android.content.ContentResolver) -> a
    android.graphics.Bitmap downloadBitmap(android.net.Uri) -> a
    void setImagePictureFromUri(android.content.Context,android.widget.ImageView,android.net.Uri,int) -> a
    java.util.List getLinphoneCalls(org.linphone.core.LinphoneCore) -> a
    java.util.List getCallsInState(org.linphone.core.LinphoneCore,java.util.Collection) -> a
    int pixelsToDpi(android.content.res.Resources,int) -> a
    boolean isCallRunning(org.linphone.core.LinphoneCall) -> a
    boolean isCallEstablished(org.linphone.core.LinphoneCall) -> b
    boolean isHightBandwidthConnection(android.content.Context) -> a
    boolean isConnectionFast(int,int) -> a
    boolean zipLogs(java.lang.StringBuilder,java.lang.String) -> a
    void collectLogs(android.content.Context,java.lang.String) -> a
com.inhuasoft.smart.client.LoginActivity -> com.inhuasoft.smart.client.LoginActivity:
    java.lang.String TAG -> g
    android.widget.Button btnSubmit -> a
    android.widget.EditText editUserName -> b
    android.widget.EditText editPassword -> c
    android.widget.EditText editRePassword -> d
    android.widget.TextView txtMsginfo -> e
    android.widget.CheckBox chkMsginfo -> f
    android.os.Handler mHandler -> h
    void SetSystemInfo() -> e
    void StartMain() -> f
    java.lang.String getDeviceNo() -> a
    java.lang.String getValByTagName(org.w3c.dom.Document,java.lang.String) -> a
    java.lang.String ParserXml(java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void ResetInput() -> g
    void SetRegUI() -> b
    void SetLoginUI() -> c
    boolean ValidateRegInput() -> h
    boolean ValidateLoginInput() -> i
    void onClick(android.view.View) -> onClick
    void access$0(com.inhuasoft.smart.client.LoginActivity) -> a
    android.os.Handler access$1(com.inhuasoft.smart.client.LoginActivity) -> b
    void access$2(com.inhuasoft.smart.client.LoginActivity) -> c
    java.lang.String access$3() -> d
com.inhuasoft.smart.client.LoginActivity$1 -> com.inhuasoft.smart.client.ea:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.inhuasoft.smart.client.LoginActivity access$0(com.inhuasoft.smart.client.LoginActivity$1) -> a
com.inhuasoft.smart.client.LoginActivity$1$1 -> com.inhuasoft.smart.client.eb:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$10 -> com.inhuasoft.smart.client.ec:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$11 -> com.inhuasoft.smart.client.ed:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$12 -> com.inhuasoft.smart.client.ee:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$13 -> com.inhuasoft.smart.client.ef:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$2 -> com.inhuasoft.smart.client.eg:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$3 -> com.inhuasoft.smart.client.eh:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$4 -> com.inhuasoft.smart.client.ei:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$5 -> com.inhuasoft.smart.client.ej:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$6 -> com.inhuasoft.smart.client.ek:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$7 -> com.inhuasoft.smart.client.el:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$8 -> com.inhuasoft.smart.client.em:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$1$9 -> com.inhuasoft.smart.client.en:
    com.inhuasoft.smart.client.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$2 -> com.inhuasoft.smart.client.eo:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$3 -> com.inhuasoft.smart.client.ep:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$4 -> com.inhuasoft.smart.client.eq:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$5 -> com.inhuasoft.smart.client.er:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$6 -> com.inhuasoft.smart.client.es:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.LoginActivity$BindUserDeviceThread -> com.inhuasoft.smart.client.et:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$DeviceRegThread -> com.inhuasoft.smart.client.eu:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$GetUserByDeviceThread -> com.inhuasoft.smart.client.ev:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$SipAddDeviceThread -> com.inhuasoft.smart.client.ew:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$SipAddUserThread -> com.inhuasoft.smart.client.ex:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$SipAdminLoginThread -> com.inhuasoft.smart.client.ey:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$UserLoginThread -> com.inhuasoft.smart.client.ez:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.LoginActivity$UserRegThread -> com.inhuasoft.smart.client.fa:
    com.inhuasoft.smart.client.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.MD5 -> com.inhuasoft.smart.client.fb:
    java.lang.String getMD5(java.lang.String) -> a
    java.lang.String getString(byte[]) -> a
com.inhuasoft.smart.client.MainActivity -> com.inhuasoft.smart.client.MainActivity:
    android.os.Handler mHandler -> a
    android.view.OrientationEventListener mOrientationHelper -> b
    int mAlwaysChangingPhoneAngle -> c
    com.inhuasoft.smart.client.MainActivity instance -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void exit() -> a
    void startVideoActivity(org.linphone.core.LinphoneCall) -> a
    void startIncallActivity(org.linphone.core.LinphoneCall) -> b
    void startOrientationSensor() -> b
    int access$0(com.inhuasoft.smart.client.MainActivity) -> a
    void access$1(com.inhuasoft.smart.client.MainActivity,int) -> a
com.inhuasoft.smart.client.MainActivity$LocalOrientationEventListener -> com.inhuasoft.smart.client.fc:
    com.inhuasoft.smart.client.MainActivity this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.inhuasoft.smart.client.MenubarView -> com.inhuasoft.smart.client.MenubarView:
    android.widget.LinearLayout mLayout -> a
    android.widget.ImageView mImageView -> b
    android.widget.TextView mTextView -> c
    void setSelected(boolean) -> setSelected
    void setText(java.lang.CharSequence) -> setText
    void setText(int) -> setText
    void setTextColor(int) -> setTextColor
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    int getResourceId(android.content.res.TypedArray,int) -> a
    int getColor(int) -> a
com.inhuasoft.smart.client.MoreFragment -> com.inhuasoft.smart.client.fd:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.inhuasoft.smart.client.NetworkManager -> com.inhuasoft.smart.client.NetworkManager:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.client.PhoneStateChangedReceiver -> com.inhuasoft.smart.client.PhoneStateChangedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.client.R -> com.inhuasoft.smart.client.fe:
com.inhuasoft.smart.client.R$styleable -> com.inhuasoft.smart.client.ff:
    int[] AvatarWithShadow -> AvatarWithShadow
    int AvatarWithShadow_picture -> AvatarWithShadow_picture
    int[] MenubarView -> MenubarView
    int MenubarView_background -> MenubarView_background
    int MenubarView_src -> MenubarView_src
    int MenubarView_text -> MenubarView_text
    int MenubarView_text_size -> MenubarView_text_size
    int[] Numpad -> Numpad
    int Numpad_play_dtmf -> Numpad_play_dtmf
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_direction -> SlidingDrawer_direction
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int[] SlidingTab -> SlidingTab
    int SlidingTab_orientation -> SlidingTab_orientation
com.inhuasoft.smart.client.RegexUtils -> com.inhuasoft.smart.client.fg:
    boolean checkUserName(java.lang.String) -> a
    boolean checkPassWord(java.lang.String) -> b
com.inhuasoft.smart.client.ScreenHome -> com.inhuasoft.smart.client.ScreenHome:
    java.lang.String TAG -> a
    com.inhuasoft.smart.client.MenubarView mHomeLayout -> b
    com.inhuasoft.smart.client.MenubarView mVideoLayout -> c
    com.inhuasoft.smart.client.MenubarView mSwitchLayout -> d
    com.inhuasoft.smart.client.MenubarView mControlLayout -> e
    com.inhuasoft.smart.client.MenubarView mMoreLayout -> f
    android.app.FragmentManager mFragmentManager -> g
    com.inhuasoft.smart.client.HomeFragment mHomeFragment -> h
    com.inhuasoft.smart.client.VideoFragment mVideoFragment -> i
    com.inhuasoft.smart.client.SwitchFragment mSwitchFragment -> j
    com.inhuasoft.smart.client.ControlFragment mControlFragment -> k
    com.inhuasoft.smart.client.MoreFragment mMoreFragment -> l
    com.inhuasoft.smart.client.TwowayVideoFragment mTwowayVideoFragment -> m
    com.inhuasoft.smart.client.AudioCall_New_Fragment mAudioCallFragment -> n
    int mAlwaysChangingPhoneAngle -> o
    com.inhuasoft.smart.client.ScreenHome instance -> p
    android.os.Handler mHandler -> q
    android.view.OrientationEventListener mOrientationHelper -> r
    boolean isSpeakerEnabled -> s
    boolean isMicMuted -> t
    boolean isVideoEnabled -> u
    int cameraNumber -> v
    boolean isInstanciated() -> a
    void onResume() -> onResume
    com.inhuasoft.smart.client.ScreenHome instance() -> b
    void initViews() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void setTabSelection(int) -> a
    void onDestroy() -> onDestroy
    void exit() -> c
    void startVideo(org.linphone.core.LinphoneCall) -> a
    void startIncall(org.linphone.core.LinphoneCall) -> b
    void clearSelection() -> e
    void hideFragments(android.app.FragmentTransaction) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.inhuasoft.smart.client.SettingsFragment -> com.inhuasoft.smart.client.fh:
    com.inhuasoft.smart.client.LinphonePreferences mPrefs -> V
    android.os.Handler mHandler -> W
    void onCreate(android.os.Bundle) -> c
    void initSettings() -> y
    void setListeners() -> z
    void hideSettings() -> A
    void uncheckAndHidePreference(int) -> d
    void emptyAndHidePreference(int) -> e
    void emptyAndHidePreferenceCategory(int) -> f
    void emptyAndHidePreferenceScreen(int) -> g
    void hidePreference(int) -> h
    void hidePreference(android.preference.Preference) -> a
    void setPreferenceDefaultValueAndSummary(int,java.lang.String) -> a
    void initTunnelSettings() -> B
    void setTunnelPreferencesListener() -> C
    void initAccounts() -> D
    void updateAccountLed(com.inhuasoft.smart.client.ui.LedPreference,java.lang.String,java.lang.String,boolean) -> a
    void initMediaEncryptionPreference(android.preference.ListPreference) -> a
    void initializePreferredVideoSizePreferences(android.preference.ListPreference) -> b
    void setListPreferenceValues(android.preference.ListPreference,java.util.List,java.util.List) -> a
    void initAudioSettings() -> E
    void setAudioPreferencesListener() -> F
    void initVideoSettings() -> G
    void setVideoPreferencesListener() -> H
    void initCallSettings() -> I
    void setCallPreferencesListener() -> J
    void initNetworkSettings() -> K
    void setNetworkPreferencesListener() -> L
    void initAdvancedSettings() -> M
    void setAdvancedPreferencesListener() -> N
    void onResume() -> l
    com.inhuasoft.smart.client.LinphonePreferences access$0(com.inhuasoft.smart.client.SettingsFragment) -> a
    void access$1(com.inhuasoft.smart.client.SettingsFragment,com.inhuasoft.smart.client.ui.LedPreference,java.lang.String,java.lang.String,boolean) -> a
com.inhuasoft.smart.client.SettingsFragment$1 -> com.inhuasoft.smart.client.fi:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.client.SettingsFragment$10 -> com.inhuasoft.smart.client.fj:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.client.SettingsFragment$11 -> com.inhuasoft.smart.client.fk:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    org.linphone.core.PayloadType val$pt -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$12 -> com.inhuasoft.smart.client.fl:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$13 -> com.inhuasoft.smart.client.fm:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$14 -> com.inhuasoft.smart.client.fn:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$15 -> com.inhuasoft.smart.client.fo:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$16 -> com.inhuasoft.smart.client.fp:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$17 -> com.inhuasoft.smart.client.fq:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$18 -> com.inhuasoft.smart.client.fr:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$19 -> com.inhuasoft.smart.client.fs:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$2 -> com.inhuasoft.smart.client.ft:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.client.SettingsFragment$20 -> com.inhuasoft.smart.client.fu:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$21 -> com.inhuasoft.smart.client.fv:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$22 -> com.inhuasoft.smart.client.fw:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$23 -> com.inhuasoft.smart.client.fx:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$24 -> com.inhuasoft.smart.client.fy:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$25 -> com.inhuasoft.smart.client.fz:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$26 -> com.inhuasoft.smart.client.ga:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$27 -> com.inhuasoft.smart.client.gb:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$28 -> com.inhuasoft.smart.client.gc:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$29 -> com.inhuasoft.smart.client.gd:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$3 -> com.inhuasoft.smart.client.ge:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$30 -> com.inhuasoft.smart.client.gf:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$31 -> com.inhuasoft.smart.client.gg:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$32 -> com.inhuasoft.smart.client.gh:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$33 -> com.inhuasoft.smart.client.gi:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$34 -> com.inhuasoft.smart.client.gj:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$35 -> com.inhuasoft.smart.client.gk:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$4 -> com.inhuasoft.smart.client.gl:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$5 -> com.inhuasoft.smart.client.gm:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$6 -> com.inhuasoft.smart.client.gn:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    int val$accountId -> b
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.client.SettingsFragment$7 -> com.inhuasoft.smart.client.go:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    com.inhuasoft.smart.client.ui.LedPreference val$me -> b
    java.lang.String val$username -> c
    java.lang.String val$domain -> d
    void run() -> run
com.inhuasoft.smart.client.SettingsFragment$8 -> com.inhuasoft.smart.client.gp:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    org.linphone.core.PayloadType val$pt -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SettingsFragment$9 -> com.inhuasoft.smart.client.gq:
    com.inhuasoft.smart.client.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.client.SmartApplication -> com.inhuasoft.smart.client.SmartApplication:
    org.apache.http.client.CookieStore cookies -> a
    org.apache.http.client.CookieStore getCookie() -> a
    void setCookie(org.apache.http.client.CookieStore) -> a
com.inhuasoft.smart.client.StatusFragment -> com.inhuasoft.smart.client.StatusFragment:
    android.os.Handler mHandler -> N
    android.os.Handler refreshHandler -> O
    android.widget.TextView statusText -> P
    android.widget.TextView exit -> Q
    android.widget.ImageView statusLed -> R
    android.widget.ImageView callQuality -> S
    android.widget.ImageView encryption -> T
    android.widget.ImageView background -> U
    android.widget.ListView sliderContentAccounts -> V
    android.widget.TableLayout callStats -> W
    com.inhuasoft.smart.client.ui.SlidingDrawer drawer -> X
    java.lang.Runnable mCallQualityUpdater -> Y
    boolean isInCall -> Z
    boolean isAttached -> aa
    java.util.Timer mTimer -> ab
    java.util.TimerTask mTask -> ac
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> r
    void openOrCloseStatusBar(boolean) -> b
    void closeStatusBar() -> x
    void populateSliderContent() -> y
    void registrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState) -> a
    int getStatusIconResource(org.linphone.core.LinphoneCore$RegistrationState,boolean) -> a
    java.lang.String getStatusIconText(org.linphone.core.LinphoneCore$RegistrationState) -> b
    void startCallQuality() -> z
    void updateQualityOfSignalIcon(float) -> a
    void onResume() -> l
    void onPause() -> m
    void refreshStatusItems(org.linphone.core.LinphoneCall,boolean) -> a
    void showZRTPDialog(org.linphone.core.LinphoneCall) -> a
    void initCallStatsRefresher(org.linphone.core.LinphoneCall,android.view.View) -> a
    int access$0(com.inhuasoft.smart.client.StatusFragment,org.linphone.core.LinphoneCore$RegistrationState,boolean) -> a
    void access$1(com.inhuasoft.smart.client.StatusFragment) -> a
    android.widget.ImageView access$2(com.inhuasoft.smart.client.StatusFragment) -> b
    android.widget.TextView access$3(com.inhuasoft.smart.client.StatusFragment) -> c
    java.lang.String access$4(com.inhuasoft.smart.client.StatusFragment,org.linphone.core.LinphoneCore$RegistrationState) -> a
    android.widget.ListView access$5(com.inhuasoft.smart.client.StatusFragment) -> d
    void access$6(com.inhuasoft.smart.client.StatusFragment,java.lang.Runnable) -> a
    boolean access$7(com.inhuasoft.smart.client.StatusFragment) -> e
    android.os.Handler access$8(com.inhuasoft.smart.client.StatusFragment) -> f
    void access$9(com.inhuasoft.smart.client.StatusFragment,org.linphone.core.LinphoneCall) -> a
    android.widget.ImageView access$10(com.inhuasoft.smart.client.StatusFragment) -> g
    java.util.Timer access$11(com.inhuasoft.smart.client.StatusFragment) -> h
    android.os.Handler access$12(com.inhuasoft.smart.client.StatusFragment) -> i
com.inhuasoft.smart.client.StatusFragment$1 -> com.inhuasoft.smart.client.gr:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    void onDrawerOpened() -> a
com.inhuasoft.smart.client.StatusFragment$2 -> com.inhuasoft.smart.client.gs:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.inhuasoft.smart.client.StatusFragment$3 -> com.inhuasoft.smart.client.gt:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCore$RegistrationState val$state -> b
    void run() -> run
com.inhuasoft.smart.client.StatusFragment$3$1 -> com.inhuasoft.smart.client.gu:
    com.inhuasoft.smart.client.StatusFragment$3 this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.StatusFragment$4 -> com.inhuasoft.smart.client.gv:
    org.linphone.core.LinphoneCall mCurrentCall -> a
    com.inhuasoft.smart.client.StatusFragment this$0 -> b
    void run() -> run
com.inhuasoft.smart.client.StatusFragment$5 -> com.inhuasoft.smart.client.gw:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.StatusFragment$6 -> com.inhuasoft.smart.client.gx:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.StatusFragment$7 -> com.inhuasoft.smart.client.gy:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.StatusFragment$8 -> com.inhuasoft.smart.client.gz:
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    android.view.View val$view -> c
    void run() -> run
com.inhuasoft.smart.client.StatusFragment$8$1 -> com.inhuasoft.smart.client.ha:
    com.inhuasoft.smart.client.StatusFragment$8 this$1 -> a
    org.linphone.core.LinphoneCall val$call -> b
    android.widget.TextView val$title -> c
    android.widget.TextView val$codec -> d
    android.widget.TextView val$dl -> e
    android.widget.TextView val$ul -> f
    android.widget.TextView val$ice -> g
    android.view.View val$videoResolutionLayout -> h
    android.widget.TextView val$videoResolution -> i
    void run() -> run
com.inhuasoft.smart.client.StatusFragment$AccountsListAdapter -> com.inhuasoft.smart.client.hb:
    java.util.List checkboxes -> b
    android.view.View$OnClickListener defaultListener -> c
    com.inhuasoft.smart.client.StatusFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(com.inhuasoft.smart.client.StatusFragment$AccountsListAdapter) -> a
com.inhuasoft.smart.client.StatusFragment$AccountsListAdapter$1 -> com.inhuasoft.smart.client.hc:
    com.inhuasoft.smart.client.StatusFragment$AccountsListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.StatusFragment$AccountsListAdapter$2 -> com.inhuasoft.smart.client.hd:
    com.inhuasoft.smart.client.StatusFragment$AccountsListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.SwitchFragment -> com.inhuasoft.smart.client.he:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.inhuasoft.smart.client.TwowayVideoFragment -> com.inhuasoft.smart.client.hf:
    java.lang.String TAG -> d
    android.view.SurfaceView mVideoView -> e
    android.view.SurfaceView mCaptureView -> f
    org.linphone.mediastream.video.AndroidVideoWindowImpl androidVideoWindowImpl -> g
    android.view.GestureDetector mGestureDetector -> h
    float mZoomFactor -> i
    float mZoomCenterX -> j
    float mZoomCenterY -> k
    com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector mScaleDetector -> l
    com.inhuasoft.smart.client.ScreenHome inCallActivity -> m
    android.widget.ImageButton imgbtn_capture_img -> a
    android.widget.ImageButton imgbtn_record_video -> b
    android.widget.Button imgbtn_hangup -> c
    boolean IsRecord -> n
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void fixZOrder(android.view.SurfaceView,android.view.SurfaceView) -> a
    void onDestroy() -> onDestroy
    void onAttach(android.app.Activity) -> onAttach
    void onPause() -> onPause
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onScale(com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector) -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void resetZoom() -> a
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void hangUp() -> b
    void takeSnapshot() -> c
    void startVideoRecord() -> d
    void stopVideoRecord() -> e
    void onClick(android.view.View) -> onClick
    void access$0(com.inhuasoft.smart.client.TwowayVideoFragment,android.view.SurfaceView) -> a
    void access$1(com.inhuasoft.smart.client.TwowayVideoFragment,android.view.SurfaceView) -> b
    android.view.SurfaceView access$2(com.inhuasoft.smart.client.TwowayVideoFragment) -> a
    com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector access$3(com.inhuasoft.smart.client.TwowayVideoFragment) -> b
    android.view.GestureDetector access$4(com.inhuasoft.smart.client.TwowayVideoFragment) -> c
com.inhuasoft.smart.client.TwowayVideoFragment$1 -> com.inhuasoft.smart.client.hg:
    com.inhuasoft.smart.client.TwowayVideoFragment this$0 -> a
    void onVideoRenderingSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> a
    void onVideoRenderingSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> a
    void onVideoPreviewSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> b
    void onVideoPreviewSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> b
com.inhuasoft.smart.client.TwowayVideoFragment$2 -> com.inhuasoft.smart.client.hh:
    com.inhuasoft.smart.client.TwowayVideoFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.inhuasoft.smart.client.UserLoginActivity -> com.inhuasoft.smart.client.UserLoginActivity:
    java.lang.String TAG -> d
    android.widget.Button btnSubmit -> a
    android.widget.EditText editUserName -> b
    android.widget.EditText editPassword -> c
    java.lang.String DeviceNo -> e
    android.os.Handler mHandler -> f
    void SetSystemInfo() -> b
    void StartMain() -> c
    java.lang.String getValByTagName(org.w3c.dom.Document,java.lang.String) -> a
    java.lang.String ParserXml(java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void ResetInput() -> d
    boolean ValidateLoginInput() -> e
    void onClick(android.view.View) -> onClick
    void access$0(com.inhuasoft.smart.client.UserLoginActivity) -> a
    void access$1(com.inhuasoft.smart.client.UserLoginActivity) -> b
    android.os.Handler access$2(com.inhuasoft.smart.client.UserLoginActivity) -> c
    java.lang.String access$3() -> a
    void access$4(com.inhuasoft.smart.client.UserLoginActivity,java.lang.String) -> a
    java.lang.String access$5(com.inhuasoft.smart.client.UserLoginActivity) -> d
com.inhuasoft.smart.client.UserLoginActivity$1 -> com.inhuasoft.smart.client.hi:
    com.inhuasoft.smart.client.UserLoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.inhuasoft.smart.client.UserLoginActivity access$0(com.inhuasoft.smart.client.UserLoginActivity$1) -> a
com.inhuasoft.smart.client.UserLoginActivity$1$1 -> com.inhuasoft.smart.client.hj:
    com.inhuasoft.smart.client.UserLoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.UserLoginActivity$1$2 -> com.inhuasoft.smart.client.hk:
    com.inhuasoft.smart.client.UserLoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.UserLoginActivity$2 -> com.inhuasoft.smart.client.hl:
    com.inhuasoft.smart.client.UserLoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.UserLoginActivity$3 -> com.inhuasoft.smart.client.hm:
    com.inhuasoft.smart.client.UserLoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.UserLoginActivity$UserLoginThread -> com.inhuasoft.smart.client.hn:
    com.inhuasoft.smart.client.UserLoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.VideoCallFragment -> com.inhuasoft.smart.client.ho:
    android.view.SurfaceView mVideoView -> Q
    android.view.SurfaceView mCaptureView -> R
    org.linphone.mediastream.video.AndroidVideoWindowImpl androidVideoWindowImpl -> S
    android.view.GestureDetector mGestureDetector -> T
    float mZoomFactor -> U
    float mZoomCenterX -> V
    float mZoomCenterY -> W
    com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector mScaleDetector -> X
    com.inhuasoft.smart.client.InCallActivity inCallActivity -> Y
    android.widget.ImageButton imgbtn_capture_img -> N
    android.widget.ImageButton imgbtn_record_video -> O
    android.widget.Button imgbtn_hangup -> P
    boolean IsRecord -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void fixZOrder(android.view.SurfaceView,android.view.SurfaceView) -> a
    void switchCamera() -> x
    void onResume() -> l
    void onPause() -> m
    boolean onScale(com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector) -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void resetZoom() -> y
    void onDestroy() -> p
    void onAttach(android.app.Activity) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void hangUp() -> z
    void takeSnapshot() -> A
    void startVideoRecord() -> B
    void stopVideoRecord() -> C
    void onClick(android.view.View) -> onClick
    void access$0(com.inhuasoft.smart.client.VideoCallFragment,android.view.SurfaceView) -> a
    void access$1(com.inhuasoft.smart.client.VideoCallFragment,android.view.SurfaceView) -> b
    android.view.SurfaceView access$2(com.inhuasoft.smart.client.VideoCallFragment) -> a
    com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector access$3(com.inhuasoft.smart.client.VideoCallFragment) -> b
    android.view.GestureDetector access$4(com.inhuasoft.smart.client.VideoCallFragment) -> c
com.inhuasoft.smart.client.VideoCallFragment$1 -> com.inhuasoft.smart.client.hp:
    com.inhuasoft.smart.client.VideoCallFragment this$0 -> a
    void onVideoRenderingSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> a
    void onVideoRenderingSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> a
    void onVideoPreviewSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> b
    void onVideoPreviewSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> b
com.inhuasoft.smart.client.VideoCallFragment$2 -> com.inhuasoft.smart.client.hq:
    com.inhuasoft.smart.client.VideoCallFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.inhuasoft.smart.client.VideoFragment -> com.inhuasoft.smart.client.hr:
    android.widget.ImageView mTwoWayVideo -> a
    android.widget.ImageView mAudioButton -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
com.inhuasoft.smart.client.VideoFragment$1 -> com.inhuasoft.smart.client.hs:
    com.inhuasoft.smart.client.VideoFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.VideoFragment$2 -> com.inhuasoft.smart.client.ht:
    com.inhuasoft.smart.client.VideoFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.compatibility.ApiEightPlus -> com.inhuasoft.smart.client.a.a:
    java.lang.String getAudioManagerEventForBluetoothConnectionStateChangedEvent() -> a
com.inhuasoft.smart.client.compatibility.ApiElevenPlus -> com.inhuasoft.smart.client.a.b:
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.graphics.Bitmap,android.app.PendingIntent) -> a
    void copyTextToClipboard(android.content.Context,java.lang.String) -> a
    android.content.Intent prepareAddContactIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent prepareEditContactIntentWithSipAddress(int,java.lang.String) -> a
com.inhuasoft.smart.client.compatibility.ApiFivePlus -> com.inhuasoft.smart.client.a.c:
    android.content.Intent prepareAddContactIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent prepareEditContactIntent(int) -> a
    java.util.List extractContactNumbersAndAddresses(java.lang.String,android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver) -> a
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver) -> b
    android.database.Cursor getGeneralContactCursor(android.content.ContentResolver,java.lang.String,boolean) -> a
    int getCursorDisplayNameColumnIndex(android.database.Cursor) -> a
    com.inhuasoft.smart.client.Contact getContact(android.content.ContentResolver,android.database.Cursor,int) -> a
    java.io.InputStream getContactPictureInputStream(android.content.ContentResolver,java.lang.String) -> a
    java.lang.String getContactDisplayName(android.database.Cursor) -> b
    android.net.Uri getContactPictureUri(java.lang.String) -> a
    java.lang.String refreshContactName(android.content.ContentResolver,java.lang.String) -> b
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.app.PendingIntent) -> a
    void copyTextToClipboard(android.content.Context,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void updateSipAddressForContact(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteSipAddressFromContact(java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void removeGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.app.PendingIntent) -> a
com.inhuasoft.smart.client.compatibility.ApiFourteenPlus -> com.inhuasoft.smart.client.a.d:
    void hideNavigationBar(android.app.Activity) -> a
    void showNavigationBar(android.app.Activity) -> b
    java.lang.String getAudioManagerEventForBluetoothConnectionStateChangedEvent() -> a
com.inhuasoft.smart.client.compatibility.ApiNinePlus -> com.inhuasoft.smart.client.a.e:
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void updateSipAddressForContact(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteSipAddressFromContact(java.util.ArrayList,java.lang.String,java.lang.String) -> a
    java.util.List extractContactNumbersAndAddresses(java.lang.String,android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver,java.lang.String) -> a
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver,java.lang.String) -> b
com.inhuasoft.smart.client.compatibility.ApiSixteenPlus -> com.inhuasoft.smart.client.a.f:
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.graphics.Bitmap,android.app.PendingIntent) -> a
    void removeGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
com.inhuasoft.smart.client.compatibility.Compatibility -> com.inhuasoft.smart.client.a.g:
    android.content.Intent prepareAddContactIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent prepareEditContactIntent(int) -> a
    android.content.Intent prepareEditContactIntentWithSipAddress(int,java.lang.String) -> a
    java.util.List extractContactNumbersAndAddresses(java.lang.String,android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver,java.lang.String) -> a
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver) -> b
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver,java.lang.String) -> b
    int getCursorDisplayNameColumnIndex(android.database.Cursor) -> a
    com.inhuasoft.smart.client.Contact getContact(android.content.ContentResolver,android.database.Cursor,int) -> a
    java.io.InputStream getContactPictureInputStream(android.content.ContentResolver,java.lang.String) -> c
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.graphics.Bitmap,android.app.PendingIntent) -> a
    java.lang.String refreshContactName(android.content.ContentResolver,java.lang.String) -> d
    com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector getScaleGestureDetector(android.content.Context,com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureListener) -> a
    void copyTextToClipboard(android.content.Context,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void updateSipAddressForContact(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteSipAddressFromContact(java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void removeGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
    void hideNavigationBar(android.app.Activity) -> a
    void showNavigationBar(android.app.Activity) -> b
    java.lang.String getAudioManagerEventForBluetoothConnectionStateChangedEvent() -> a
com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector -> com.inhuasoft.smart.client.a.h:
    android.view.ScaleGestureDetector detector -> a
    com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureListener listener -> b
    void setOnScaleListener(com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    float getScaleFactor() -> a
    void destroy() -> b
com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureListener -> com.inhuasoft.smart.client.a.i:
    boolean onScale(com.inhuasoft.smart.client.compatibility.CompatibilityScaleGestureDetector) -> a
com.inhuasoft.smart.client.gcm.GCMReceiver -> com.inhuasoft.smart.client.gcm.GCMReceiver:
    java.lang.String getGCMIntentServiceClassName(android.content.Context) -> a
com.inhuasoft.smart.client.gcm.GCMService -> com.inhuasoft.smart.client.gcm.GCMService:
    void onError(android.content.Context,java.lang.String) -> b
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    java.lang.String[] getSenderIds(android.content.Context) -> a
com.inhuasoft.smart.client.setup.EchoCancellerCalibrationFragment -> com.inhuasoft.smart.client.setup.a:
    android.os.Handler mHandler -> N
    boolean mSendEcCalibrationResult -> O
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void enableEcCalibrationResultSending(boolean) -> b
com.inhuasoft.smart.client.setup.GenericLoginFragment -> com.inhuasoft.smart.client.setup.b:
    android.widget.EditText login -> N
    android.widget.EditText password -> O
    android.widget.EditText domain -> P
    android.widget.ImageView apply -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.setup.LinphoneLoginFragment -> com.inhuasoft.smart.client.setup.c:
    android.widget.EditText login -> N
    android.widget.EditText password -> O
    android.widget.ImageView apply -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void linphoneLogIn() -> x
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.setup.MenuFragment -> com.inhuasoft.smart.client.setup.d:
    android.widget.ImageView createAccount -> N
    android.widget.ImageView logLinphoneAccount -> O
    android.widget.ImageView logGenericAccount -> P
    android.widget.ImageView remoteProvisioning -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.setup.RemoteProvisioningFragment -> com.inhuasoft.smart.client.setup.e:
    android.widget.EditText remoteProvisioningUrl -> N
    android.widget.ImageView apply -> O
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.setup.RemoteProvisioningLoginActivity -> com.inhuasoft.smart.client.setup.RemoteProvisioningLoginActivity:
    android.widget.EditText login -> a
    android.widget.EditText password -> b
    android.widget.EditText domain -> c
    android.widget.RelativeLayout next -> d
    android.widget.RelativeLayout cancel -> e
    void onCreate(android.os.Bundle) -> onCreate
    void cancelWizard(boolean) -> a
    boolean storeAccount(java.lang.String,java.lang.String,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
com.inhuasoft.smart.client.setup.SetupActivity -> com.inhuasoft.smart.client.setup.SetupActivity:
    com.inhuasoft.smart.client.setup.SetupActivity instance -> m
    android.widget.RelativeLayout back -> n
    android.widget.RelativeLayout next -> o
    android.widget.RelativeLayout cancel -> p
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum currentFragment -> q
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum firstFragment -> r
    android.support.v4.app.Fragment fragment -> s
    com.inhuasoft.smart.client.LinphonePreferences mPrefs -> t
    boolean accountCreated -> u
    android.os.Handler mHandler -> v
    com.inhuasoft.smart.client.LinphoneSimpleListener$LinphoneOnRegistrationStateChangedListener registrationListener -> w
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$setup$SetupFragmentsEnum -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.inhuasoft.smart.client.setup.SetupActivity instance() -> f
    void initUI() -> o
    void changeFragment(android.support.v4.app.Fragment) -> b
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void launchEchoCancellerCalibration(boolean) -> b
    void logIn(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void checkAccount(java.lang.String,java.lang.String,java.lang.String) -> a
    void linphoneLogIn(java.lang.String,java.lang.String,boolean) -> a
    void genericLogIn(java.lang.String,java.lang.String,java.lang.String) -> b
    void display(com.inhuasoft.smart.client.setup.SetupFragmentsEnum) -> a
    void displayWelcome() -> g
    void displayLoginGeneric() -> h
    void displayLoginLinphone() -> i
    void displayWizard() -> j
    void displayRemoteProvisioning() -> k
    void saveCreatedAccount(java.lang.String,java.lang.String,java.lang.String) -> c
    void displayWizardConfirm(java.lang.String) -> a
    void isAccountVerified() -> l
    void success() -> m
    int[] $SWITCH_TABLE$com$inhuasoft$smart$client$setup$SetupFragmentsEnum() -> n
com.inhuasoft.smart.client.setup.SetupActivity$1 -> com.inhuasoft.smart.client.setup.f:
    com.inhuasoft.smart.client.setup.SetupActivity this$0 -> a
com.inhuasoft.smart.client.setup.SetupFragmentsEnum -> com.inhuasoft.smart.client.setup.g:
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum WELCOME -> a
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum MENU -> b
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum WIZARD -> c
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum WIZARD_CONFIRM -> d
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum LINPHONE_LOGIN -> e
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum GENERIC_LOGIN -> f
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum REMOTE_PROVISIONING -> g
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum ECHO_CANCELLER_CALIBRATION -> h
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum[] ENUM$VALUES -> i
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum[] values() -> values
    com.inhuasoft.smart.client.setup.SetupFragmentsEnum valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.client.setup.WelcomeFragment -> com.inhuasoft.smart.client.setup.h:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.inhuasoft.smart.client.setup.WizardConfirmFragment -> com.inhuasoft.smart.client.setup.i:
    java.lang.String username -> N
    android.os.Handler mHandler -> O
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void isAccountVerified(java.lang.String) -> a
    java.lang.String access$0(com.inhuasoft.smart.client.setup.WizardConfirmFragment) -> a
    void access$1(com.inhuasoft.smart.client.setup.WizardConfirmFragment,java.lang.String) -> a
    android.os.Handler access$2(com.inhuasoft.smart.client.setup.WizardConfirmFragment) -> b
com.inhuasoft.smart.client.setup.WizardConfirmFragment$1 -> com.inhuasoft.smart.client.setup.j:
    com.inhuasoft.smart.client.setup.WizardConfirmFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.setup.WizardConfirmFragment$2 -> com.inhuasoft.smart.client.setup.k:
    com.inhuasoft.smart.client.setup.WizardConfirmFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.setup.WizardConfirmFragment$3 -> com.inhuasoft.smart.client.setup.l:
    java.lang.Runnable runNotOk -> a
    java.lang.Runnable runOk -> b
    com.inhuasoft.smart.client.setup.WizardConfirmFragment this$0 -> c
    java.lang.Runnable val$runNotReachable -> d
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
    com.inhuasoft.smart.client.setup.WizardConfirmFragment access$0(com.inhuasoft.smart.client.setup.WizardConfirmFragment$3) -> a
com.inhuasoft.smart.client.setup.WizardConfirmFragment$3$1 -> com.inhuasoft.smart.client.setup.m:
    com.inhuasoft.smart.client.setup.WizardConfirmFragment$3 this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.setup.WizardConfirmFragment$3$2 -> com.inhuasoft.smart.client.setup.n:
    com.inhuasoft.smart.client.setup.WizardConfirmFragment$3 this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment -> com.inhuasoft.smart.client.setup.o:
    android.os.Handler mHandler -> N
    android.widget.EditText username -> O
    android.widget.EditText password -> P
    android.widget.EditText passwordConfirm -> Q
    android.widget.EditText email -> R
    boolean usernameOk -> S
    boolean passwordOk -> T
    boolean emailOk -> U
    boolean confirmPasswordOk -> V
    android.widget.ImageView createAccount -> W
    android.widget.TextView errorMessage -> X
    char[] acceptedChars -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    boolean isUsernameCorrect(java.lang.String) -> a
    void isUsernameRegistred(java.lang.String,android.widget.ImageView) -> a
    boolean isEmailCorrect(java.lang.String) -> b
    boolean isPasswordCorrect(java.lang.String) -> c
    void createAccount(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void addXMLRPCUsernameHandler(android.widget.EditText,android.widget.ImageView) -> a
    void addXMLRPCEmailHandler(android.widget.EditText,android.widget.ImageView) -> b
    void addXMLRPCPasswordHandler(android.widget.EditText,android.widget.ImageView) -> c
    void addXMLRPCConfirmPasswordHandler(android.widget.EditText,android.widget.EditText,android.widget.ImageView) -> a
    char[] access$0(com.inhuasoft.smart.client.setup.WizardFragment) -> a
    android.widget.EditText access$1(com.inhuasoft.smart.client.setup.WizardFragment) -> b
    android.widget.EditText access$2(com.inhuasoft.smart.client.setup.WizardFragment) -> c
    android.widget.EditText access$3(com.inhuasoft.smart.client.setup.WizardFragment) -> d
    void access$4(com.inhuasoft.smart.client.setup.WizardFragment,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    android.widget.TextView access$5(com.inhuasoft.smart.client.setup.WizardFragment) -> e
    void access$6(com.inhuasoft.smart.client.setup.WizardFragment,boolean) -> a
    android.widget.ImageView access$7(com.inhuasoft.smart.client.setup.WizardFragment) -> f
    boolean access$8(com.inhuasoft.smart.client.setup.WizardFragment) -> g
    boolean access$9(com.inhuasoft.smart.client.setup.WizardFragment) -> h
    boolean access$10(com.inhuasoft.smart.client.setup.WizardFragment) -> i
    boolean access$11(com.inhuasoft.smart.client.setup.WizardFragment) -> j
    android.os.Handler access$12(com.inhuasoft.smart.client.setup.WizardFragment) -> k
    boolean access$13(com.inhuasoft.smart.client.setup.WizardFragment,java.lang.String) -> a
    void access$14(com.inhuasoft.smart.client.setup.WizardFragment,java.lang.String,android.widget.ImageView) -> a
    void access$15(com.inhuasoft.smart.client.setup.WizardFragment,boolean) -> b
    boolean access$16(com.inhuasoft.smart.client.setup.WizardFragment,java.lang.String) -> b
    void access$17(com.inhuasoft.smart.client.setup.WizardFragment,boolean) -> c
    boolean access$18(com.inhuasoft.smart.client.setup.WizardFragment,java.lang.String) -> c
    void access$19(com.inhuasoft.smart.client.setup.WizardFragment,boolean) -> d
com.inhuasoft.smart.client.setup.WizardFragment$1 -> com.inhuasoft.smart.client.setup.p:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.inhuasoft.smart.client.setup.WizardFragment$10 -> com.inhuasoft.smart.client.setup.q:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field1 -> b
    android.widget.EditText val$field2 -> c
    android.widget.ImageView val$icon -> d
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.client.setup.WizardFragment$2 -> com.inhuasoft.smart.client.setup.r:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.client.setup.WizardFragment access$0(com.inhuasoft.smart.client.setup.WizardFragment$2) -> a
com.inhuasoft.smart.client.setup.WizardFragment$2$1 -> com.inhuasoft.smart.client.setup.s:
    com.inhuasoft.smart.client.setup.WizardFragment$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.setup.WizardFragment$2$2 -> com.inhuasoft.smart.client.setup.t:
    com.inhuasoft.smart.client.setup.WizardFragment$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.client.setup.WizardFragment$3 -> com.inhuasoft.smart.client.setup.u:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    android.widget.ImageView val$icon -> b
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment$4 -> com.inhuasoft.smart.client.setup.v:
    java.lang.Runnable runNotOk -> a
    java.lang.Runnable runOk -> b
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> c
    java.lang.Runnable val$runNotReachable -> d
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
    com.inhuasoft.smart.client.setup.WizardFragment access$0(com.inhuasoft.smart.client.setup.WizardFragment$4) -> a
com.inhuasoft.smart.client.setup.WizardFragment$4$1 -> com.inhuasoft.smart.client.setup.w:
    com.inhuasoft.smart.client.setup.WizardFragment$4 this$1 -> a
    android.widget.ImageView val$icon -> b
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment$4$2 -> com.inhuasoft.smart.client.setup.x:
    com.inhuasoft.smart.client.setup.WizardFragment$4 this$1 -> a
    android.widget.ImageView val$icon -> b
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment$5 -> com.inhuasoft.smart.client.setup.y:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment$6 -> com.inhuasoft.smart.client.setup.z:
    java.lang.Runnable runNotOk -> a
    java.lang.Runnable runOk -> b
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> c
    java.lang.Runnable val$runNotReachable -> d
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
    com.inhuasoft.smart.client.setup.WizardFragment access$0(com.inhuasoft.smart.client.setup.WizardFragment$6) -> a
com.inhuasoft.smart.client.setup.WizardFragment$6$1 -> com.inhuasoft.smart.client.setup.aa:
    com.inhuasoft.smart.client.setup.WizardFragment$6 this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment$6$2 -> com.inhuasoft.smart.client.setup.ab:
    com.inhuasoft.smart.client.setup.WizardFragment$6 this$1 -> a
    java.lang.String val$username -> b
    java.lang.String val$password -> c
    android.content.Context val$context -> d
    void run() -> run
com.inhuasoft.smart.client.setup.WizardFragment$7 -> com.inhuasoft.smart.client.setup.ac:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field -> b
    android.widget.ImageView val$icon -> c
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.client.setup.WizardFragment$8 -> com.inhuasoft.smart.client.setup.ad:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field -> b
    android.widget.ImageView val$icon -> c
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.client.setup.WizardFragment$9 -> com.inhuasoft.smart.client.setup.ae:
    com.inhuasoft.smart.client.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field1 -> b
    android.widget.ImageView val$icon -> c
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.client.tutorials.AndroidTutorialNotifier -> com.inhuasoft.smart.client.tutorials.a:
    android.os.Handler mHandler -> a
    android.widget.TextView outputTextView -> b
    void notify(java.lang.String) -> a
    android.widget.TextView access$0(com.inhuasoft.smart.client.tutorials.AndroidTutorialNotifier) -> a
com.inhuasoft.smart.client.tutorials.AndroidTutorialNotifier$1 -> com.inhuasoft.smart.client.tutorials.b:
    com.inhuasoft.smart.client.tutorials.AndroidTutorialNotifier this$0 -> a
    java.lang.String val$s -> b
    void run() -> run
com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity -> com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity:
    android.widget.TextView sipAddressWidget -> a
    android.widget.TextView mySipAddressWidget -> b
    android.widget.TextView mySipPasswordWidget -> c
    org.linphone.core.tutorials.TutorialBuddyStatus tutorial -> d
    android.os.Handler mHandler -> e
    android.widget.Button buttonCall -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.TextView access$0(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity) -> b
    org.linphone.core.tutorials.TutorialBuddyStatus access$2(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity) -> c
    android.widget.TextView access$3(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity) -> d
    android.os.Handler access$4(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity) -> e
    android.widget.Button access$5(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity) -> f
com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity$1 -> com.inhuasoft.smart.client.tutorials.c:
    com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity$2 -> com.inhuasoft.smart.client.tutorials.d:
    com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread -> com.inhuasoft.smart.client.tutorials.e:
    com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity access$1(com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread) -> a
com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread$1 -> com.inhuasoft.smart.client.tutorials.f:
    com.inhuasoft.smart.client.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity -> com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity:
    android.widget.TextView sipAddressWidget -> a
    org.linphone.core.tutorials.TutorialChatRoom tutorial -> b
    android.os.Handler mHandler -> c
    android.widget.Button buttonCall -> d
    void onCreate(android.os.Bundle) -> onCreate
    org.linphone.core.tutorials.TutorialChatRoom access$0(com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity) -> b
    android.os.Handler access$2(com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity) -> c
    android.widget.Button access$3(com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity) -> d
com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity$1 -> com.inhuasoft.smart.client.tutorials.g:
    com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity$2 -> com.inhuasoft.smart.client.tutorials.h:
    com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread -> com.inhuasoft.smart.client.tutorials.i:
    com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity access$1(com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread) -> a
com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread$1 -> com.inhuasoft.smart.client.tutorials.j:
    com.inhuasoft.smart.client.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity -> com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity:
    android.widget.TextView sipAddressWidget -> a
    org.linphone.core.tutorials.TutorialHelloWorld tutorial -> b
    android.os.Handler mHandler -> c
    android.widget.Button buttonCall -> d
    void onCreate(android.os.Bundle) -> onCreate
    org.linphone.core.tutorials.TutorialHelloWorld access$0(com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity) -> b
    android.os.Handler access$2(com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity) -> c
    android.widget.Button access$3(com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity) -> d
com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity$1 -> com.inhuasoft.smart.client.tutorials.k:
    com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity$2 -> com.inhuasoft.smart.client.tutorials.l:
    com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread -> com.inhuasoft.smart.client.tutorials.m:
    com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity access$1(com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread) -> a
com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread$1 -> com.inhuasoft.smart.client.tutorials.n:
    com.inhuasoft.smart.client.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.client.tutorials.TutorialLauncherActivity -> com.inhuasoft.smart.client.tutorials.TutorialLauncherActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void startHelloWorldTutorial(android.view.View) -> startHelloWorldTutorial
    void startRegistrationTutorial(android.view.View) -> startRegistrationTutorial
    void startChatRoomTutorial(android.view.View) -> startChatRoomTutorial
    void startBuddyStatusTutorial(android.view.View) -> startBuddyStatusTutorial
com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity -> com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity:
    android.widget.TextView sipAddressWidget -> a
    android.widget.TextView sipPasswordWidget -> b
    org.linphone.core.tutorials.TutorialRegistration tutorial -> c
    android.widget.Button buttonCall -> d
    android.os.Handler mHandler -> e
    android.widget.TextView outputText -> f
    void onCreate(android.os.Bundle) -> onCreate
    org.linphone.core.tutorials.TutorialRegistration access$0(com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity) -> b
    android.widget.TextView access$2(com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity) -> c
    android.widget.TextView access$3(com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity) -> d
    android.widget.Button access$4(com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity) -> e
com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity$1 -> com.inhuasoft.smart.client.tutorials.o:
    com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity$2 -> com.inhuasoft.smart.client.tutorials.p:
    com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity$TutorialLaunchingThread -> com.inhuasoft.smart.client.tutorials.q:
    com.inhuasoft.smart.client.tutorials.TutorialRegistrationActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.client.ui.AddressAware -> com.inhuasoft.smart.client.ui.a:
    void setAddressWidget(com.inhuasoft.smart.client.ui.AddressText) -> setAddressWidget
com.inhuasoft.smart.client.ui.AddressText -> com.inhuasoft.smart.client.ui.AddressText:
    java.lang.String displayedName -> a
    android.net.Uri pictureUri -> b
    android.graphics.Paint mTestPaint -> c
    com.inhuasoft.smart.client.DialerFragment dialer -> d
    void setPictureUri(android.net.Uri) -> setPictureUri
    android.net.Uri getPictureUri() -> getPictureUri
    void clearDisplayedName() -> a
    java.lang.String getDisplayedName() -> getDisplayedName
    void setDisplayedName(java.lang.String) -> setDisplayedName
    java.lang.String getHintText() -> getHintText
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    float getOptimizedTextSize(java.lang.String,int,int) -> a
    void refitText(int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void setDialerFragment(com.inhuasoft.smart.client.DialerFragment) -> setDialerFragment
    java.lang.CharSequence getText() -> getText
com.inhuasoft.smart.client.ui.AvatarWithShadow -> com.inhuasoft.smart.client.ui.AvatarWithShadow:
    android.widget.ImageView contactPicture -> a
    android.widget.ImageView getView() -> getView
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageResource(int) -> setImageResource
com.inhuasoft.smart.client.ui.BubbleChat -> com.inhuasoft.smart.client.ui.b:
    java.util.HashMap emoticons -> a
    android.widget.RelativeLayout view -> b
    android.widget.ImageView statusView -> c
    android.widget.Button downloadOrShow -> d
    java.lang.String imageUrl -> e
    java.lang.String textMessage -> f
    org.linphone.core.LinphoneChatMessage$State state -> g
    org.linphone.core.LinphoneChatMessage nativeMessage -> h
    int id -> i
    android.view.View getView() -> a
    java.lang.String timestampToHumanDate(android.content.Context,long) -> a
    boolean isToday(java.util.Calendar) -> a
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> a
    android.text.Spannable getSmiledText(android.content.Context,android.text.Spanned) -> a
    android.text.Spanned getTextWithHttpLinks(java.lang.String) -> a
    void setShowOrDownloadImageButtonListener(android.view.View$OnClickListener) -> a
    void setShowOrDownloadText(java.lang.String) -> b
    void updateUrl(java.lang.String) -> c
    org.linphone.core.LinphoneChatMessage getNativeMessageObject() -> b
    void setNativeMessageObject(org.linphone.core.LinphoneChatMessage) -> a
    int getId() -> c
    java.lang.String access$0(com.inhuasoft.smart.client.ui.BubbleChat) -> a
com.inhuasoft.smart.client.ui.BubbleChat$1 -> com.inhuasoft.smart.client.ui.c:
    com.inhuasoft.smart.client.ui.BubbleChat this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ui.CallButton -> com.inhuasoft.smart.client.ui.CallButton:
    com.inhuasoft.smart.client.ui.AddressText mAddress -> a
    void setAddressWidget(com.inhuasoft.smart.client.ui.AddressText) -> setAddressWidget
    void setExternalClickListener(android.view.View$OnClickListener) -> setExternalClickListener
    void resetClickListener() -> a
    void onClick(android.view.View) -> onClick
    void onWrongDestinationAddress() -> b
com.inhuasoft.smart.client.ui.Digit -> com.inhuasoft.smart.client.ui.Digit:
    com.inhuasoft.smart.client.ui.AddressText mAddress -> a
    boolean mPlayDtmf -> b
    void setAddressWidget(com.inhuasoft.smart.client.ui.AddressText) -> setAddressWidget
    void setPlayDtmf(boolean) -> setPlayDtmf
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    boolean access$0(com.inhuasoft.smart.client.ui.Digit) -> a
    com.inhuasoft.smart.client.ui.AddressText access$1(com.inhuasoft.smart.client.ui.Digit) -> b
com.inhuasoft.smart.client.ui.Digit$DialKeyListener -> com.inhuasoft.smart.client.ui.d:
    char mKeyCode -> a
    boolean mIsDtmfStarted -> b
    com.inhuasoft.smart.client.ui.Digit this$0 -> c
    boolean linphoneServiceReady() -> a
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
com.inhuasoft.smart.client.ui.EraseButton -> com.inhuasoft.smart.client.ui.EraseButton:
    com.inhuasoft.smart.client.ui.AddressText address -> a
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void setAddressWidget(com.inhuasoft.smart.client.ui.AddressText) -> setAddressWidget
com.inhuasoft.smart.client.ui.LedPreference -> com.inhuasoft.smart.client.ui.e:
    int ledDrawable -> a
    void onBindView(android.view.View) -> onBindView
    void setLed(int) -> a
com.inhuasoft.smart.client.ui.LinphoneScrollView -> com.inhuasoft.smart.client.ui.LinphoneScrollView:
    com.inhuasoft.smart.client.ui.ScrollViewListener scrollViewListener -> a
    void setScrollViewListener(com.inhuasoft.smart.client.ui.ScrollViewListener) -> setScrollViewListener
    void onScrollChanged(int,int,int,int) -> onScrollChanged
com.inhuasoft.smart.client.ui.LinphoneSliders -> com.inhuasoft.smart.client.ui.LinphoneSliders:
    android.graphics.drawable.Drawable leftSliderImg -> a
    android.graphics.drawable.Drawable rightSliderImg -> b
    int leftSliderX -> c
    int rightSliderX -> d
    int slidersHeight -> e
    int slidersWidth -> f
    android.view.GestureDetector mGestures -> g
    com.inhuasoft.smart.client.ui.LinphoneSliders$LinphoneSliderTriggered mTriggerListener -> h
    boolean slidingLeftHandle -> i
    boolean slidingRightHandle -> j
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void setOnTriggerListener(com.inhuasoft.smart.client.ui.LinphoneSliders$LinphoneSliderTriggered) -> setOnTriggerListener
com.inhuasoft.smart.client.ui.LinphoneSliders$LinphoneSliderTriggered -> com.inhuasoft.smart.client.ui.f:
    void onLeftHandleTriggered() -> c
    void onRightHandleTriggered() -> d
com.inhuasoft.smart.client.ui.Numpad -> com.inhuasoft.smart.client.ui.Numpad:
    boolean mPlayDtmf -> a
    void setPlayDtmf(boolean) -> setPlayDtmf
    void onFinishInflate() -> onFinishInflate
    void setAddressWidget(com.inhuasoft.smart.client.ui.AddressText) -> setAddressWidget
    java.util.Collection retrieveChildren(android.view.ViewGroup,java.lang.Class) -> a
com.inhuasoft.smart.client.ui.PreferencesListFragment -> com.inhuasoft.smart.client.ui.g:
    android.preference.PreferenceManager mPreferenceManager -> V
    android.os.Handler mHandler -> W
    android.widget.ListView preferencesList -> X
    int xmlResID -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> o
    void onCreate(android.os.Bundle) -> c
    void onStop() -> n
    void onDestroy() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onActivityResult(int,int,android.content.Intent) -> a
    void postBindPreferences() -> y
    void bindPreferences() -> z
    android.preference.PreferenceManager onCreatePreferenceManager() -> A
    void setPreferenceScreen(android.preference.PreferenceScreen) -> a
    android.preference.PreferenceScreen getPreferenceScreen() -> x
    void addPreferencesFromResource(int) -> c
    android.preference.Preference findPreference(java.lang.CharSequence) -> a
    void access$0(com.inhuasoft.smart.client.ui.PreferencesListFragment) -> a
com.inhuasoft.smart.client.ui.PreferencesListFragment$1 -> com.inhuasoft.smart.client.ui.h:
    com.inhuasoft.smart.client.ui.PreferencesListFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inhuasoft.smart.client.ui.ScrollViewListener -> com.inhuasoft.smart.client.ui.i:
    void OnScrollToTop(int) -> a
com.inhuasoft.smart.client.ui.SlidingDrawer -> com.inhuasoft.smart.client.ui.SlidingDrawer:
    int mHandleId -> a
    int mContentId -> b
    android.view.View mHandle -> c
    android.view.View mContent -> d
    android.graphics.Rect mFrame -> e
    android.graphics.Rect mInvalidate -> f
    boolean mTracking -> g
    boolean mLocked -> h
    android.view.VelocityTracker mVelocityTracker -> i
    boolean mInvert -> j
    boolean mVertical -> k
    boolean mExpanded -> l
    int mBottomOffset -> m
    int mTopOffset -> n
    int mHandleHeight -> o
    int mHandleWidth -> p
    com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerOpenListener mOnDrawerOpenListener -> q
    com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerCloseListener mOnDrawerCloseListener -> r
    com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerScrollListener mOnDrawerScrollListener -> s
    android.os.Handler mHandler -> t
    float mAnimatedAcceleration -> u
    float mAnimatedVelocity -> v
    float mAnimationPosition -> w
    long mAnimationLastTime -> x
    long mCurrentAnimationTime -> y
    int mTouchDelta -> z
    boolean mAnimating -> A
    boolean mAllowSingleTap -> B
    boolean mAnimateOnClick -> C
    int mTapThreshold -> D
    int mMaximumTapVelocity -> E
    int mMaximumMinorVelocity -> F
    int mMaximumMajorVelocity -> G
    int mMaximumAcceleration -> H
    int mVelocityUnits -> I
    void onFinishInflate() -> onFinishInflate
    void onMeasure(int,int) -> onMeasure
    int getCustomBottom() -> getCustomBottom
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateClose(int) -> a
    void animateOpen(int) -> b
    void performFling(int,float,boolean) -> a
    void prepareTracking(int) -> c
    void moveHandle(int) -> d
    void prepareContent() -> i
    void stopTracking() -> j
    void doAnimation() -> k
    void incrementAnimation() -> l
    void toggle() -> a
    void animateToggle() -> b
    void close() -> c
    void animateClose() -> d
    void animateOpen() -> e
    void closeDrawer() -> m
    void openDrawer() -> n
    void setOnDrawerOpenListener(com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerOpenListener) -> setOnDrawerOpenListener
    void setOnDrawerCloseListener(com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerCloseListener) -> setOnDrawerCloseListener
    void setOnDrawerScrollListener(com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerScrollListener) -> setOnDrawerScrollListener
    android.view.View getHandle() -> getHandle
    android.view.View getContent() -> getContent
    void unlock() -> f
    void lock() -> g
    boolean isOpened() -> h
    boolean access$0(com.inhuasoft.smart.client.ui.SlidingDrawer) -> a
    boolean access$1(com.inhuasoft.smart.client.ui.SlidingDrawer) -> b
    void access$2(com.inhuasoft.smart.client.ui.SlidingDrawer) -> c
com.inhuasoft.smart.client.ui.SlidingDrawer$DrawerToggler -> com.inhuasoft.smart.client.ui.j:
    com.inhuasoft.smart.client.ui.SlidingDrawer this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerCloseListener -> com.inhuasoft.smart.client.ui.k:
    void onDrawerClosed() -> a
com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerOpenListener -> com.inhuasoft.smart.client.ui.l:
    void onDrawerOpened() -> a
com.inhuasoft.smart.client.ui.SlidingDrawer$OnDrawerScrollListener -> com.inhuasoft.smart.client.ui.m:
    void onScrollStarted() -> a
    void onScrollEnded() -> b
com.inhuasoft.smart.client.ui.SlidingDrawer$SlidingHandler -> com.inhuasoft.smart.client.ui.n:
    com.inhuasoft.smart.client.ui.SlidingDrawer this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
de.timroes.axmlrpc.AuthenticationManager -> a.a.a.a:
    java.lang.String user -> a
    java.lang.String pass -> b
    void setAuthentication(java.net.HttpURLConnection) -> a
de.timroes.axmlrpc.Call -> a.a.a.b:
    java.lang.String method -> a
    java.lang.Object[] params -> b
    java.lang.String getXML() -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement getXMLParam(java.lang.Object) -> a
de.timroes.axmlrpc.CookieManager -> a.a.a.c:
    int flags -> a
    java.util.Map cookies -> b
    void readCookies(java.net.HttpURLConnection) -> a
    void setCookies(java.net.HttpURLConnection) -> b
de.timroes.axmlrpc.ResponseParser -> a.a.a.d:
    java.lang.Object parse(java.io.InputStream) -> a
    java.lang.Object getReturnValueFromElement(org.w3c.dom.Element) -> a
de.timroes.axmlrpc.XMLRPCCallback -> a.a.a.e:
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
de.timroes.axmlrpc.XMLRPCClient -> a.a.a.f:
    int flags -> a
    java.net.URL url -> b
    java.lang.String forcedCN -> c
    java.util.Map httpParameters -> d
    java.util.Map backgroundCalls -> e
    de.timroes.axmlrpc.ResponseParser responseParser -> f
    de.timroes.axmlrpc.CookieManager cookieManager -> g
    de.timroes.axmlrpc.AuthenticationManager authManager -> h
    javax.net.ssl.TrustManager[] trustAllManagers -> i
    long callAsync(de.timroes.axmlrpc.XMLRPCCallback,java.lang.String,java.lang.Object[]) -> a
    de.timroes.axmlrpc.Call createCall(java.lang.String,java.lang.Object[]) -> a
    boolean isFlagSet(int) -> a
    java.util.Map access$0(de.timroes.axmlrpc.XMLRPCClient) -> a
    de.timroes.axmlrpc.Call access$1(de.timroes.axmlrpc.XMLRPCClient,java.lang.String,java.lang.Object[]) -> a
    java.net.URL access$2(de.timroes.axmlrpc.XMLRPCClient) -> b
    java.util.Map access$3(de.timroes.axmlrpc.XMLRPCClient) -> c
    de.timroes.axmlrpc.AuthenticationManager access$4(de.timroes.axmlrpc.XMLRPCClient) -> d
    de.timroes.axmlrpc.CookieManager access$5(de.timroes.axmlrpc.XMLRPCClient) -> e
    boolean access$6(de.timroes.axmlrpc.XMLRPCClient,int) -> a
    void access$7(de.timroes.axmlrpc.XMLRPCClient,java.net.URL) -> a
    de.timroes.axmlrpc.ResponseParser access$8(de.timroes.axmlrpc.XMLRPCClient) -> f
    java.lang.String access$9(de.timroes.axmlrpc.XMLRPCClient) -> g
    javax.net.ssl.TrustManager[] access$10(de.timroes.axmlrpc.XMLRPCClient) -> h
    void access$11(de.timroes.axmlrpc.XMLRPCClient,javax.net.ssl.TrustManager[]) -> a
de.timroes.axmlrpc.XMLRPCClient$Caller -> a.a.a.g:
    de.timroes.axmlrpc.XMLRPCCallback listener -> b
    long threadId -> c
    java.lang.String methodName -> d
    java.lang.Object[] params -> e
    boolean canceled -> f
    java.net.HttpURLConnection http -> g
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
    void run() -> run
    java.lang.Object call(java.lang.String,java.lang.Object[]) -> a
    java.lang.String extractCN(java.lang.String) -> a
    java.net.HttpURLConnection verifyConnection(java.net.URLConnection) -> a
    java.lang.String access$0(de.timroes.axmlrpc.XMLRPCClient$Caller,java.lang.String) -> a
    de.timroes.axmlrpc.XMLRPCClient access$1(de.timroes.axmlrpc.XMLRPCClient$Caller) -> a
de.timroes.axmlrpc.XMLRPCClient$Caller$1 -> a.a.a.h:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
de.timroes.axmlrpc.XMLRPCClient$Caller$2 -> a.a.a.i:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
de.timroes.axmlrpc.XMLRPCClient$Caller$3 -> a.a.a.j:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
de.timroes.axmlrpc.XMLRPCClient$CancelException -> a.a.a.k:
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
de.timroes.axmlrpc.XMLRPCException -> a.a.a.l:
de.timroes.axmlrpc.XMLRPCRuntimeException -> a.a.a.m:
de.timroes.axmlrpc.XMLRPCServerException -> a.a.a.n:
    int errornr -> a
    java.lang.String getMessage() -> getMessage
de.timroes.axmlrpc.XMLUtil -> a.a.a.o:
    org.w3c.dom.Element getOnlyChildElement(org.w3c.dom.NodeList) -> a
    java.lang.String getOnlyTextContent(org.w3c.dom.NodeList) -> b
    boolean hasChildElement(org.w3c.dom.NodeList) -> c
    de.timroes.axmlrpc.xmlcreator.XmlElement makeXmlTag(java.lang.String,java.lang.String) -> a
de.timroes.axmlrpc.serializer.ArraySerializer -> a.a.a.a.a:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.Base64Serializer -> a.a.a.a.b:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.BooleanSerializer -> a.a.a.a.c:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.DateTimeSerializer -> a.a.a.a.d:
    java.text.SimpleDateFormat DATE_FORMATER -> a
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.DoubleSerializer -> a.a.a.a.e:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.IntSerializer -> a.a.a.a.f:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.LongSerializer -> a.a.a.a.g:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.NullSerializer -> a.a.a.a.h:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.Serializer -> a.a.a.a.i:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.SerializerHandler -> a.a.a.a.j:
    de.timroes.axmlrpc.serializer.SerializerHandler instance -> a
    de.timroes.axmlrpc.serializer.StringSerializer string -> b
    de.timroes.axmlrpc.serializer.BooleanSerializer bool -> c
    de.timroes.axmlrpc.serializer.IntSerializer integer -> d
    de.timroes.axmlrpc.serializer.LongSerializer long8 -> e
    de.timroes.axmlrpc.serializer.StructSerializer struct -> f
    de.timroes.axmlrpc.serializer.DoubleSerializer floating -> g
    de.timroes.axmlrpc.serializer.DateTimeSerializer datetime -> h
    de.timroes.axmlrpc.serializer.ArraySerializer array -> i
    de.timroes.axmlrpc.serializer.Base64Serializer base64 -> j
    de.timroes.axmlrpc.serializer.NullSerializer nil -> k
    int flags -> l
    void initialize(int) -> a
    de.timroes.axmlrpc.serializer.SerializerHandler getDefault() -> a
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.StringSerializer -> a.a.a.a.k:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.StructSerializer -> a.a.a.a.l:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.xmlcreator.SimpleXMLCreator -> a.a.a.b.a:
    de.timroes.axmlrpc.xmlcreator.XmlElement root -> a
    void setRootElement(de.timroes.axmlrpc.xmlcreator.XmlElement) -> a
    java.lang.String toString() -> toString
de.timroes.axmlrpc.xmlcreator.XmlElement -> a.a.a.b.b:
    java.util.List children -> a
    java.lang.String name -> b
    java.lang.String content -> c
    void addChildren(de.timroes.axmlrpc.xmlcreator.XmlElement) -> a
    void setContent(java.lang.String) -> a
    java.lang.String toString() -> toString
de.timroes.base64.Base64 -> a.a.b.a:
    char[] code -> a
    java.util.HashMap map -> b
    byte[] decode(java.lang.String) -> a
    java.lang.String encode(java.lang.String) -> b
    java.lang.String encode(java.lang.Byte[]) -> a
    java.lang.String encode(byte[]) -> a
    byte[] encodeAsBytes(byte[]) -> b
org.linphone.core.CallDirection -> org.linphone.core.a:
    org.linphone.core.CallDirection Outgoing -> a
    org.linphone.core.CallDirection Incoming -> b
    java.lang.String mStringValue -> c
    java.lang.String toString() -> toString
org.linphone.core.LinphoneAddress -> org.linphone.core.b:
    java.lang.String getDisplayName() -> a
    java.lang.String getUserName() -> b
    java.lang.String getDomain() -> c
    void setDisplayName(java.lang.String) -> a
    void setDomain(java.lang.String) -> b
    java.lang.String asString() -> d
    java.lang.String asStringUriOnly() -> e
    org.linphone.core.LinphoneAddress$TransportType getTransport() -> f
    void setTransport(org.linphone.core.LinphoneAddress$TransportType) -> a
org.linphone.core.LinphoneAddress$TransportType -> org.linphone.core.c:
    java.util.Vector values -> d
    org.linphone.core.LinphoneAddress$TransportType LinphoneTransportUdp -> a
    org.linphone.core.LinphoneAddress$TransportType LinphoneTransportTcp -> b
    org.linphone.core.LinphoneAddress$TransportType LinphoneTransportTls -> c
    int mValue -> e
    java.lang.String mStringValue -> f
    org.linphone.core.LinphoneAddress$TransportType fromInt(int) -> a
    java.lang.String toString() -> toString
    int toInt() -> a
org.linphone.core.LinphoneAddressImpl -> org.linphone.core.LinphoneAddressImpl:
    long nativePtr -> a
    int[] $SWITCH_TABLE$org$linphone$core$LinphoneAddressImpl$WrapMode -> b
    long newLinphoneAddressImpl(java.lang.String,java.lang.String) -> newLinphoneAddressImpl
    long ref(long) -> ref
    void unref(long) -> unref
    long clone(long) -> clone
    java.lang.String getDisplayName(long) -> getDisplayName
    java.lang.String getUserName(long) -> getUserName
    java.lang.String getDomain(long) -> getDomain
    int getTransport(long) -> getTransport
    java.lang.String toUri(long) -> toUri
    void setDisplayName(long,java.lang.String) -> setDisplayName
    void setDomain(long,java.lang.String) -> setDomain
    void setUserName(long,java.lang.String) -> setUserName
    void setTransport(long,int) -> setTransport
    java.lang.String toString(long) -> toString
    void finalize() -> finalize
    java.lang.String getDisplayName() -> a
    java.lang.String getDomain() -> c
    java.lang.String getUserName() -> b
    org.linphone.core.LinphoneAddress$TransportType getTransport() -> f
    java.lang.String toString() -> toString
    void setDisplayName(java.lang.String) -> a
    java.lang.String asString() -> d
    java.lang.String asStringUriOnly() -> e
    void setDomain(java.lang.String) -> b
    void setUserName(java.lang.String) -> c
    void setTransport(org.linphone.core.LinphoneAddress$TransportType) -> a
    int[] $SWITCH_TABLE$org$linphone$core$LinphoneAddressImpl$WrapMode() -> g
org.linphone.core.LinphoneAddressImpl$WrapMode -> org.linphone.core.d:
    org.linphone.core.LinphoneAddressImpl$WrapMode FromNew -> a
    org.linphone.core.LinphoneAddressImpl$WrapMode FromConst -> b
    org.linphone.core.LinphoneAddressImpl$WrapMode FromExisting -> c
    org.linphone.core.LinphoneAddressImpl$WrapMode[] ENUM$VALUES -> d
    org.linphone.core.LinphoneAddressImpl$WrapMode[] values() -> values
    org.linphone.core.LinphoneAddressImpl$WrapMode valueOf(java.lang.String) -> valueOf
org.linphone.core.LinphoneAuthInfo -> org.linphone.core.e:
    java.lang.String getUsername() -> a
    void setUsername(java.lang.String) -> a
    java.lang.String getPassword() -> b
    void setPassword(java.lang.String) -> b
    java.lang.String getUserId() -> c
    void setUserId(java.lang.String) -> c
    void setDomain(java.lang.String) -> d
    org.linphone.core.LinphoneAuthInfo clone() -> d
org.linphone.core.LinphoneAuthInfoImpl -> org.linphone.core.LinphoneAuthInfoImpl:
    long nativePtr -> a
    boolean ownPtr -> b
    long newLinphoneAuthInfo() -> newLinphoneAuthInfo
    void delete(long) -> delete
    java.lang.String getPassword(long) -> getPassword
    java.lang.String getRealm(long) -> getRealm
    java.lang.String getUsername(long) -> getUsername
    void setPassword(long,java.lang.String) -> setPassword
    void setUsername(long,java.lang.String) -> setUsername
    void setUserId(long,java.lang.String) -> setUserId
    void setHa1(long,java.lang.String) -> setHa1
    java.lang.String getUserId(long) -> getUserId
    java.lang.String getHa1(long) -> getHa1
    java.lang.String getDomain(long) -> getDomain
    void setDomain(long,java.lang.String) -> setDomain
    void finalize() -> finalize
    java.lang.String getPassword() -> b
    java.lang.String getRealm() -> e
    java.lang.String getUsername() -> a
    void setPassword(java.lang.String) -> b
    void setUsername(java.lang.String) -> a
    java.lang.String getUserId() -> c
    void setUserId(java.lang.String) -> c
    java.lang.String getHa1() -> f
    void setHa1(java.lang.String) -> e
    void setDomain(java.lang.String) -> d
    java.lang.String getDomain() -> g
    org.linphone.core.LinphoneAuthInfo clone() -> d
    java.lang.Object clone() -> clone
org.linphone.core.LinphoneCall -> org.linphone.core.f:
    org.linphone.core.LinphoneCall$State getState() -> a
    org.linphone.core.LinphoneAddress getRemoteAddress() -> b
    org.linphone.core.LinphoneCallStats getAudioStats() -> c
    org.linphone.core.LinphoneCallStats getVideoStats() -> d
    org.linphone.core.LinphoneCallParams getRemoteParams() -> e
    org.linphone.core.LinphoneCallParams getCurrentParamsCopy() -> f
    void enableCamera(boolean) -> a
    boolean cameraEnabled() -> g
    int getDuration() -> h
    float getCurrentQuality() -> i
    java.lang.String getAuthenticationToken() -> j
    boolean isAuthenticationTokenVerified() -> k
    void setAuthenticationTokenVerified(boolean) -> b
    boolean isInConference() -> l
    void takeSnapshot(java.lang.String) -> a
    void zoomVideo(float,float,float) -> a
    void startRecording() -> m
    void stopRecording() -> n
org.linphone.core.LinphoneCall$State -> org.linphone.core.g:
    java.util.Vector values -> t
    int mValue -> u
    java.lang.String mStringValue -> v
    org.linphone.core.LinphoneCall$State Idle -> a
    org.linphone.core.LinphoneCall$State IncomingReceived -> b
    org.linphone.core.LinphoneCall$State OutgoingInit -> c
    org.linphone.core.LinphoneCall$State OutgoingProgress -> d
    org.linphone.core.LinphoneCall$State OutgoingRinging -> e
    org.linphone.core.LinphoneCall$State OutgoingEarlyMedia -> f
    org.linphone.core.LinphoneCall$State Connected -> g
    org.linphone.core.LinphoneCall$State StreamsRunning -> h
    org.linphone.core.LinphoneCall$State Pausing -> i
    org.linphone.core.LinphoneCall$State Paused -> j
    org.linphone.core.LinphoneCall$State Resuming -> k
    org.linphone.core.LinphoneCall$State Refered -> l
    org.linphone.core.LinphoneCall$State Error -> m
    org.linphone.core.LinphoneCall$State CallEnd -> n
    org.linphone.core.LinphoneCall$State PausedByRemote -> o
    org.linphone.core.LinphoneCall$State CallUpdatedByRemote -> p
    org.linphone.core.LinphoneCall$State CallIncomingEarlyMedia -> q
    org.linphone.core.LinphoneCall$State CallUpdating -> r
    org.linphone.core.LinphoneCall$State CallReleased -> s
    org.linphone.core.LinphoneCall$State fromInt(int) -> a
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCallImpl -> org.linphone.core.LinphoneCallImpl:
    long nativePtr -> a
    org.linphone.core.LinphoneCallStats audioStats -> b
    org.linphone.core.LinphoneCallStats videoStats -> c
    void finalize(long) -> finalize
    long getRemoteAddress(long) -> getRemoteAddress
    int getState(long) -> getState
    long getCurrentParamsCopy(long) -> getCurrentParamsCopy
    long getRemoteParams(long) -> getRemoteParams
    void enableCamera(long,boolean) -> enableCamera
    boolean cameraEnabled(long) -> cameraEnabled
    int getDuration(long) -> getDuration
    float getCurrentQuality(long) -> getCurrentQuality
    void finalize() -> finalize
    org.linphone.core.LinphoneCallStats getAudioStats() -> c
    org.linphone.core.LinphoneCallStats getVideoStats() -> d
    org.linphone.core.LinphoneAddress getRemoteAddress() -> b
    org.linphone.core.LinphoneCall$State getState() -> a
    org.linphone.core.LinphoneCallParams getCurrentParamsCopy() -> f
    org.linphone.core.LinphoneCallParams getRemoteParams() -> e
    void enableCamera(boolean) -> a
    boolean cameraEnabled() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getDuration() -> h
    float getCurrentQuality() -> i
    java.lang.String getAuthenticationToken(long) -> getAuthenticationToken
    java.lang.String getAuthenticationToken() -> j
    boolean isAuthenticationTokenVerified(long) -> isAuthenticationTokenVerified
    boolean isAuthenticationTokenVerified() -> k
    void setAuthenticationTokenVerified(long,boolean) -> setAuthenticationTokenVerified
    void setAuthenticationTokenVerified(boolean) -> b
    boolean isInConference() -> l
    java.lang.String toString() -> toString
    void takeSnapshot(long,java.lang.String) -> takeSnapshot
    void takeSnapshot(java.lang.String) -> a
    void zoomVideo(long,float,float,float) -> zoomVideo
    void zoomVideo(float,float,float) -> a
    void startRecording(long) -> startRecording
    void startRecording() -> m
    void stopRecording(long) -> stopRecording
    void stopRecording() -> n
org.linphone.core.LinphoneCallLog -> org.linphone.core.h:
    org.linphone.core.LinphoneAddress getFrom() -> a
    org.linphone.core.LinphoneAddress getTo() -> b
    org.linphone.core.CallDirection getDirection() -> c
    org.linphone.core.LinphoneCallLog$CallStatus getStatus() -> d
    java.lang.String getStartDate() -> e
    long getTimestamp() -> f
    int getCallDuration() -> g
org.linphone.core.LinphoneCallLog$CallStatus -> org.linphone.core.i:
    java.util.Vector values -> e
    int mValue -> f
    java.lang.String mStringValue -> g
    org.linphone.core.LinphoneCallLog$CallStatus Success -> a
    org.linphone.core.LinphoneCallLog$CallStatus Aborted -> b
    org.linphone.core.LinphoneCallLog$CallStatus Missed -> c
    org.linphone.core.LinphoneCallLog$CallStatus Declined -> d
    org.linphone.core.LinphoneCallLog$CallStatus fromInt(int) -> a
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCallLogImpl -> org.linphone.core.LinphoneCallLogImpl:
    long nativePtr -> a
    long getFrom(long) -> getFrom
    long getTo(long) -> getTo
    boolean isIncoming(long) -> isIncoming
    int getStatus(long) -> getStatus
    java.lang.String getStartDate(long) -> getStartDate
    int getCallDuration(long) -> getCallDuration
    long getTimestamp(long) -> getTimestamp
    org.linphone.core.CallDirection getDirection() -> c
    org.linphone.core.LinphoneAddress getFrom() -> a
    org.linphone.core.LinphoneAddress getTo() -> b
    org.linphone.core.LinphoneCallLog$CallStatus getStatus() -> d
    long getNativePtr() -> h
    java.lang.String getStartDate() -> e
    int getCallDuration() -> g
    long getTimestamp() -> f
org.linphone.core.LinphoneCallParams -> org.linphone.core.j:
    void setVideoEnabled(boolean) -> a
    boolean getVideoEnabled() -> a
    void setAudioBandwidth(int) -> a
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> b
    org.linphone.core.PayloadType getUsedAudioCodec() -> c
    org.linphone.core.PayloadType getUsedVideoCodec() -> d
    void enableLowBandwidth(boolean) -> b
    boolean isLowBandwidthEnabled() -> e
    void setRecordFile(java.lang.String) -> a
    org.linphone.core.VideoSize getSentVideoSize() -> f
    org.linphone.core.VideoSize getReceivedVideoSize() -> g
org.linphone.core.LinphoneCallParamsImpl -> org.linphone.core.LinphoneCallParamsImpl:
    long nativePtr -> a
    void enableVideo(long,boolean) -> enableVideo
    boolean getVideoEnabled(long) -> getVideoEnabled
    void audioBandwidth(long,int) -> audioBandwidth
    int getMediaEncryption(long) -> getMediaEncryption
    long getUsedAudioCodec(long) -> getUsedAudioCodec
    long getUsedVideoCodec(long) -> getUsedVideoCodec
    void destroy(long) -> destroy
    void enableLowBandwidth(long,boolean) -> enableLowBandwidth
    boolean isLowBandwidthEnabled(long) -> isLowBandwidthEnabled
    boolean getVideoEnabled() -> a
    void setVideoEnabled(boolean) -> a
    void finalize() -> finalize
    void setAudioBandwidth(int) -> a
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> b
    org.linphone.core.PayloadType getUsedAudioCodec() -> c
    org.linphone.core.PayloadType getUsedVideoCodec() -> d
    boolean localConferenceMode(long) -> localConferenceMode
    boolean localConferenceMode() -> h
    void enableLowBandwidth(boolean) -> b
    boolean isLowBandwidthEnabled() -> e
    void setRecordFile(long,java.lang.String) -> setRecordFile
    void setRecordFile(java.lang.String) -> a
    int[] getSentVideoSize(long) -> getSentVideoSize
    org.linphone.core.VideoSize getSentVideoSize() -> f
    int[] getReceivedVideoSize(long) -> getReceivedVideoSize
    org.linphone.core.VideoSize getReceivedVideoSize() -> g
org.linphone.core.LinphoneCallStats -> org.linphone.core.k:
    org.linphone.core.LinphoneCallStats$IceState getIceState() -> a
    float getDownloadBandwidth() -> b
    float getUploadBandwidth() -> c
org.linphone.core.LinphoneCallStats$IceState -> org.linphone.core.l:
    java.util.Vector values -> h
    org.linphone.core.LinphoneCallStats$IceState NotActivated -> a
    org.linphone.core.LinphoneCallStats$IceState Failed -> b
    org.linphone.core.LinphoneCallStats$IceState InProgress -> c
    org.linphone.core.LinphoneCallStats$IceState HostConnection -> d
    org.linphone.core.LinphoneCallStats$IceState ReflexiveConnection -> e
    org.linphone.core.LinphoneCallStats$IceState RelayConnection -> f
    int mValue -> g
    java.lang.String mStringValue -> i
    org.linphone.core.LinphoneCallStats$IceState fromInt(int) -> a
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCallStatsImpl -> org.linphone.core.LinphoneCallStatsImpl:
    int mediaType -> a
    int iceState -> b
    float downloadBandwidth -> c
    float uploadBandwidth -> d
    float localLossRate -> e
    float localLateRate -> f
    long nativePtr -> g
    float getLocalLossRate(long) -> getLocalLossRate
    float getLocalLateRate(long) -> getLocalLateRate
    void updateStats(long,int) -> updateStats
    void updateRealTimeStats(org.linphone.core.LinphoneCall) -> a
    org.linphone.core.LinphoneCallStats$IceState getIceState() -> a
    float getDownloadBandwidth() -> b
    float getUploadBandwidth() -> c
org.linphone.core.LinphoneChatMessage -> org.linphone.core.m:
    java.lang.String getText() -> a
    java.lang.String getExternalBodyUrl() -> b
    void setExternalBodyUrl(java.lang.String) -> a
    long getTime() -> c
    org.linphone.core.LinphoneChatMessage$State getStatus() -> d
    boolean isRead() -> e
    boolean isOutgoing() -> f
    void store() -> g
    int getStorageId() -> h
org.linphone.core.LinphoneChatMessage$State -> org.linphone.core.n:
    java.util.Vector values -> e
    int mValue -> f
    java.lang.String mStringValue -> g
    org.linphone.core.LinphoneChatMessage$State Idle -> a
    org.linphone.core.LinphoneChatMessage$State InProgress -> b
    org.linphone.core.LinphoneChatMessage$State Delivered -> c
    org.linphone.core.LinphoneChatMessage$State NotDelivered -> d
    int value() -> a
    org.linphone.core.LinphoneChatMessage$State fromInt(int) -> a
    java.lang.String toString() -> toString
    int toInt() -> b
org.linphone.core.LinphoneChatMessage$StateListener -> org.linphone.core.o:
org.linphone.core.LinphoneChatMessageImpl -> org.linphone.core.LinphoneChatMessageImpl:
    long nativePtr -> a
    java.lang.String getText(long) -> getText
    java.lang.String getExternalBodyUrl(long) -> getExternalBodyUrl
    void setExternalBodyUrl(long,java.lang.String) -> setExternalBodyUrl
    long getTime(long) -> getTime
    int getStatus(long) -> getStatus
    boolean isRead(long) -> isRead
    boolean isOutgoing(long) -> isOutgoing
    void store(long) -> store
    int getStorageId(long) -> getStorageId
    void unref(long) -> unref
    long getNativePtr() -> i
    java.lang.String getText() -> a
    java.lang.String getExternalBodyUrl() -> b
    void setExternalBodyUrl(java.lang.String) -> a
    long getTime() -> c
    org.linphone.core.LinphoneChatMessage$State getStatus() -> d
    boolean isRead() -> e
    boolean isOutgoing() -> f
    void store() -> g
    int getStorageId() -> h
    void finalize() -> finalize
org.linphone.core.LinphoneChatRoom -> org.linphone.core.p:
    org.linphone.core.LinphoneAddress getPeerAddress() -> a
    void sendMessage(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$StateListener) -> a
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String) -> a
    org.linphone.core.LinphoneChatMessage[] getHistory() -> b
    org.linphone.core.LinphoneChatMessage[] getHistory(int) -> a
    int getUnreadMessagesCount() -> c
    void deleteHistory() -> d
    void compose() -> e
    boolean isRemoteComposing() -> f
    void markAsRead() -> g
    void deleteMessage(org.linphone.core.LinphoneChatMessage) -> a
    void updateUrl(org.linphone.core.LinphoneChatMessage) -> b
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String,java.lang.String,org.linphone.core.LinphoneChatMessage$State,long,boolean,boolean) -> a
org.linphone.core.LinphoneChatRoomImpl -> org.linphone.core.LinphoneChatRoomImpl:
    long nativePtr -> a
    long createLinphoneChatMessage(long,java.lang.String) -> createLinphoneChatMessage
    long getPeerAddress(long) -> getPeerAddress
    void sendMessage2(long,java.lang.Object,long,org.linphone.core.LinphoneChatMessage$StateListener) -> sendMessage2
    long[] getHistory(long,int) -> getHistory
    int getUnreadMessagesCount(long) -> getUnreadMessagesCount
    void deleteHistory(long) -> deleteHistory
    void compose(long) -> compose
    boolean isRemoteComposing(long) -> isRemoteComposing
    void markAsRead(long) -> markAsRead
    void deleteMessage(long,long) -> deleteMessage
    void updateUrl(long,long) -> updateUrl
    long createLinphoneChatMessage2(long,java.lang.String,java.lang.String,int,long,boolean,boolean) -> createLinphoneChatMessage2
    org.linphone.core.LinphoneAddress getPeerAddress() -> a
    void sendMessage(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$StateListener) -> a
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String) -> a
    org.linphone.core.LinphoneChatMessage[] getHistory() -> b
    org.linphone.core.LinphoneChatMessage[] getHistory(int) -> a
    int getUnreadMessagesCount() -> c
    void deleteHistory() -> d
    void compose() -> e
    boolean isRemoteComposing() -> f
    void markAsRead() -> g
    void deleteMessage(org.linphone.core.LinphoneChatMessage) -> a
    void updateUrl(org.linphone.core.LinphoneChatMessage) -> b
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String,java.lang.String,org.linphone.core.LinphoneChatMessage$State,long,boolean,boolean) -> a
    java.lang.Object getCore(long) -> getCore
    org.linphone.core.LinphoneCore getCore() -> h
org.linphone.core.LinphoneCore -> org.linphone.core.q:
    void addProxyConfig(org.linphone.core.LinphoneProxyConfig) -> a
    void removeProxyConfig(org.linphone.core.LinphoneProxyConfig) -> b
    void setDefaultProxyConfig(org.linphone.core.LinphoneProxyConfig) -> c
    org.linphone.core.LinphoneProxyConfig getDefaultProxyConfig() -> a
    org.linphone.core.LinphoneAuthInfo findAuthInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    void removeAuthInfo(org.linphone.core.LinphoneAuthInfo) -> a
    void addAuthInfo(org.linphone.core.LinphoneAuthInfo) -> b
    org.linphone.core.LinphoneAddress interpretUrl(java.lang.String) -> a
    org.linphone.core.LinphoneCall invite(java.lang.String) -> b
    void terminateCall(org.linphone.core.LinphoneCall) -> a
    org.linphone.core.LinphoneCall getCurrentCall() -> b
    boolean isIncall() -> c
    boolean isInComingInvitePending() -> d
    void iterate() -> e
    void acceptCall(org.linphone.core.LinphoneCall) -> b
    void acceptCallWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> a
    org.linphone.core.LinphoneCallLog[] getCallLogs() -> f
    void setNetworkReachable(boolean) -> a
    boolean isNetworkReachable() -> g
    void destroy() -> h
    void setPlaybackGain(float) -> a
    void muteMic(boolean) -> b
    void sendDtmf(char) -> a
    void playDtmf(char,int) -> a
    void stopDtmf() -> i
    void clearCallLogs() -> j
    void enablePayloadType(org.linphone.core.PayloadType,boolean) -> a
    boolean isPayloadTypeEnabled(org.linphone.core.PayloadType) -> a
    void enableEchoCancellation(boolean) -> c
    boolean isEchoCancellationEnabled() -> k
    void setSignalingTransportPorts(org.linphone.core.LinphoneCore$Transports) -> a
    org.linphone.core.LinphoneCore$Transports getSignalingTransportPorts() -> l
    void enableSpeaker(boolean) -> d
    boolean isSpeakerEnabled() -> m
    void addFriend(org.linphone.core.LinphoneFriend) -> a
    void setPresenceInfo(int,java.lang.String,org.linphone.core.OnlineStatus) -> a
    void setPresenceModel(org.linphone.core.PresenceModel) -> a
    org.linphone.core.PresenceModel getPresenceModel() -> n
    org.linphone.core.LinphoneChatRoom getOrCreateChatRoom(java.lang.String) -> c
    void setVideoWindow(java.lang.Object) -> a
    void setPreviewWindow(java.lang.Object) -> b
    void setDeviceRotation(int) -> a
    void setVideoDevice(int) -> b
    int getVideoDevice() -> o
    boolean isVideoSupported() -> p
    void enableVideo(boolean,boolean) -> a
    boolean isVideoEnabled() -> q
    void setStunServer(java.lang.String) -> d
    java.lang.String getStunServer() -> r
    void setFirewallPolicy(org.linphone.core.LinphoneCore$FirewallPolicy) -> a
    org.linphone.core.LinphoneCore$FirewallPolicy getFirewallPolicy() -> s
    org.linphone.core.LinphoneCall inviteAddressWithParams(org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneCallParams) -> a
    int updateCall(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> b
    org.linphone.core.LinphoneCallParams createDefaultCallParameters() -> t
    void setUploadBandwidth(int) -> c
    void setDownloadBandwidth(int) -> d
    void setPreferredVideoSizeByName(java.lang.String) -> e
    org.linphone.core.PayloadType[] getAudioCodecs() -> u
    org.linphone.core.PayloadType[] getVideoCodecs() -> v
    void enableKeepAlive(boolean) -> e
    void startEchoCalibration(java.lang.Object) -> c
    boolean needsEchoCalibration() -> w
    void enableIpv6(boolean) -> f
    boolean isIpv6Enabled() -> x
    boolean pauseCall(org.linphone.core.LinphoneCall) -> c
    boolean resumeCall(org.linphone.core.LinphoneCall) -> d
    boolean pauseAllCalls() -> y
    boolean isInConference() -> z
    boolean enterConference() -> A
    void leaveConference() -> B
    void removeFromConference(org.linphone.core.LinphoneCall) -> e
    void addAllToConference() -> C
    void terminateConference() -> D
    int getConferenceSize() -> E
    void terminateAllCalls() -> F
    org.linphone.core.LinphoneCall[] getCalls() -> G
    int getCallsNb() -> H
    void transferCall(org.linphone.core.LinphoneCall,java.lang.String) -> a
    int getMaxCalls() -> I
    void setMaxCalls(int) -> e
    boolean mediaEncryptionSupported(org.linphone.core.LinphoneCore$MediaEncryption) -> a
    void setMediaEncryption(org.linphone.core.LinphoneCore$MediaEncryption) -> b
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> J
    void tunnelEnable(boolean) -> g
    void tunnelAutoDetect() -> K
    void tunnelCleanServers() -> L
    void tunnelAddServerAndMirror(java.lang.String,int,int,int) -> a
    boolean isTunnelAvailable() -> isTunnelAvailable
    org.linphone.core.LinphoneProxyConfig[] getProxyConfigList() -> M
    void setVideoPolicy(boolean,boolean) -> b
    boolean getVideoAutoInitiatePolicy() -> N
    boolean getVideoAutoAcceptPolicy() -> O
    void removeCallLog(org.linphone.core.LinphoneCallLog) -> a
    int getMissedCallsCount() -> P
    void resetMissedCallsCount() -> Q
    void refreshRegisters() -> R
    java.lang.String getVersion() -> S
    void removeFriend(org.linphone.core.LinphoneFriend) -> b
    org.linphone.core.LinphoneFriend findFriendByAddress(java.lang.String) -> f
    void setPrimaryContact(java.lang.String,java.lang.String) -> a
    java.lang.String getPrimaryContactUsername() -> T
    java.lang.String getPrimaryContactDisplayName() -> U
    void setUseSipInfoForDtmfs(boolean) -> h
    boolean getUseSipInfoForDtmfs() -> V
    void setUseRfc2833ForDtmfs(boolean) -> i
    boolean getUseRfc2833ForDtmfs() -> W
    org.linphone.core.LpConfig getConfig() -> X
    boolean upnpAvailable() -> Y
    org.linphone.core.LinphoneChatRoom[] getChatRooms() -> Z
    java.lang.String[] getSupportedVideoSizes() -> aa
    org.linphone.core.LinphoneProxyConfig createProxyConfig() -> ab
org.linphone.core.LinphoneCore$FirewallPolicy -> org.linphone.core.r:
    java.util.Vector values -> f
    org.linphone.core.LinphoneCore$FirewallPolicy NoFirewall -> a
    org.linphone.core.LinphoneCore$FirewallPolicy UseNatAddress -> b
    org.linphone.core.LinphoneCore$FirewallPolicy UseStun -> c
    org.linphone.core.LinphoneCore$FirewallPolicy UseIce -> d
    org.linphone.core.LinphoneCore$FirewallPolicy UseUpnp -> e
    int mValue -> g
    java.lang.String mStringValue -> h
    org.linphone.core.LinphoneCore$FirewallPolicy fromInt(int) -> a
    java.lang.String toString() -> toString
    int value() -> a
org.linphone.core.LinphoneCore$MediaEncryption -> org.linphone.core.s:
    java.util.Vector values -> e
    org.linphone.core.LinphoneCore$MediaEncryption None -> a
    org.linphone.core.LinphoneCore$MediaEncryption SRTP -> b
    org.linphone.core.LinphoneCore$MediaEncryption ZRTP -> c
    int mValue -> d
    java.lang.String mStringValue -> f
    org.linphone.core.LinphoneCore$MediaEncryption fromInt(int) -> a
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$RegistrationState -> org.linphone.core.t:
    java.util.Vector values -> f
    org.linphone.core.LinphoneCore$RegistrationState RegistrationNone -> a
    org.linphone.core.LinphoneCore$RegistrationState RegistrationProgress -> b
    org.linphone.core.LinphoneCore$RegistrationState RegistrationOk -> c
    org.linphone.core.LinphoneCore$RegistrationState RegistrationCleared -> d
    org.linphone.core.LinphoneCore$RegistrationState RegistrationFailed -> e
    int mValue -> g
    java.lang.String mStringValue -> h
    org.linphone.core.LinphoneCore$RegistrationState fromInt(int) -> a
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$Transports -> org.linphone.core.u:
    int udp -> a
    int tcp -> b
    int tls -> c
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCoreException -> org.linphone.core.v:
org.linphone.core.LinphoneCoreFactory -> org.linphone.core.w:
    java.lang.String factoryName -> b
    org.linphone.core.LinphoneCoreFactory theLinphoneCoreFactory -> a
    org.linphone.core.LinphoneCoreFactory instance() -> a
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> a
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.Object) -> a
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String,java.lang.String,java.lang.String) -> a
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String) -> a
    org.linphone.core.LpConfig createLpConfig(java.lang.String) -> b
    org.linphone.core.LinphoneProxyConfig createProxyConfig(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void setDebugMode(boolean,java.lang.String) -> setDebugMode
    org.linphone.core.LinphoneFriend createLinphoneFriend(java.lang.String) -> c
    org.linphone.core.PresenceModel createPresenceModel(org.linphone.core.PresenceActivityType,java.lang.String) -> a
org.linphone.core.LinphoneCoreFactoryImpl -> org.linphone.core.LinphoneCoreFactoryImpl:
    boolean loadOptionalLibrary(java.lang.String) -> d
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String,java.lang.String,java.lang.String) -> a
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String) -> a
    org.linphone.core.LpConfig createLpConfig(java.lang.String) -> b
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> a
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.Object) -> a
    org.linphone.core.LinphoneProxyConfig createProxyConfig(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void setDebugMode(boolean,java.lang.String) -> setDebugMode
    org.linphone.core.LinphoneFriend createLinphoneFriend(java.lang.String) -> c
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    org.linphone.core.PresenceModel createPresenceModel(org.linphone.core.PresenceActivityType,java.lang.String) -> a
org.linphone.core.LinphoneCoreImpl -> org.linphone.core.LinphoneCoreImpl:
    org.linphone.core.LinphoneCoreListener mListener -> c
    long nativePtr -> d
    android.content.Context mContext -> e
    android.media.AudioManager mAudioManager -> f
    boolean mSpeakerEnabled -> g
    int FIND_PAYLOAD_IGNORE_RATE -> a
    int FIND_PAYLOAD_IGNORE_CHANNELS -> b
    long newLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.String,java.lang.String,java.lang.Object) -> newLinphoneCore
    void iterate(long) -> iterate
    long getDefaultProxyConfig(long) -> getDefaultProxyConfig
    void setDefaultProxyConfig(long,long) -> setDefaultProxyConfig
    int addProxyConfig(org.linphone.core.LinphoneProxyConfig,long,long) -> addProxyConfig
    void removeProxyConfig(long,long) -> removeProxyConfig
    void addAuthInfo(long,long) -> addAuthInfo
    void removeAuthInfo(long,long) -> removeAuthInfo
    java.lang.Object invite(long,java.lang.String) -> invite
    void terminateCall(long,long) -> terminateCall
    boolean isInCall(long) -> isInCall
    boolean isInComingInvitePending(long) -> isInComingInvitePending
    void acceptCall(long,long) -> acceptCall
    long getCallLog(long,int) -> getCallLog
    int getNumberOfCallLogs(long) -> getNumberOfCallLogs
    void delete(long) -> delete
    void setNetworkStateReachable(long,boolean) -> setNetworkStateReachable
    boolean isNetworkStateReachable(long) -> isNetworkStateReachable
    void setPlaybackGain(long,float) -> setPlaybackGain
    void muteMic(long,boolean) -> muteMic
    long interpretUrl(long,java.lang.String) -> interpretUrl
    java.lang.Object inviteAddressWithParams(long,long,long) -> inviteAddressWithParams
    void sendDtmf(long,char) -> sendDtmf
    void clearCallLogs(long) -> clearCallLogs
    int enablePayloadType(long,long,boolean) -> enablePayloadType
    boolean isPayloadTypeEnabled(long,long) -> isPayloadTypeEnabled
    void enableEchoCancellation(long,boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled(long) -> isEchoCancellationEnabled
    java.lang.Object getCurrentCall(long) -> getCurrentCall
    void playDtmf(long,char,int) -> playDtmf
    void stopDtmf(long) -> stopDtmf
    void setVideoWindowId(long,java.lang.Object) -> setVideoWindowId
    void setPreviewWindowId(long,java.lang.Object) -> setPreviewWindowId
    void setDeviceRotation(long,int) -> setDeviceRotation
    void addFriend(long,long) -> addFriend
    void setPresenceInfo(long,int,java.lang.String,int) -> setPresenceInfo
    void setPresenceModel(long,long) -> setPresenceModel
    java.lang.Object getPresenceModel(long) -> getPresenceModel
    long getOrCreateChatRoom(long,java.lang.String) -> getOrCreateChatRoom
    void enableVideo(long,boolean,boolean) -> enableVideo
    boolean isVideoEnabled(long) -> isVideoEnabled
    boolean isVideoSupported(long) -> isVideoSupported
    void setFirewallPolicy(long,int) -> setFirewallPolicy
    int getFirewallPolicy(long) -> getFirewallPolicy
    void setStunServer(long,java.lang.String) -> setStunServer
    java.lang.String getStunServer(long) -> getStunServer
    long createDefaultCallParams(long) -> createDefaultCallParams
    int updateCall(long,long,long) -> updateCall
    void setUploadBandwidth(long,int) -> setUploadBandwidth
    void setDownloadBandwidth(long,int) -> setDownloadBandwidth
    void setPreferredVideoSizeByName(long,java.lang.String) -> setPreferredVideoSizeByName
    long[] listVideoPayloadTypes(long) -> listVideoPayloadTypes
    long[] getProxyConfigList(long) -> getProxyConfigList
    long findAuthInfos(long,java.lang.String,java.lang.String,java.lang.String) -> findAuthInfos
    long[] listAudioPayloadTypes(long) -> listAudioPayloadTypes
    void enableKeepAlive(long,boolean) -> enableKeepAlive
    int startEchoCalibration(long,java.lang.Object) -> startEchoCalibration
    int getSignalingTransportPort(long,int) -> getSignalingTransportPort
    void setSignalingTransportPorts(long,int,int,int) -> setSignalingTransportPorts
    void enableIpv6(long,boolean) -> enableIpv6
    boolean isIpv6Enabled(long) -> isIpv6Enabled
    int pauseCall(long,long) -> pauseCall
    int pauseAllCalls(long) -> pauseAllCalls
    int resumeCall(long,long) -> resumeCall
    int setVideoDevice(long,int) -> setVideoDevice
    int getVideoDevice(long) -> getVideoDevice
    int getMediaEncryption(long) -> getMediaEncryption
    void setMediaEncryption(long,int) -> setMediaEncryption
    void removeCallLog(long,long) -> removeCallLog
    int getMissedCallsCount(long) -> getMissedCallsCount
    void resetMissedCallsCount(long) -> resetMissedCallsCount
    java.lang.String getVersion(long) -> getVersion
    void setPrimaryContact(long,java.lang.String,java.lang.String) -> setPrimaryContact
    java.lang.String getPrimaryContactUsername(long) -> getPrimaryContactUsername
    java.lang.String getPrimaryContactDisplayName(long) -> getPrimaryContactDisplayName
    long[] getChatRooms(long) -> getChatRooms
    long createProxyConfig(long) -> createProxyConfig
    void finalize() -> finalize
    boolean contextInitialized() -> ac
    void addAuthInfo(org.linphone.core.LinphoneAuthInfo) -> b
    void removeAuthInfo(org.linphone.core.LinphoneAuthInfo) -> a
    org.linphone.core.LinphoneProxyConfig getDefaultProxyConfig() -> a
    org.linphone.core.LinphoneCall invite(java.lang.String) -> b
    void iterate() -> e
    void setDefaultProxyConfig(org.linphone.core.LinphoneProxyConfig) -> c
    void addProxyConfig(org.linphone.core.LinphoneProxyConfig) -> a
    void removeProxyConfig(org.linphone.core.LinphoneProxyConfig) -> b
    void terminateCall(org.linphone.core.LinphoneCall) -> a
    boolean isIncall() -> c
    boolean isInComingInvitePending() -> d
    void acceptCall(org.linphone.core.LinphoneCall) -> b
    org.linphone.core.LinphoneCallLog[] getCallLogs() -> f
    void destroy() -> h
    void isValid() -> ad
    void setNetworkReachable(boolean) -> a
    void setPlaybackGain(float) -> a
    void muteMic(boolean) -> b
    org.linphone.core.LinphoneAddress interpretUrl(java.lang.String) -> a
    void sendDtmf(char) -> a
    void clearCallLogs() -> j
    void enablePayloadType(org.linphone.core.PayloadType,boolean) -> a
    boolean isPayloadTypeEnabled(org.linphone.core.PayloadType) -> a
    void enableEchoCancellation(boolean) -> c
    boolean isEchoCancellationEnabled() -> k
    org.linphone.core.LinphoneCall getCurrentCall() -> b
    void applyAudioHacks() -> ae
    void setAudioModeIncallForGalaxyS() -> af
    void routeAudioToSpeakerHelper(boolean) -> j
    void forceSpeakerState(long,boolean) -> forceSpeakerState
    void enableSpeaker(boolean) -> d
    boolean isSpeakerEnabled() -> m
    void playDtmf(char,int) -> a
    void stopDtmf() -> i
    void addFriend(org.linphone.core.LinphoneFriend) -> a
    void setPresenceInfo(int,java.lang.String,org.linphone.core.OnlineStatus) -> a
    void setPresenceModel(org.linphone.core.PresenceModel) -> a
    org.linphone.core.PresenceModel getPresenceModel() -> n
    org.linphone.core.LinphoneChatRoom getOrCreateChatRoom(java.lang.String) -> c
    void setPreviewWindow(java.lang.Object) -> b
    void setVideoWindow(java.lang.Object) -> a
    void setDeviceRotation(int) -> a
    void enableVideo(boolean,boolean) -> a
    boolean isVideoEnabled() -> q
    boolean isVideoSupported() -> p
    org.linphone.core.LinphoneCore$FirewallPolicy getFirewallPolicy() -> s
    java.lang.String getStunServer() -> r
    void setFirewallPolicy(org.linphone.core.LinphoneCore$FirewallPolicy) -> a
    void setStunServer(java.lang.String) -> d
    org.linphone.core.LinphoneCallParams createDefaultCallParameters() -> t
    org.linphone.core.LinphoneCall inviteAddressWithParams(org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneCallParams) -> a
    int updateCall(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> b
    void setUploadBandwidth(int) -> c
    void setDownloadBandwidth(int) -> d
    void setPreferredVideoSizeByName(java.lang.String) -> e
    org.linphone.core.LinphoneProxyConfig[] getProxyConfigList() -> M
    org.linphone.core.PayloadType[] getVideoCodecs() -> v
    org.linphone.core.PayloadType[] getAudioCodecs() -> u
    boolean isNetworkReachable() -> g
    void enableKeepAlive(boolean) -> e
    void startEchoCalibration(java.lang.Object) -> c
    org.linphone.core.LinphoneCore$Transports getSignalingTransportPorts() -> l
    void setSignalingTransportPorts(org.linphone.core.LinphoneCore$Transports) -> a
    void enableIpv6(boolean) -> f
    boolean isIpv6Enabled() -> x
    boolean pauseCall(org.linphone.core.LinphoneCall) -> c
    boolean resumeCall(org.linphone.core.LinphoneCall) -> d
    boolean pauseAllCalls() -> y
    void setVideoDevice(int) -> b
    int getVideoDevice() -> o
    void leaveConference(long) -> leaveConference
    void leaveConference() -> B
    boolean enterConference(long) -> enterConference
    boolean enterConference() -> A
    boolean isInConference(long) -> isInConference
    boolean isInConference() -> z
    void terminateConference(long) -> terminateConference
    void terminateConference() -> D
    int getConferenceSize(long) -> getConferenceSize
    int getConferenceSize() -> E
    int getCallsNb(long) -> getCallsNb
    int getCallsNb() -> H
    void terminateAllCalls(long) -> terminateAllCalls
    void terminateAllCalls() -> F
    java.lang.Object getCall(long,int) -> getCall
    org.linphone.core.LinphoneCall[] getCalls() -> G
    void addAllToConference(long) -> addAllToConference
    void addAllToConference() -> C
    void removeFromConference(long,long) -> removeFromConference
    void removeFromConference(org.linphone.core.LinphoneCall) -> e
    long getCallPtr(org.linphone.core.LinphoneCall) -> f
    long getCallParamsPtr(org.linphone.core.LinphoneCallParams) -> a
    int transferCall(long,long,java.lang.String) -> transferCall
    void transferCall(org.linphone.core.LinphoneCall,java.lang.String) -> a
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> J
    void setMediaEncryption(org.linphone.core.LinphoneCore$MediaEncryption) -> b
    int getMaxCalls(long) -> getMaxCalls
    int getMaxCalls() -> I
    void setMaxCalls(long,int) -> setMaxCalls
    void setMaxCalls(int) -> e
    boolean mediaEncryptionSupported(long,int) -> mediaEncryptionSupported
    boolean mediaEncryptionSupported(org.linphone.core.LinphoneCore$MediaEncryption) -> a
    void tunnelAddServerAndMirror(long,java.lang.String,int,int,int) -> tunnelAddServerAndMirror
    void tunnelAddServerAndMirror(java.lang.String,int,int,int) -> a
    void tunnelAutoDetect(long) -> tunnelAutoDetect
    void tunnelAutoDetect() -> K
    void tunnelCleanServers(long) -> tunnelCleanServers
    void tunnelCleanServers() -> L
    void tunnelEnable(long,boolean) -> tunnelEnable
    void tunnelEnable(boolean) -> g
    boolean isTunnelAvailable() -> isTunnelAvailable
    void acceptCallWithParams(long,long,long) -> acceptCallWithParams
    void acceptCallWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> a
    void setVideoPolicy(long,boolean,boolean) -> setVideoPolicy
    void setVideoPolicy(boolean,boolean) -> b
    boolean getVideoAutoInitiatePolicy(long) -> getVideoAutoInitiatePolicy
    boolean getVideoAutoInitiatePolicy() -> N
    boolean getVideoAutoAcceptPolicy(long) -> getVideoAutoAcceptPolicy
    boolean getVideoAutoAcceptPolicy() -> O
    int getMissedCallsCount() -> P
    void removeCallLog(org.linphone.core.LinphoneCallLog) -> a
    void resetMissedCallsCount() -> Q
    void refreshRegisters(long) -> refreshRegisters
    void refreshRegisters() -> R
    java.lang.String getVersion() -> S
    void removeFriend(long,long) -> removeFriend
    void removeFriend(org.linphone.core.LinphoneFriend) -> b
    long getFriendByAddress(long,java.lang.String) -> getFriendByAddress
    org.linphone.core.LinphoneFriend findFriendByAddress(java.lang.String) -> f
    void setMicrophoneGain(long,float) -> setMicrophoneGain
    void setMicrophoneGain(float) -> b
    void setPrimaryContact(java.lang.String,java.lang.String) -> a
    java.lang.String getPrimaryContactUsername() -> T
    java.lang.String getPrimaryContactDisplayName() -> U
    void setUseSipInfoForDtmfs(long,boolean) -> setUseSipInfoForDtmfs
    void setUseSipInfoForDtmfs(boolean) -> h
    boolean getUseSipInfoForDtmfs(long) -> getUseSipInfoForDtmfs
    boolean getUseSipInfoForDtmfs() -> V
    void setUseRfc2833ForDtmfs(long,boolean) -> setUseRfc2833ForDtmfs
    void setUseRfc2833ForDtmfs(boolean) -> i
    boolean getUseRfc2833ForDtmfs(long) -> getUseRfc2833ForDtmfs
    boolean getUseRfc2833ForDtmfs() -> W
    long getConfig(long) -> getConfig
    org.linphone.core.LpConfig getConfig() -> X
    boolean needsEchoCalibration(long) -> needsEchoCalibration
    boolean needsEchoCalibration() -> w
    boolean upnpAvailable(long) -> upnpAvailable
    boolean upnpAvailable() -> Y
    org.linphone.core.LinphoneChatRoom[] getChatRooms() -> Z
    org.linphone.core.LinphoneAuthInfo findAuthInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String[] listSupportedVideoResolutions(long) -> listSupportedVideoResolutions
    java.lang.String[] getSupportedVideoSizes() -> aa
    org.linphone.core.LinphoneProxyConfig createProxyConfig() -> ab
org.linphone.core.LinphoneCoreListener -> org.linphone.core.x:
org.linphone.core.LinphoneFriend -> org.linphone.core.y:
    org.linphone.core.LinphoneAddress getAddress() -> a
    void setIncSubscribePolicy(org.linphone.core.LinphoneFriend$SubscribePolicy) -> a
    void enableSubscribes(boolean) -> a
    org.linphone.core.PresenceModel getPresenceModel() -> b
    void edit() -> c
    void done() -> d
    long getNativePtr() -> e
org.linphone.core.LinphoneFriend$SubscribePolicy -> org.linphone.core.z:
    java.util.Vector values -> e
    int mValue -> a
    java.lang.String mStringValue -> f
    org.linphone.core.LinphoneFriend$SubscribePolicy SPWait -> b
    org.linphone.core.LinphoneFriend$SubscribePolicy SPDeny -> c
    org.linphone.core.LinphoneFriend$SubscribePolicy SPAccept -> d
    java.lang.String toString() -> toString
org.linphone.core.LinphoneFriendImpl -> org.linphone.core.LinphoneFriendImpl:
    long nativePtr -> a
    boolean ownPtr -> b
    long newLinphoneFriend(java.lang.String) -> newLinphoneFriend
    long getAddress(long) -> getAddress
    void setIncSubscribePolicy(long,int) -> setIncSubscribePolicy
    void enableSubscribes(long,boolean) -> enableSubscribes
    java.lang.Object getPresenceModel(long) -> getPresenceModel
    void edit(long) -> edit
    void done(long) -> done
    void delete(long) -> delete
    java.lang.Object getCore(long) -> getCore
    void finalize() -> finalize
    org.linphone.core.LinphoneAddress getAddress() -> a
    void setIncSubscribePolicy(org.linphone.core.LinphoneFriend$SubscribePolicy) -> a
    void enableSubscribes(boolean) -> a
    org.linphone.core.PresenceModel getPresenceModel() -> b
    void edit() -> c
    void done() -> d
    long getNativePtr() -> e
    java.lang.Object getSyncObject() -> f
org.linphone.core.LinphoneProxyConfig -> org.linphone.core.aa:
    org.linphone.core.LinphoneProxyConfig edit() -> a
    void done() -> b
    void setIdentity(java.lang.String) -> a
    java.lang.String getIdentity() -> c
    void setProxy(java.lang.String) -> b
    java.lang.String getProxy() -> d
    org.linphone.core.LinphoneProxyConfig enableRegister(boolean) -> a
    boolean registerEnabled() -> e
    void setDialPrefix(java.lang.String) -> c
    java.lang.String getDialPrefix() -> f
    void setDialEscapePlus(boolean) -> b
    boolean getDialEscapePlus() -> g
    java.lang.String getDomain() -> h
    boolean isRegistered() -> i
    void setRoute(java.lang.String) -> d
    java.lang.String getRoute() -> j
    void enablePublish(boolean) -> c
    org.linphone.core.LinphoneCore$RegistrationState getState() -> k
    void setExpires(int) -> a
    int getExpires() -> l
    void enableAvpf(boolean) -> d
    void setAvpfRRInterval(int) -> b
    int getAvpfRRInterval() -> m
    boolean avpfEnabled() -> n
    void setContactUriParameters(java.lang.String) -> e
org.linphone.core.LinphoneProxyConfigImpl -> org.linphone.core.LinphoneProxyConfigImpl:
    long nativePtr -> a
    org.linphone.core.LinphoneCoreImpl mCore -> b
    boolean ownPtr -> c
    int getState(long) -> getState
    void setExpires(long,int) -> setExpires
    int getExpires(long) -> getExpires
    void finalize() -> finalize
    long newLinphoneProxyConfig() -> newLinphoneProxyConfig
    void delete(long) -> delete
    void edit(long) -> edit
    void done(long) -> done
    void setIdentity(long,java.lang.String) -> setIdentity
    java.lang.String getIdentity(long) -> getIdentity
    int setProxy(long,java.lang.String) -> setProxy
    java.lang.String getProxy(long) -> getProxy
    void enableRegister(long,boolean) -> enableRegister
    boolean isRegisterEnabled(long) -> isRegisterEnabled
    boolean isRegistered(long) -> isRegistered
    void setDialPrefix(long,java.lang.String) -> setDialPrefix
    java.lang.String getDialPrefix(long) -> getDialPrefix
    java.lang.String getDomain(long) -> getDomain
    void setDialEscapePlus(long,boolean) -> setDialEscapePlus
    boolean getDialEscapePlus(long) -> getDialEscapePlus
    java.lang.String getRoute(long) -> getRoute
    int setRoute(long,java.lang.String) -> setRoute
    void enablePublish(long,boolean) -> enablePublish
    org.linphone.core.LinphoneProxyConfig enableRegister(boolean) -> a
    void done() -> b
    org.linphone.core.LinphoneProxyConfig edit() -> a
    void setIdentity(java.lang.String) -> a
    void setProxy(java.lang.String) -> b
    void setDialPrefix(java.lang.String) -> c
    java.lang.String getDialPrefix() -> f
    java.lang.String getDomain() -> h
    void setDialEscapePlus(boolean) -> b
    boolean getDialEscapePlus() -> g
    java.lang.String getIdentity() -> c
    java.lang.String getProxy() -> d
    boolean isRegistered() -> i
    boolean registerEnabled() -> e
    java.lang.String getRoute() -> j
    void setRoute(java.lang.String) -> d
    void enablePublish(boolean) -> c
    org.linphone.core.LinphoneCore$RegistrationState getState() -> k
    void setExpires(int) -> a
    int getExpires() -> l
    void enableAvpf(long,boolean) -> enableAvpf
    void enableAvpf(boolean) -> d
    boolean avpfEnabled(long) -> avpfEnabled
    boolean avpfEnabled() -> n
    void setAvpfRRInterval(long,int) -> setAvpfRRInterval
    void setAvpfRRInterval(int) -> b
    int getAvpfRRInterval(long) -> getAvpfRRInterval
    int getAvpfRRInterval() -> m
    void setContactUriParameters(long,java.lang.String) -> setContactUriParameters
    void setContactUriParameters(java.lang.String) -> e
org.linphone.core.LpConfig -> org.linphone.core.ab:
    void setInt(java.lang.String,java.lang.String,int) -> a
    void setBool(java.lang.String,java.lang.String,boolean) -> a
    void setString(java.lang.String,java.lang.String,java.lang.String) -> a
    int getInt(java.lang.String,java.lang.String,int) -> b
    boolean getBool(java.lang.String,java.lang.String,boolean) -> b
    java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> b
org.linphone.core.LpConfigImpl -> org.linphone.core.LpConfigImpl:
    long nativePtr -> b
    boolean ownPtr -> a
    long newLpConfigImpl(java.lang.String) -> newLpConfigImpl
    void delete(long) -> delete
    void finalize() -> finalize
    void setInt(long,java.lang.String,java.lang.String,int) -> setInt
    void setInt(java.lang.String,java.lang.String,int) -> a
    void setBool(long,java.lang.String,java.lang.String,boolean) -> setBool
    void setBool(java.lang.String,java.lang.String,boolean) -> a
    void setString(long,java.lang.String,java.lang.String,java.lang.String) -> setString
    void setString(java.lang.String,java.lang.String,java.lang.String) -> a
    int getInt(long,java.lang.String,java.lang.String,int) -> getInt
    int getInt(java.lang.String,java.lang.String,int) -> b
    boolean getBool(long,java.lang.String,java.lang.String,boolean) -> getBool
    boolean getBool(java.lang.String,java.lang.String,boolean) -> b
    java.lang.String getString(long,java.lang.String,java.lang.String,java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> b
org.linphone.core.OnlineStatus -> org.linphone.core.ac:
    java.util.Vector values -> m
    org.linphone.core.OnlineStatus Offline -> a
    org.linphone.core.OnlineStatus Online -> b
    org.linphone.core.OnlineStatus Busy -> c
    org.linphone.core.OnlineStatus BeRightBack -> d
    org.linphone.core.OnlineStatus Away -> e
    org.linphone.core.OnlineStatus OnThePhone -> f
    org.linphone.core.OnlineStatus OutToLunch -> g
    org.linphone.core.OnlineStatus DoNotDisturb -> h
    org.linphone.core.OnlineStatus StatusMoved -> i
    org.linphone.core.OnlineStatus StatusAltService -> j
    org.linphone.core.OnlineStatus Pending -> k
    int mValue -> l
    java.lang.String mStringValue -> n
    java.lang.String toString() -> toString
org.linphone.core.PayloadType -> org.linphone.core.ad:
    java.lang.String getMime() -> a
    int getRate() -> b
org.linphone.core.PayloadTypeImpl -> org.linphone.core.PayloadTypeImpl:
    long nativePtr -> a
    java.lang.String toString(long) -> toString
    java.lang.String getMime(long) -> getMime
    int getRate(long) -> getRate
    int getRate() -> b
    java.lang.String getMime() -> a
    java.lang.String toString() -> toString
org.linphone.core.PresenceActivity -> org.linphone.core.ae:
    org.linphone.core.PresenceActivityType getType() -> a
    int setType(org.linphone.core.PresenceActivityType) -> a
org.linphone.core.PresenceActivityType -> org.linphone.core.af:
    org.linphone.core.PresenceActivityType Offline -> a
    org.linphone.core.PresenceActivityType Online -> b
    org.linphone.core.PresenceActivityType Appointment -> c
    org.linphone.core.PresenceActivityType Away -> d
    org.linphone.core.PresenceActivityType Breakfast -> e
    org.linphone.core.PresenceActivityType Busy -> f
    org.linphone.core.PresenceActivityType Dinner -> g
    org.linphone.core.PresenceActivityType Holiday -> h
    org.linphone.core.PresenceActivityType InTransit -> i
    org.linphone.core.PresenceActivityType LookingForWork -> j
    org.linphone.core.PresenceActivityType Lunch -> k
    org.linphone.core.PresenceActivityType Meal -> l
    org.linphone.core.PresenceActivityType Meeting -> m
    org.linphone.core.PresenceActivityType OnThePhone -> n
    org.linphone.core.PresenceActivityType Other -> o
    org.linphone.core.PresenceActivityType Performance -> p
    org.linphone.core.PresenceActivityType PermanentAbsence -> q
    org.linphone.core.PresenceActivityType Playing -> r
    org.linphone.core.PresenceActivityType Presentation -> s
    org.linphone.core.PresenceActivityType Shopping -> t
    org.linphone.core.PresenceActivityType Sleeping -> u
    org.linphone.core.PresenceActivityType Spectator -> v
    org.linphone.core.PresenceActivityType Steering -> w
    org.linphone.core.PresenceActivityType Travel -> x
    org.linphone.core.PresenceActivityType TV -> y
    org.linphone.core.PresenceActivityType Unknown -> z
    org.linphone.core.PresenceActivityType Vacation -> A
    org.linphone.core.PresenceActivityType Working -> B
    org.linphone.core.PresenceActivityType Worship -> C
    org.linphone.core.PresenceActivityType Invalid -> D
    int mValue -> E
    org.linphone.core.PresenceActivityType[] ENUM$VALUES -> F
    int toInt() -> a
    org.linphone.core.PresenceActivityType[] values() -> values
    org.linphone.core.PresenceActivityType valueOf(java.lang.String) -> valueOf
org.linphone.core.PresenceModel -> org.linphone.core.ag:
    org.linphone.core.PresenceActivity getActivity() -> a
org.linphone.core.PresenceModelImpl -> org.linphone.core.PresenceModelImpl:
    long mNativePtr -> a
    long newPresenceModelImpl() -> newPresenceModelImpl
    long newPresenceModelImpl(int,java.lang.String) -> newPresenceModelImpl
    void unref(long) -> unref
    void finalize() -> finalize
    java.lang.Object getActivity(long) -> getActivity
    org.linphone.core.PresenceActivity getActivity() -> a
    long getNativePtr() -> b
org.linphone.core.VideoSize -> org.linphone.core.ah:
    int width -> a
    int height -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toDisplayableString() -> a
    java.lang.String toString() -> toString
org.linphone.core.tutorials.TutorialBuddyStatus -> org.linphone.core.a.a:
    boolean running -> a
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> b
    void launchTutorial(java.lang.String,java.lang.String,java.lang.String) -> a
    void stopMainLoop() -> a
    void write(java.lang.String) -> a
org.linphone.core.tutorials.TutorialChatRoom -> org.linphone.core.a.b:
    boolean running -> a
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> b
    void launchTutorial(java.lang.String) -> a
    void stopMainLoop() -> a
    void write(java.lang.String) -> b
org.linphone.core.tutorials.TutorialHelloWorld -> org.linphone.core.a.c:
    boolean running -> a
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> b
    void launchTutorial(java.lang.String) -> a
    void stopMainLoop() -> a
    void write(java.lang.String) -> b
org.linphone.core.tutorials.TutorialNotifier -> org.linphone.core.a.d:
    void notify(java.lang.String) -> a
org.linphone.core.tutorials.TutorialRegistration -> org.linphone.core.a.e:
    boolean running -> a
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> b
    void launchTutorial(java.lang.String,java.lang.String) -> a
    void sleep(int) -> a
    void stopMainLoop() -> a
    void write(java.lang.String) -> a
org.linphone.mediastream.Log -> org.linphone.mediastream.a:
    java.lang.String TAG -> a
    boolean isLogEnabled -> b
    boolean isLoggable(int) -> a
    void i(java.lang.Object[]) -> a
    void i(java.lang.Throwable,java.lang.Object[]) -> a
    void d(java.lang.Object[]) -> b
    void w(java.lang.Object[]) -> c
    void w(java.lang.Throwable,java.lang.Object[]) -> b
    void e(java.lang.Object[]) -> d
    void e(java.lang.Throwable,java.lang.Object[]) -> c
    java.lang.String toString(java.lang.Object[]) -> e
org.linphone.mediastream.MediastreamerAndroidContext -> org.linphone.mediastream.MediastreamerAndroidContext:
    org.linphone.mediastream.MediastreamerAndroidContext instance -> a
    void setDeviceFavoriteSampleRate(int) -> setDeviceFavoriteSampleRate
    void setDeviceFavoriteBufferSize(int) -> setDeviceFavoriteBufferSize
    org.linphone.mediastream.MediastreamerAndroidContext getInstance() -> a
    void setContext(java.lang.Object) -> a
    int parseInt(java.lang.String,int) -> a
org.linphone.mediastream.Version -> org.linphone.mediastream.Version:
    java.lang.Boolean hasNeon -> a
    int buildVersion -> b
    java.lang.Boolean sCacheHasZrtp -> c
    boolean nativeHasZrtp() -> nativeHasZrtp
    boolean nativeHasNeon() -> nativeHasNeon
    boolean sdkAboveOrEqual(int) -> a
    boolean sdkStrictlyBelow(int) -> b
    int sdk() -> a
    boolean isArmv7() -> b
    boolean isX86() -> c
    boolean hasNeon() -> d
    boolean hasFastCpu() -> e
    boolean hasFastCpuWithAsmOptim() -> f
    boolean isVideoCapable() -> g
    boolean hasZrtp() -> h
    void dumpCapabilities() -> i
org.linphone.mediastream.video.AndroidVideoWindowImpl -> org.linphone.mediastream.video.a:
    android.view.SurfaceView mVideoRenderingView -> a
    android.view.SurfaceView mVideoPreviewView -> b
    boolean useGLrendering -> c
    android.graphics.Bitmap mBitmap -> d
    android.view.Surface mSurface -> e
    org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener mListener -> f
    org.linphone.mediastream.video.AndroidVideoWindowImpl$Renderer renderer -> g
    void init() -> a
    void release() -> b
    void setListener(org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener) -> a
    boolean access$0(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> a
    void access$1(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.graphics.Bitmap) -> a
    void access$2(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.Surface) -> a
    org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener access$3(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> b
    android.view.SurfaceView access$4(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> c
    android.view.SurfaceView access$5(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> d
org.linphone.mediastream.video.AndroidVideoWindowImpl$1 -> org.linphone.mediastream.video.b:
    org.linphone.mediastream.video.AndroidVideoWindowImpl this$0 -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
org.linphone.mediastream.video.AndroidVideoWindowImpl$2 -> org.linphone.mediastream.video.c:
    org.linphone.mediastream.video.AndroidVideoWindowImpl this$0 -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
org.linphone.mediastream.video.AndroidVideoWindowImpl$Renderer -> org.linphone.mediastream.video.d:
    int ptr -> a
    boolean initPending -> b
    int width -> c
    int height -> d
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener -> org.linphone.mediastream.video.e:
    void onVideoRenderingSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> a
    void onVideoRenderingSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> a
    void onVideoPreviewSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> b
    void onVideoPreviewSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> b
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration -> org.linphone.mediastream.video.a.a.a:
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] camerasCache -> a
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] retrieveCameras() -> a
    boolean hasFrontCamera() -> b
    void initCamerasCache() -> e
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCamerasSDK5() -> c
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCamerasSDK9() -> d
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera -> org.linphone.mediastream.video.a.a.b:
    int id -> a
    boolean frontFacing -> b
    int orientation -> c
    java.util.List resolutions -> d
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfigurationReader5 -> org.linphone.mediastream.video.a.a.c:
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCameras() -> a
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfigurationReader9 -> org.linphone.mediastream.video.a.a.d:
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCameras() -> a
org.linphone.mediastream.video.capture.hwconf.Hacks -> org.linphone.mediastream.video.a.a.e:
    org.linphone.mediastream.video.capture.hwconf.Hacks$BuiltInEchoCancellerModel[] mBuiltInEchoCancellerModels -> a
    boolean isGalaxySOrTabWithFrontCamera() -> a
    boolean isGalaxySOrTabWithoutFrontCamera() -> h
    boolean isGalaxySOrTab() -> b
    boolean isGalaxyTab() -> c
    boolean isGalaxyS() -> i
    boolean hasTwoCamerasRear0Front1() -> d
    boolean isADR6400() -> j
    boolean isSPHD700() -> k
    boolean isSGHI896() -> l
    boolean isGT9000() -> m
    boolean isSC02B() -> n
    boolean isGTP1000() -> o
    boolean isLGP970() -> p
    boolean needSoftvolume() -> e
    boolean needGalaxySAudioHack() -> f
    boolean hasCamera() -> g
org.linphone.mediastream.video.capture.hwconf.Hacks$BuiltInEchoCancellerModel -> org.linphone.mediastream.video.a.a.f:
    java.lang.String manufacturer -> a
    java.lang.String model -> b
org.linphone.mediastream.video.display.GL2JNIView -> org.linphone.mediastream.video.display.GL2JNIView:
    void init(boolean,int,int) -> a
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> b
    void access$0(java.lang.String,javax.microedition.khronos.egl.EGL10) -> a
org.linphone.mediastream.video.display.GL2JNIView$ConfigChooser -> org.linphone.mediastream.video.display.a:
    int EGL_OPENGL_ES2_BIT -> g
    int[] s_configAttribs2 -> h
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> d
    int mDepthSize -> e
    int mStencilSize -> f
    int[] mValue -> i
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
org.linphone.mediastream.video.display.GL2JNIView$ContextFactory -> org.linphone.mediastream.video.display.b:
    int EGL_CONTEXT_CLIENT_VERSION -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
org.linphone.mediastream.video.display.OpenGLESDisplay -> org.linphone.mediastream.video.display.OpenGLESDisplay:
    void init(int,int,int) -> init
    void render(int) -> render
